@Guest 00:00
こんにちは
@Guest 00:01
こんにちは
@Guest 00:04
今週のitサイドを始めたいと思います。ユアテンサイドは、ユーザーインターフェイスと、テクノロジーを愛する開発者のためのポドキャストです。
@Guest 00:14
最新のweb標準の動向や開発、フレームマークの変遷、またまたurやuxに関することまで
@Guest 00:20
毎週フロントエンドの情報を発信していくことを目的としております。え、ハッシュタグはシャープUIT、アンダースコアインサイド。
@Guest 00:28
ご意見やご感想はいつでもお待ちしております。どしどしツイートください。
@Guest 00:32
そしてですね、今回は私こで4dともにですね。えーは、サミでゲストに加えまして、ちょっと今日はですね。
@Guest 00:41
チェンジログ回りの話をしたいなと思っておりますということで、よろしくお願いいたしますよろしくお願いします。
@Guest 00:48
ちょっと今日話したいことがあって、はい、今収録してるのが9月24日なんですけど、この前連休だったじゃないですか。はいはい、
@Guest 00:56
あの連休の時に、私、あの自分の管理してるossの大量にある、リノベートを裁く作業みたいなのしていて、はい、あの、そのなんかリプ1人だけ更新されてても、実際パブリッシュされてるパッケージのリノベートがこう古いままだったら、意味ないみたいなのもあって、
@Guest 01:11
結構リリースをする時があったんですけど、あの、そういう時に普段からスタンダードバージョンっていう。はい、同性成のチェンジログのやつをつか
@Guest 01:19
あってて、ちょっとその辺をの設定が実はすごい雑で、今まで綺麗なチェロができてなかったんで、見直したりとかしてたんですけど、
@Guest 01:26
まあ、ossとかだったら、バージョン自体に意味があるというか、パッケージという観点で、バージョン自体に意味があると思うんですけど、結構社内ツールとかだと、その
@Guest 01:36
ライブライ的に使ってるものはもちろん意味があるけれども、プロダクト的に使うものは意味がなかったりとか、まとはいえ、なんか、リリースフローにギットのタグは使ったりするよね。みたいなのがあると思う
@Guest 01:46
ってて、なんかそのえ、ライブラリ的なものだった社内のものの、リリースノートとかって、どうやって管理してるのかなっていうのをちょっと今日はお話ししたいなと思って。あの、玉田さんも
@Guest 01:57
と、アイコンアセットのライコンをnpmパッケージと内ではいかい開発してたりとか、えと、ライコン管理用のuyの方もかで出してると思うんで。なんかその辺って、
@Guest 02:06
あの、それぞれどういう風なリリース、フロート、リリースノートを管理してるのかな。みたいなのを、今日はちょっと聞きたいなと思っております。
@Guest 02:15
じゃあ、まずあれですね。アイコンのプリリースフローについて説明しますね。はい、あのま、
@Guest 02:22
まずアイコンっていうのが、あのアイコンさっき言ってた。アイコンセット管理ライブがいい
@Guest 02:28
で。なんですかね。社内本と王様みたいなものに、うんなんってます。
@Guest 02:33
リリースの観点で言うと、大体3つ種類があるのかなと思っていて、1つがはい、
@Guest 02:40
そのウェブサイトのリリースですね。そのライコンのま、ギャラリーページみたいなのとかが、用意されているんですけれども、それは基本的にその
@Guest 02:51
マスターにマージされたタイミングで、まあ、自動的にデプロイみたいな感じです。なんで、ま、リリース
@Guest 03:00
っていうよりは、まあなんですかね。あんまりバージョンとかは関係ないリリースですね。はい
@Guest 03:05
はいはいはい、うんうんで、
@Guest 03:07
もう1つが、npm形式での
@Guest 03:11
エースですね。これは、あのまあさっき言ってた。その普通にそのライブアイとして使うためのまものになっていて、またえば。まあ、リアクト用のパッケージとか、美用のパッケージみたいなのが
@Guest 03:22
提供されています。これは、ままさしくさっきって言ったその
@Guest 03:27
まあ、ライブラリのとしての提供なので、まあ、バージョンを決めてあげて、で、リリースっていう感じでやってます。これも、一応、自動化は終わって
@Guest 03:37
はる状態ですね。で、もう1つが。そのアイコンのデータをまcdmというか、
@Guest 03:48
まあ、そのインターネット上にで利用するためのリリースっていうのがあって、で、これははいあれですよね。その
@Guest 03:56
まあ、そのsvg形式で使えるようにする。直接あ、アクセスして使えるようにするとか。
@Guest 04:01
あはあ、はいはい、ウェブフォントの形式でこう変換することで。まあ、ホントさんもそうなんですけれども、そのウェブフォンと読み込んででま、それをこう
@Guest 04:13
まクラス名なりでこ
@Guest 04:15
はい、はいはいはい
@Guest 04:16
でそうですね、そう、あのアイコンもまあそのも文字として使うみたいなこ使い方っていうのができますね。でま、これも
@Guest 04:26
バージョンによってリリースされるっていう感じになってます。で、ま、これ3つなんですけど、もま多分今回
@Guest 04:35
関係あるの。後ろ2つかなと思って、まあ、そのバージョンの管理の方法とかっていうはいですね。これしょんあと、リリースノートの
@Guest 04:44
そうですね。そうすね、バージョン管理とか、リリースノートとかどうしてるかなっていうとこでですね。
@Guest 04:50
で、す。1番最初のウェブサイトの管理方法は、まマスターにまじさえたいタイミングで、リリースっていう
@Guest 04:58
感じなんですけど、も、後ろ2つがまキットでタグを打ったタイミングで、リリースっていう風に、今な
@Guest 05:06
あ、あ、はいはいはい、なるほどなるほど、タグプッシュのタイミングで、試合が動いて、リリースしてるっていうそうです。
@Guest 05:15
で、ま、そののタグの名前によって、まあ、そのnpmのパッケージのリリースと、
@Guest 05:24
そのまェブフォントやま、sbgの形式でのリリースっていうのがされるっていう感じになると思います。はい、
@Guest 05:34
なるほど、なるほど、あ、これなんかチェンジログの話からめちゃめちゃそれるんですけど、まあ、パッケージ管理という点でちょっと聞きたいんですけど、その
@Guest 05:42
タグ打つ時って先にあれですかね。パッケージェイソンのバージョンあげてから、そのこと大目印にタグってプッシュするって感じなんですかね。
@Guest 05:52
そうですね、あとま、多分1番いいのは、そのちゃんとその
@Guest 05:59
cli経由で、タグとまリレースを同時にやるってのは、それこそそのスタンダーバージョン
@Guest 06:07
です。とかまあ、あとコンベンショナル、えーでプロイえ、チェンジログですかね。ま、それそうですよ、それを使うのがいいっていう感じでは分かってるんですけど、ま、今はちょっと現状あれですよね。そのタグを打つところまでは
@Guest 06:22
やって、そのあとまリリースを出すのは、手で、人がチェンジを書いて、
@Guest 06:27
リリースっていう感じですね。
@Guest 06:29
事前にこうバージョン番号を決めてま。これは、例えばマイナーアップデートだから、
@Guest 06:35
ままい。マイナーバージョン、インクリメントしてで、プッシュしたタイミングで、そこでこう
@Guest 06:40
あの、ギターのタグの方をプッシュしたタイミングで、リプロが走るっていう風な風呂でやってるって感じなんですね。はい、
@Guest 06:46
そうそうでま。一応バージョンの話をすると、
@Guest 06:50
慣習的にえま、メジャーアップデートは、あのおっきな変更みたいな感じで、マイナアップデートが
@Guest 06:59
なんですかね。アイコンの変更を伴う変更なんで、まあ、新しいアイコンが追加されたりとか、なんか、
@Guest 07:07
アイコンの微修正が加わったりとかっていう感じで、パッチアップデートは、アイコンの変更はない、そのライブダ側の変更みたいな。
@Guest 07:17
はいはいはいはい、
@Guest 07:19
うんていう感じになって、なんか
@Guest 07:21
こうスムバーっぽい感じというか、
@Guest 07:23
まあ、そうですね、そうですま、大体そんな感じってあ、
@Guest 07:26
でもいいですね。なんか、そのタグプッシュケーキで、なんか結構あのパッケージで困りがちなところって、あの、それこそ
@Guest 07:35
あのスタンダードバージョンとかも。私も結構外部向けのパッケージとかだと使ったりするんですけど、例えば、今車内とかだと使うのに困る時とかが結構あって、それが何かって言うと、あのモレポと相性が悪いみたいなのとかもあって、
@Guest 07:48
うん、なんか、モノレップからチェンジログを生み出すのも辛いし、その何よりもとレルナとかでパブリッシュをしようとすると、あそこで、そもそもバージョンのインクリメント走っちゃうじゃないですか。そうです、あの、
@Guest 08:01
っていうのが、このタイミングがお互いにこう。あの、ほんとはレルナがれでインクリメントした後に途中に入るといいんですけど、なんかできなくて。結構社内的なパッケージ使う時とかとも、このこともあって、辛いなとかって、
@Guest 08:15
手書きも辛いけど、ツールとの相性も良くないみたいなの。結構よくあって、私も悩み、
@Guest 08:22
その辺は悩んでたりと
@Guest 08:23
するんです。
@Guest 08:25
そうですよね、ま、多分パッケージ1つだと全然考えることないんですよね。
@Guest 08:30
そうそうなんですよね、そうなんですよね、やっぱりでも、手書きになりがちなんですかね。
@Guest 08:34
結構車内とかだと、特になんかあまり力を入れて書くっていう、そこに優先順位がい
@Guest 08:43
そうなんですよね、
@Guest 08:44
下がりがちっていうところはありますよね、
@Guest 08:46
そうなんですよね、それは結構あるなと思
@Guest 08:50
と、後でショーノートに埋め込みますけど。え、少し前にあのルビー系のジェムとか管理してる人がなんかはnpm、界隈、スタンダーバードバージョンとかもそうなんです
@Guest 09:00
けど、そのチェンジログを自動スール、自動生成するツールが結構あるんで、作ってる側は楽だけど、あれ
@Guest 09:06
で結構そのしょうもないものも入ってしまって、読む側、辛いよねって話をしてて、
@Guest 09:11
いや、それはほんとにそうだなと思いながら思ってて、なんか自動生成も微妙だけど、手書きも辛いっていう時って、なんかみんなどうしてるんだろうなって、最近結構気になるんですよね、
@Guest 09:23
そうですよね、なんかあれですよね、あの、自動生成
@Guest 09:27
っていうのは、多分、コミットのメッセージをこうずらっと並べたな感じになってしまう。
@Guest 09:33
そうですね。そうですね、なんで今も話あったように、コンベンション、アルコミ
@Guest 09:37
とかに合わせて、それによってこれフィートから始まってるから。これはフィーチャーっていうので、ずらっと並ぶみたいな感じですよね。
@Guest 09:47
なんでしょう。例えばや、実際私も提供してるパッケージとかの、あの、普通にossとかで提供してるパッケージのチェンジとかもかなりカオスになってて、フィートから始まると、フィーチャーズっていうhは思われて
@Guest 10:00
みたいな。こういう形になるんで、なかなか
@Guest 10:04
こうなると、例えばドキュメントチェンジスとか。あの、ほんとは何かしらのドキュメントにおっきな変更があったらいいんですけど、これ自動で生成されちゃってるんで。アップデートオールコントリースターズrc、スキップciとかが入っちゃう。
@Guest 10:19
これって、何かって言うと、あのリードミーにあのこの人が貢献してくれてます。
@Guest 10:23
エリアみたいなの作れるんです、はいはいはい、そのツールがドックを追加するんで、こうすごい本質的じゃないものが入ってしまうってのは結構あって
@Guest 10:33
ま。これって、読む側として辛いよなとかは日々感じますね。
@Guest 10:37
その自動生成のど、チェンジログの自動生成っていうのは、なんか設定みたいなのは結構細かい感じなんですかね。
@Guest 10:46
あ、それで言うと、それをちょっと連休調べてたんですけど、一応あ、色々。設は定自体はでき
@Guest 10:53
で、スタンダードバージョンっていうやつの話と、スタンダードバージョンっていうのは、コンベーションアルコミッツにあったものからチェンジログを作る
@Guest 11:01
かつ。リリースとかをを支援してくれるツールなんですけど、スタンドバージョンっていうのは、スタンダードバージョン、えーバージョンの後に、え、
@Guest 11:11
コマンドとして、リリースアスっていうのがあるんで、リリースアスメジャーとかっていうコマンド
@Guest 11:17
っていうので、メジャーバージョンとかをやるんですけど、これを打った段階でデフォルトでは。フィートとかフィックスとかがあると、自動でそのフィーチャーズとかっていう風に出てくるっていう感じなんですけど、拾えないものが結構デフォルトではあって、
@Guest 11:31
例えばポッドキャストの第54回でば、UITプレイブック開発、ガイドラインの話をしたと思うんですけど、はいはいたガイドラインとかって、ドッグとかのコミットメッセージが結構増えるはずで、そのそうで管理していると、
@Guest 11:44
ただ、デフォルトではドックは無視されちゃうんですよね。そのスタンダーバージョンとかって、なんでその自分たちで、多分ドッグとかドックスみたいなのをこう
@Guest 11:52
つけたら、それはドキュメント地に遊びできるみたいなのはい
@Guest 11:56
じですね。なんで、自分たちで貸すためのセクションを追加することはできるけれども、逆にこれに該当してしまうと、全部チェンジログに吐き出されてしまうっていう感じになってます。で、一応なんか
@Guest 12:09
シエルオプションみたいなのがあって、例えばスキップっていうオプションとかはあって、そのスキップタグとかをすると、ギットのタグが
@Guest 12:18
打たないでおいてくれるとかは一応あるんですよね。なんで、例えばえケンジログ書いて、コミットはするけれども、ギットのタグは打たないんで、最悪、そのギットコミットメントとかで、
@Guest 12:27
あの手書きで、チェンジログのいらないところを消して、タグを打ち直すみたいなのは、一応できるっていう感じですね。
@Guest 12:34
なるほど、そう
@Guest 12:35
なんでなんかこうカスタマイズはできるけれども、なんかどっちかって言うとこう。本質的な問題の解決っていうよりは、主導で修正できる余地を残すっていう感じの
@Guest 12:46
カスタマイズが多いかなと思います。
@Guest 12:48
いや、でもなかなか解決は難しそう
@Guest 12:52
そうですよね、ですよね、
@Guest 12:54
ま、多分それで言うと、ほんとにコミットメッセージをちゃんと書くっていうしかないなくなってしまうですよね、ですよね、
@Guest 13:04
この辺ってどどうなんでしょう。例えば、なんか自動生成すると困るの
@Guest 13:11
困る例として、例えばスカッシュマージを使うかどうかみたいな話に出てくるのかなと思ってて、普通にマジおすと、あのすごいカオスなことになるんですよね。はいはいはい、
@Guest 13:22
どうしても
@Guest 13:24
なんかコミットメッセージを綺麗に書くってなると、結局じゃあ、そのためにスカッシュマージに基本的にそのプロジェクトはしましょう。みたいな話も出てきてしまうよなみたいなの
@Guest 13:34
ちなみにどうしてます。手動で今書くにあたって、マシとかは、かし、マジでやってるのか、普通にマジコミと入ってるのかって。え
@Guest 13:42
と、ライコン自体はスカッシュマーでそんで引いちゃうブランチはマージしてますね。
@Guest 13:48
はいはいはいはいあならあれですね。一応、手書きで書くときも、その大量のコミットは残ってないんで、書きやすいのを書きやすいっていうと、こうん、うん、うんですかね。うん、
@Guest 13:57
あ、それで言うとあれですね。そのそのまチェンジログ書く時に、ビットハブのプロリクエストのepaを使って、どこまでマジするとか。
@Guest 14:07
はいはいはいはい、
@Guest 14:08
取れるともしかしたら、そのスカッシュマージせずに、スカッシュマージした時のような、そのうんうん、コミットメッセージを取れる。あ、ただ、
@Guest 14:18
それが今できるかどうかはちょっとわかんないですけど。うん、うん、うん、うんうん
@Guest 14:24
ああ、なるほどなるほど、確かにそれあ、でも確かにその方がいいかもしれないですね。なんか、例えばその
@Guest 14:30
バージョン番号、インクリメントするようなコメントとかって、なんか結構みんなマスターに直で打ちがちとかあると思うんで、なんかこう。
@Guest 14:37
例えば、スタンダードバーバージョンとかだと、デフォルトでコミットまで売ってしまうんですよ。ってなると、それってプルリクエストではないんで、なんかあの、
@Guest 14:47
結構そういう細かいのって、プルリクじゃなくて、時プッシュする人もとかするケースもよくあるんで、なんか、そこを無視できるって意味では、タブリアとかから、プロリケストの情報を参照するって方がいいかも
@Guest 14:59
しんないなと、
@Guest 15:00
ちょっと思ったりは
@Guest 15:02
いや、でも、やっぱり、コミットメッセージを綺麗に書いて
@Guest 15:05
置というのはいかなる場合でも結構便利。そうすうん、うん、
@Guest 15:10
なんであんまり適当なポリットメッセージを書かないっていうのは
@Guest 15:15
そうすね。そうですね、そういうことかね、うん、うん
@Guest 15:21
と、私からちょっとほいほい聞いておきたかったのは、あの、あれですね。そのこ、あのこみあ、チェンジログ。私あんまり正直見ないんですよね。
@Guest 15:32
あのああ、普通に差分とかコードの差分とかで確認してしまったり。うんうん、うんしてて、あんまりチェンジログをななんて言うんすかねし、信用というか、ちゃんとはいはい人あんまり見ないみたいな。
@Guest 15:44
そういう偏見がなんかあの、そういうチェンジ結構書いてきたとかあるのなら、なんかこういうところには知りたいみたいな、
@Guest 15:53
こういうところ、書いた方がいいみたいなのありますかね。そのさっきのその読みにくいっていうチェンジ、自動生成されたやつが読みにくいっていうのは確かにそうですけど、逆に読みやすいチェログって
@Guest 16:05
なんだろうかな。
@Guest 16:07
単純にあれなだけでも私読みやすいのかなと思いますね。結構やっぱりエゲパッケージのチェンジログって、まあ、そもそも
@Guest 16:15
エピケージのチョないことが多いんですけど、まあ、もうないきは諦めないない時は諦めるとして、なんか
@Guest 16:22
あった時に、やっぱり完全に自動生成されてると、割とかノイズが多いっていうのがうん、やっぱり1番あるのかなと思
@Guest 16:30
ていて。例えば警備な太鼓修正レベルのものも、プレフィックスはフィックスであるし、何かしら重大なバグのフィックスであっても、フィックスになってると、そのフィックとして生成されちゃうんですよね。
@Guest 16:41
ってなると、なんか多分読む側として、フィックスのセクションを読みたい時とか、フィックスから始まってるポイントメッセージが読みたい時って、なんか結構あのライブラリのチェンジログっていう観点だと、あ、これが直ったんだみたいなのをやっぱり読みたいよなってのはあると思う
@Guest 16:55
ていて、その使う側としてのバグみたいな
@Guest 16:58
大きなバグとかをみ見たいけれども、そうじゃなくて、なんか細かいところが結構たくさんあったりすると、なんかこうそういうんじゃないんだよなみたいなのは結構あったり
@Guest 17:07
します
@Guest 17:08
ね。うん、うん、なんで読みやすさで言うと、その辺は気にした方がいいのかなとかって思いますね。
@Guest 17:17
なんで、私も結構本質的じゃないやつは、消すようにしてたりとかはしますね。
@Guest 17:22
あとからなるほど、
@Guest 17:23
なんかあれですね。そのさっきのそのポイントメッセージから生成する系のチェンジログだと、まあ、そのフェック
@Guest 17:32
って結構思っている以上に、その重大なヒックじゃないと、ヒックってつけないみたい。
@Guest 17:37
そうじゃないと、逆にそのすごい警備なものも、フィックスでついてしまってると、なんか、1個の言葉が表す粒度がバラバラっていうのは、よく感じるよなとかはあ、
@Guest 17:47
ありますね。
@Guest 17:49
なんか、そう確かにフックっていうからにはなんかじ重大というか、まあなお治ることによってなんか変わるみたいな。
@Guest 17:55
そうっすねっていうことを期待してしまうとかはあるよなとかはありますかね。
@Guest 18:01
ま、あと、チェンジログ。単純に私が読む時って、ライブラリの公式サイトがあるぐらい重厚なライブラリならそれでいいんですけど、そうじゃない時って、バージョンいくつで、何が入ったのかわかんない時があるんですよね。
@Guest 18:13
その細かなパッケージとかってなると、ギッドハブのリリースとチェンジログだけでま。提供してて、公式サイトみたいなのは特にないみたいなのが
@Guest 18:21
多いかなとは思っていても、リアクトビューとかのフレームワークとか、タイプスクリプトとかってなると、リリースノーとか出てるんで、そっち見たら何が増えたかわかると思うんですけど、なんか、日常に使うプラグインとか、
@Guest 18:32
日常に使うライブラリって、なんか結構そのサイトとかじゃないっていうことが多いんで、なんか何ができるようになったかは、結構そこで見ることがあるかなっていう気はします。あ、
@Guest 18:42
まてか、気が付いたらできるようになってた時に、どこまでバージョンを上げていいのかを判断するときに使うっていうのが正しいかも。
@Guest 18:49
ああ、なるほど、
@Guest 18:52
あ、これこのライブラリってあれできるようになったんだってしたけれども、例えば、それが。今バージョン1.1ぐらいを使ってて、2.0でできるのはわかってるけど、2.0にあげると、なんかこうぶっ壊れそうみたいな時に、
@Guest 19:04
なんか1.6ぐらいで入ってるなら、いって、6ぐらいまであげたいよなみたい。なるほど、なるほど、なるほど、判断軸に使えるかなと思
@Guest 19:12
思います。
@Guest 19:15
うん、確かにそう考えると、やっぱり信じる大事ですね
@Guest 19:19
は読みたいなっていうな、なんでしょう。逆に、ちっちゃなパッケージというか、そのサイトとかを持つようなものでないほど、チェンジョグは読みたいかなっていうのが
@Guest 19:29
うんありますかね。
@Guest 19:32
いや、でもどうなんでしょう、そんなにみんなチェンジョグとか実は読まなくて、単集的にみんな作ってるだけ説のあるかもしんない。
@Guest 19:40
ちょっとここまで聞いてくださってる方には、ちょっとぜひ、なんか、俺はチェンジログ読むは読まないかみたいな。
@Guest 19:48
ハッシュタグ付きで書いてみてほしいですね、いいですあ、もう誰誰も読まないっていうのは作るのやめ。
@Guest 19:58
あ、あとあれですね。あの、もしかしたらチェンジログっていうのの代わりに、そのgithfのgasgcsの
@Guest 20:06
はいはいはい、
@Guest 20:07
あっちを見てるうん、うん、うん、うん。まあ、同じ内容ならまあ、どっち見てもいいんですけど。
@Guest 20:15
そうっすね。そうっすね、
@Guest 20:16
うん、
@Guest 20:19
あ、まあ。でも、トーブのリデーシーズンを私書くときは、これ、スタンダードバージョンが生成するやつをそのままコピーピーしてきてる。
@Guest 20:29
いや、もうぜま、むしろ、そっちの方がどっちもどなんかどっちに何が書いてるのかわからなくならないんで、
@Guest 20:37
そうです。そうですね、それは聞いてる人はなんかチェンジログ見るよ見ないよ。
@Guest 20:43
いや、それどころか、そもそもギのギッドハブのリリース見に行ってるから、信じるっていう存在自体をそもそもこらないよとかでもいい。
@Guest 20:52
なるほど、確かにどう
@Guest 20:54
そういうのがあるとこう。多分、リリース、ギターリリースでよければ。それの方がまあ
@Guest 21:01
楽というか、こう分かりやすくて、専用のページもできるんでいいよなとは思うんで、なんかそういうのがあったら聞いてみたいですね。
@Guest 21:08
そうですね、
@Guest 21:09
そんなとこですかね
@Guest 21:15
というわけで、今回はですね。パッケージのバージョン管理と、えーチェンジログについて話していきました。ラインのフロントエンド開発組織UITでは、このようなフロントエンドに関する議論や、キャッチアップを日々行っております。
@Guest 21:29
ビー、スリスタリーなどはですねえ、社内の学習企画から始まったコンテンツですので。そういったものも、今後も発信していきらえいければと思っています。
@Guest 21:38
またですね、ポッドキャストを通じて、ラインに興味を持っていただいた方は、え、ぜひぜひカジュアル面談からでもご連絡いただければと思います
@Guest 21:47
しと、株にですね。求人への連絡をえ、掲載しておりますので、え、そちらからお気軽にご連絡ください。今、ズームでのカジの面談とかも行っております。
@Guest 21:56
今回はですねえ
@Guest 21:59
えというわけで、今回はえーパッケージのバージョン管理と、えーチェンジログっていうところをテーマにですね。話していきました。えはねさんありがとうございました
@Guest 22:07
どした
