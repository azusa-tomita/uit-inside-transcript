@Guest 00:04
こんにちは
@Guest 00:06
えこんにちは
@Guest 00:08
え。それでは、今週もitサイドやっていきましょう。UIT INSIDEは、ユーザーイタフェースと、テクノロジーを愛する開発者のためのポットキャストです。
@Guest 00:19
最新のウェブ標準や開発、フレーワークの変遷、
@Guest 00:22
uyexに関する言葉で、様々なフロントエンドの情報をキャッチアップできるポットキャストをお送りしております。
@Guest 00:30
でえ、今回のパーソナリティはえ、私、えーはとおなじみのポテト4ディさんをお呼びしました
@Guest 00:39
それでは、えーよろしくお願いします
@Guest 00:41
はい、よろしくお願いいたします。
@Guest 00:46
でえ、今回のテーマはですねえ、ビューススタディの第5回ぐらいですかね。5回ぐらいの
@Guest 00:53
はい、
@Guest 00:54
usのテレポートについて、えっとま、今回は
@Guest 01:00
取り上げたいと思います。はいはいで、まあ、早速そのテレポと
@Guest 01:05
について、紹介してもらいたいんですけども、じゃあとほじさん紹介をお願いし
@Guest 01:10
します。はい、ポテト4ディと申します。普段ですねアティサイトでよく、えっとま、メインパーソナリティーやっていたりし
@Guest 01:18
しますけれども、今日はですね。ビースリスタディのテレポートのえ話を社内勉強会で共有してたんでま。それを話せればなと思って、こっち側で話しております。よろしくお願いします
@Guest 01:28
よろしくお願いします。
@Guest 01:30
じゃ、実際のテレポートの話に行っていきたいと思うんですけど、
@Guest 01:34
皆さんテレポートっていうのも、ご存じかどうかとわからないんですけど、も、まわかる方に一言で言うとえと、いわゆる。ポータルという機能のbjs版となります。
@Guest 01:45
テレポートが何をできるかって言うとですね。とま、本来bgsはもちろん仮想ドムを使っているえものなので、ドムの木構造ツり構造にえ、依存する形で、子供のコンポーネントは実際にドム上で子供にえーとして使われるし、
@Guest 01:59
まあ、要は絶対にここ親を超えることができないっていう。まあ、基本的なドムの木構造の
@Guest 02:05
ルールがあると思うんですけど。その親子関係を飛び越えて、全く別の場所にあるドムに対して、要素をマウントすることができる機能となっております。
@Guest 02:15
ま、要はえっとま、例えば、ページの全体のレイアウトがあって、え、その中のえっとま。例えば、メインカラムのふ
@Guest 02:22
たのこれにあるのを、そのここをクリックした時に、テレポートで囲っている様子を表示すると、そのサイドカラムの方にも表示するみたいなこともできるような
@Guest 02:32
ま、そのえ、木構造を無視したようなレンダリングができるような機能となっております。
@Guest 02:39
はい、ありがとうございます。そうですね、
@Guest 02:43
ま、普通そのエントリーポイントというか、ま、あの、実際のhtmlのマウントされるところっていうのは1つだとは思うんですけど、もま、それをまいろんなところにこう
@Guest 02:52
生やすことができるそうです。そういうねですね、テレポート結構ま、あの話をもう
@Guest 03:00
なんですかね、理屈自体はすごい単純ですよね、まあ、マウントするポイントが複数あるって
@Guest 03:05
そうですね。まあ、自由にマウントできるようになるっていうだけなんで、ま、そんなにその複雑な機能ではないと思います。
@Guest 03:14
まあ、そうですね、まただまどういうとこ一体どういうとこで使うところかっていうところがまああしかなとは思うんですけど、もまそう。実際どういうところに使ったりとかっていう。
@Guest 03:24
そうですね。ま、結構ここってま。なかなか使ったことがないとや、それができるからどうなんだっていう風にえ、思いがちな機能かなと思うんですけど、
@Guest 03:34
1番え品質するのは、まあ、元々えとちょっと歴史のえー的な話になってしまいますけど、
@Guest 03:40
あの、ジェイクエリーとかだったら、クリックした時に、新の場所にあのエメルよ子をお
@Guest 03:46
まアペンドするみたいなのってよくあったかなと思うんですけど。今そういうのができない状態ま、基本的にはやらないような状態になっているっていうま、その実動操作をしない時代にえ入ってきてますけど、
@Guest 03:57
そうなるとですね。結構困るのが1番。これがポータルに有効に働くとこだと思うんですけど、特にzインデックスとスタックコンテキストのところで、1番有効かなと思っております。
@Guest 04:08
1番品質出しますし、まあ、実質多分これで使うことが、支配的になる。
@Guest 04:14
ユースケースっていうと、ポータルっていうのは、すごい簡単に言ってしまうと、すごく簡単にモーダルをえー管理できるような機能だと思ってもらってもいいかもしれません。
@Guest 04:24
まあ、つまりはですね、どういったものかって言うと、モーダルとかって言うとですね。アプリケーション全体より、さらに、上のzpインデックスから表示したいポップアップの
@Guest 04:32
機能となります。けれども、ま、こういった機能ってえっと得てしてですね。例えば、子供の方のすごい雇用素の素の雇用にあるま、何かを追加のボタンを押した時とかに、モーダルって表示したいはずですけど、
@Guest 04:45
その雇用素との巨大要素とかで、レンダリングしてしまうと、親の方で決まっているz。インデクのコンテキスト
@Guest 04:52
に依存してしまうが、ために、モーダルの方が後ろに来てしまうとか。モーダルで全体カバーできないとかっていうのがま、結構よくあるかなと
@Guest 05:00
思っております。ま、この都合上ですねどうしてももうそのスタックコンテキストの壁は超えられないので、ポータルがない状態だと、結構異びな解消方法をすることになるかなと思います。
@Guest 05:10
例えばですね、ま、これはやってる人そんなに多くないかもしれないですけれども、ビーコンポーネントのライフサイクルフックの方でえ、特定の実ドムにえ、データを反映するていう風にして、えと、実ドム状に。自慢で
@Guest 05:25
ビーコンポーネントの内容をマウントするって方法もありますしえ、もう1つ多いもので言うとですね。bugsで言うと、例えばbxにur用のネームスペースを用意して、そこにこのモーダルが表示されてるウルカルみたいなフラグを
@Guest 05:39
ルートステートとかで持ってしまったりとか。ま、u割の場所で持ってしまって、グローバルに持って、
@Guest 05:44
そのフラグを持って、例えばそのエントリーポイントにかんあるようなアップビーみたいなところに、
@Guest 05:49
モーダルのコンポレントを書いておいて、出し分けをするみたいなことをやることとかってのが結構あるかなと思います。
@Guest 05:56
で、えま、これ自体はですねまあ、できなくはないけれどもま結局そのえ、グローバルのベックスのえ、領域とかがフラグだらけになってしまうし、
@Guest 06:05
似たようなモーダルだけど、ちょっと違うってものが出るたびに、じゃあ、それをえu合上のえ、フラグを増やすのか。まは、たまたま微妙に共通化したもので、さらにアクションに対して要求するペイロードを増やして、タイプみたいなのを切り替えるのか、みたいなことにな
@Guest 06:19
できてま。結構あんまり複雑なとかま望んでいない。えー、管理になるかなと思います。
@Guest 06:24
ただですね、ポータルを利用すると、まあ全く関係ないところに雇用素からまごい親の方にでも転送できるんで、ま。こういったフラグ管理とかを解消できるっていうところが、まあ、ポータルの嬉しさなのかなと
@Guest 06:36
思っております。
@Guest 06:37
やっぱり、モーダルに使うっていうのが1番多そうですよね。
@Guest 06:42
そうですね、
@Guest 06:47
で、取り扱うっていうのは結構やっぱりあの一面になんかこう出したいみたいなのってわかるんですけども。やっぱり、その兄弟要素とか別の親と親に、そのz。インデックスを変なインデックスzンデク設定されていると、なんか
@Guest 07:01
よくありますよね。その前、面になんか塗りつぶされてるのに、なんか一応そだけ飛び出してる。あ、そうそう
@Guest 07:08
ちょっと暗くなっているモーダルなのに、なんか飛び出してるとかってよくあると思うんですけど、よくある。
@Guest 07:14
まあ、そういうのを考えなくて良くなるっていうのが、まあ1番嬉しいかつま。それをbxとかを使うことなくま、シンプルに管理できるっていうのが、まあメリットなのかなと思います
@Guest 07:25
が。これこれ一応書き心地だけじゃない、もう1個利点もあるかなと。私の中で思ってて、ちょっとこれはい話してもいいですか。
@Guest 07:33
はい、どうぞ、あの、こういった。まあ、モーダルの管理を。bxでやっているパターンとかってすごく多いかなと思うんですけど。まあ実でも触るよりはいいだろうっていうので、まか、どの範囲でできるなら、
@Guest 07:44
ビレックスでやろうっていう場合も多いかなと思うんですけど、これありがちなのが、例えば、モーダル系のものが存在している時に、まあ、何かその
@Guest 07:53
こうパップとか出している時に、ライフサイクルフックに依存しないで、グローバルのステートになってしまうので、なんか動かした時に、そのフラグの消し忘れとかをすることによってデグレするとか、めちゃめちゃあるんですよね。今は、その
@Guest 08:05
あのモーダルの表示表示表示がフォールスリする。ロジック忘れてました。とかってのデグレとかって、まあ割と見るかなとおも
@Guest 08:12
持っていて、はいま、ただこれをポータルで書いておいて、ただ、コンポーネントのローカルステージとして、そのポータルの表示表示をやっておけば、まあ、例えばポータルのの中に出ているモータルの操作中に何らかの要因によって、提示繊維が発生した時とかは、
@Guest 08:27
もうそのコンポーネント自体が消え去るので、サイクル復帰に順じて転送したいと言っているコンポーネント自体が消えるので、え、その辺のえ、フラグ管理とかも結構解放されるってのもいいところかなと
@Guest 08:38
持ってますね。
@Guest 08:40
そうですよね、確かに確かにそのえテレポートのまあ
@Guest 08:44
マウントしてるコンポーネントが、あのマウントから外れたらもうその時点でっていうすごいシンプル、
@Guest 08:50
うん、すごいシンプルになるかなと思います。なんで、そのページで管理しておけば、まそのページのコンポネートから、別のページコンポネントに100した時点で、
@Guest 08:58
もうフラグ消し忘れとかは気にせずま。単純に美容のライフサイクルフックにのっとって、全ての処理ができるってのが結構いいところかなと思っております。
@Guest 09:08
はい、そうですよね、うん、すごいあの、僕もあのビューで初めてそのなんていうかね。レポートというか、ポータルの概念概人っていうか、まあ、
@Guest 09:17
APIとかそういうライブの理由をしてたんですけれども、まあ結構そう。あの、僕さっき言っていたそのフラブで管理するっていうか、そのグローバルなステートでは。その仮想ド部の
@Guest 09:27
コンポーネントをあの状態として持たせるみたいなところでま。それで、全然
@Guest 09:32
あの不都合ないじゃないんですけれども。まあ、確かにそういうちゃんとそのそれって、あの管理できること前提っていう話でもあるので、
@Guest 09:41
うん、うん、そうですよね、そうね、いや、確かにそう初めて知ってなるほどなと思いました。
@Guest 09:46
私も結構あの、それで書いてるときはそれで、まあ別にふこないし、まあ、ちょっと
@Guest 09:52
なんかモーダルのフラが大量にあんの。やっちゃ嫌だけどいいかなとは思ってたんですけど。まあ、単純にどうしてもヒューマンエラーとかって、コード書いてる以上出てくるといいますか。
@Guest 10:00
あの、ミスしないんだったら、タイプスケルプトなんていらないって話になるのと一緒な。
@Guest 10:05
やっぱ、人間はどうしてもミスするっていう前提に立つと、まあ、何かミスがあった場合でも、きちんと動くようにな。えーと、まあ、そもそもミスする要因がない方がいいかなと思ってるんで。まあ、ポータルえとか、テレポート使えるなら使った方がいいかなと
@Guest 10:19
思ってますね。
@Guest 10:20
確かに確かに
@Guest 10:22
ありがとうございます。
@Guest 10:25
ビュージのあの、その名前についてちょっと話を聞きたいなと思うんですけど、結構今さっきまでも、そのポータルとテレフォーと言い、間違えるみたいなの
@Guest 10:35
あったと思うんですけれども、そうそうあ、そうです。はい、テレポートの名前の由来みたいなのをもし、あの説明できるなら
@Guest 10:45
そうですね。はい、そう私もあの実はbjsこのテレポート機能が、ビュースに入ることが決まった時点では、まだ名前がポータルだったんです
@Guest 10:54
よ。これって、ああでそのレポートに変わったのが、アルファの11ぐらいで。あ、今今ベータの14ぐらいなんですけど、ビジこれ、収録時点で、
@Guest 11:02
アルファの11ぐらいで、要はビュー3でます。って言った時と、ビュー3ののrfcが
@Guest 11:09
ほぼほぼフィックスした頃までは、ずっとポータルだったんですけど、ある日テレポートに変わったと
@Guest 11:15
で、今はもうテリポートで使えますが、ポータルで動いていた時期も、ビー3のネクストには確かあったはずて感じですね。
@Guest 11:22
で、なんでこれがテレポートになるかっていうと、そもそもhtmlに、ポータルタグがあるんですよね。そのhml自身の
@Guest 11:30
自体は、イケーションにポータルタグがあって、まあ、要はまあ、大体同じような意味を表すやつなんですけど、そのポータルというタグが、hmmに存在するにも関わらず、まbjsの方で、
@Guest 11:43
同じ名前を使っていいのか、みたいな議論がありまして。ま、そのコンフリクトしてるよねっていう話が
@Guest 11:48
ま、できれば、解消した方がいいんじゃないかっていう話になって、えー、テレポートという名前に変わったっていう経緯が
@Guest 11:55
あったりします。
@Guest 11:56
基本的にですねこの辺は、ビージの元々のこれまでの作りが結構影響してるよなと思っていまして。まあ、例えばですね、
@Guest 12:04
ちょっとリアクトの話をしますけど、リアクトとかって、結局jsxとかをhmlとして書いていても、最終的にはクリエイトエレメント
@Guest 12:12
に変換されるので、実ドムと共存することってそんなにないかなと思っているんですけど、実ドムというか、まあ、リアと最終的にはリアクトの世界でレンダリングを行うと思うんですけど、
@Guest 12:23
ビューシスの場合はですね。元々、あのスクリプトタグとかから読み込んで、あの、普通のイベルと共存することもあった。技術っていうことを考えると、
@Guest 12:30
ま、結構普通の。そもそもhtmlとして書かれてるコードがある。上からビュージsを載っけるっていうのがよくあるシチュエーションとして、今まで存在した
@Guest 12:38
わけなんですよね。ってなると、ま、ちょっとビー3ではあんまりそういった。使い方は想定されてないように見えるんですけど、
@Guest 12:46
これまでえ、なんで。元々bjsにはスタイルガイドの方で、将来的に追加されるhmlタグと名前が競合することを避けるために、必ず複数単語の根本レント名を使いましょう。とか
@Guest 12:58
ていうのが、スタイルガイドで、明確に制定されていたりとか、ま、とにかくhtml自体の仕様と競合してはいけないっていうようなベースの文化みたいなのがありました。と、
@Guest 13:07
まあ、実際実害も。どうしてもクーダルとかえ、完全に被ると出てきちゃうと思うんで。
@Guest 13:12
ま、そういったえー、文化があって、まあ、それを考えると、やっぱり
@Guest 13:17
新しく入るポータルについても、イェル自体のスピエーションとコンプリクトするのは、よくないんじゃないかっていうところで、テレポートに変わったみたいな
@Guest 13:25
経緯があります。ほうほうほう、
@Guest 13:27
なるほど、そうですよね、まてて、プレーと元々そのudsって、そのテプレート割を前提とした設計になっているので、
@Guest 13:37
あれですよね。あの、コンポレントの名前を2単語以上にするっていうのを、そのhtのあのタグとバッティングしないように。あ、そう
@Guest 13:45
そうですよは、将来的に追加される可能性があるんじゃないですか。あの単一単語だったら、
@Guest 13:51
はい、
@Guest 13:52
ま。例えば、今は今はないけれども、なんかもしかしたら全然違う場なんでしょうね。何があるんでしょうえ、実際の例で言うと
@Guest 13:59
まああれですかね。ポもまさに
@Guest 14:02
タルで、まさにポータルもそうですし、まあ、例えばまこれはもう今はあれですけど、ま、例えば、
@Guest 14:07
imgタしかない時代に。じゃあ、俺らの画像はピクチャーって名前にしようって
@Guest 14:12
きゃって、タグ付けてたら、もしかしたらコンプリクトしていたかも。みたいな話とかは、いま、そういうそのすごいシンプルな単語だと、これからも、競合する可能性っていうのは出てくるんでま、それは徹底的に避けましょうみたいな感じですね、
@Guest 14:26
逆に、まあ、リアクトとかだったら、単純にボタンって名前のコンポネント作ったりとかすることもあると思うんですけど、あれはまあ、クリエイトエレメントだから、ネイティブのボタンタグとは
@Guest 14:35
別に競合もしないし、みたいなところがあるっていうのは、まあ、このbgsらしさでもあるな
@Guest 14:40
とは思いますね。
@Guest 14:42
あ、でもそれを言ってしまうと、あれですね。リア友クラスがクラスネームに変えないといけないっていう。あ、
@Guest 14:50
そうっすね、逆にジェースの制約に縛られてしまうっていう
@Guest 14:54
縛られてますね。ちなみに、あれは一応クラスネームっていうやつ自体はそのスペリケーションにあるにはあるんで、違反ではないらしいですね。
@Guest 15:05
私、普通に使ったことはないんですけど、なんか前なんか仕様に書かれてて、一応クラスネームっていうのも別に使っていいよっていう風になってるんですけど、誰が使うんだっていう感じでは
@Guest 15:17
長いか別に意味意味ないんでらしい
@Guest 15:21
知らなかったそうなんですよ、なんで今テレポートっていう名前になった
@Guest 15:26
そうですね、
@Guest 15:27
あれですね、テレテレポートごいこの感想ですけど、名前好きですね
@Guest 15:31
テレポート、テレポートなんかおしゃれですよね。
@Guest 15:35
おしゃれよそう、おしゃれ、
@Guest 15:40
おしゃれですよね。ってなんだよ。あ、ちなみにこれ、ポータルって名前の豆知識で言うと、
@Guest 15:46
その多分、このポータルっていう名前は、ちょっと。hllの方の仕様はわかんないんですけど、少なくとも、ビュージとかのポータルとかの文化はバルブっていうあ、
@Guest 15:57
会社。あのはい、チームはいはい、チームの会社のゲームにポータルっていうのがあって、それは2つの穴を
@Guest 16:05
開けることによって、それがああ、はいはいはい、物を移動できるみたいなやつなんですけど、多分それが由来っぽいですね。
@Guest 16:11
あれですね、青とオレンジの
@Guest 16:13
あ、そうです、アウトオレンジのやつですね。っていうとこから取られてるのかなと
@Guest 16:16
思いますね。
@Guest 16:20
理由は、テレポートっていう、まあ、そういう解決策を提示するっていうことに決まったわけですけども、一方で、
@Guest 16:28
実はリアクトにもポータルの機能が
@Guest 16:31
あったりするんですね。僕、これ内容しか知らないんですけど、もま、これも同じような概念でして、あのコンポーネントの中に、まあそのポータル。
@Guest 16:40
これはあれですね。クリエイトポータルっていうapがありまして、クリートポータルで、連打されたコンポーネントを中に入れることで、
@Guest 16:50
自由に。まあ、そのマウントポイントの外に、コンポーネントをえ、仮想ドムを置くことができるっていうものになってるんですね。
@Guest 16:59
これはそうですよね、結構や、でも、これも略とゆうぽゆのテレポートにだいぶ近い機能
@Guest 17:10
ではあるんですけど、もま一方違うところで言うと、あの、逆とコンポーネントの
@Guest 17:17
クリエイトポータルっていうのをえ返す。コンポーネントをまず用意しないといけないっていうところが、まあ、多分違うところかなと思いますね。
@Guest 17:27
そうですね、ちなみに、どっちが好みとかありますか。
@Guest 17:32
ああ、そうですね、確かにうん、好みで言うとあれですね、その文章量が短いのは確実に理由ですよね。ん、うん、
@Guest 17:42
まあまあそうですね、
@Guest 17:43
テレポートっていうタグがあってっていうでま一方でそうですね、クリエイトポータルっていうも、
@Guest 17:52
指定しないといけないで、逆とのドキュメントの例を見ると、結構うん、
@Guest 18:01
いや、でも、流の方がなんか直感的な気がしますね。そもそも、あのこん。まずコンポーネント用意しないといけないっていうところ。あ
@Guest 18:10
ああ、そうですね、そうですね、
@Guest 18:12
ま、逆に自由なもここあの例でモーダル。ドキュメントの例だと、モーダルっていう名前のポンポンメント作ってしまってるので、はいは、
@Guest 18:23
いろいろんな好きな名前を決めるっていうのは、逆トの特徴ですね。そうね、ポータル
@Guest 18:31
かつコンポーネントとして定義ま、結局レンダーで返して、一応コンポーネントとして定義できるっていうのは、結構
@Guest 18:38
djsにはない良さなのかもしんないですね。なんか、bgsだと、あ、そうでしたね、その話もちょっとしとこうかなと思うんですけど、
@Guest 18:45
あくまでもテレポートタグって、セレクターを指定するだけなんで、そのない場合は、レンダリングされないみたいな問題とかがあって、あたい対象がない場合は。
@Guest 18:55
レンダリングされないし、もちろん、これはちょっと。社内勉強会の時にも話に上がってましたけど、あのせ、セレクトが取りうる値が複数ある
@Guest 19:04
場合とか。まあ、idで指定したらそもそもないとは思うんですけど、id以外で指定すると、
@Guest 19:09
クラスえじゃ。ノードリストノードではなくて、ノードリストが返ってくる場合とかに関しては、0番目に必ずマウントされてしまうみたいな
@Guest 19:18
ものがあるんで、その辺はちょっと。ヒューマンエラーをなんかえー、招きやすい設計になってるのかな、というのはちょっとしますね。リアクトの場合はそうですね、
@Guest 19:27
明確にモーダルというコンポーネントになってくれるんで、その辺はやりやすいのかなとか
@Guest 19:33
思いますね。
@Guest 19:35
まあ、あれですね、その名前をちゃんと決めないといけないマウントのさっきのえーidとididです。まあ、普通にidを指定してあげた方が
@Guest 19:45
そうですね、id指定している方がいいかなと思いますね。セレクターとはいえ、もしクラスとかで指定してて、2つとかあった時にうん、事故るってこと考えると、確か
@Guest 19:54
そうそう。あと、今思いついたところで言うと、そのクラスえちゃクラスじゃない。え、コンポーネントを作る必要があるので、
@Guest 20:03
ま、逆に言うと、そのコンポレントのそのマウントとか、アンマウントに復帰すること、いろんなことが書ける
@Guest 20:10
っていうところもありますね。なので、あれですね。例えば、モーダルで言うと、そのシュッとこう表示させたりとか、
@Guest 20:17
アニメーションで、消えるときのアニメーションとか表示させる時のアニメーションのま定義が
@Guest 20:24
若干楽かな。あ。あ、うん、うん、うん、うんうん、そうっすね。それも確かに今思いついたけど、
@Guest 20:33
そこの利点ですね。うん、うん、うん、うんうん。
@Guest 20:35
結構こうして見ると両者違いがある感じはします。
@Guest 20:42
あれですね、どちらにしても、コンポーネントのレンダーの過疎ドムの中に、その外にある。ドムっていうのを定義するってのは両者一緒
@Guest 20:52
で、これがあの。まあ、そのヒューマンエラーを起こしにくいっていうところには、完全同意。
@Guest 20:58
そうですね。うん、うん、確。
@Guest 20:59
しかしこれ積極的に使っていきたい、これからは使っていこうと思います。
@Guest 21:07
ら、じゃあ、ちょっと最後に1個紹介したい、もう1個紹介したいものがあるんでいいですか。
@Guest 21:12
はい、
@Guest 21:12
なんかまあ今日の話聞いてて、まあ多分もうそろそろビュージのベータも開発が
@Guest 21:20
終わりに近づいてきてるのかなという気配を感じますし、ま、ビュースも出てくれるでしょう。っていうところでもあると思うんですけど、
@Guest 21:28
まとはいえ、じゃあ、すぐにビジェストの3にアップグレードできるのか。って言ったら、まあ、そうではない。現場もやっぱり出てくると思いますし、まあすぐに使いたいっていうボも
@Guest 21:37
やっぱり出るかなとえっと思ってますとま、そういう時はですね。そもそもこのポータルえーという概念。最終的にはbgsにはテレポートとして入りましたけど、rfcとしてポータルが提案された。時にはですね。
@Guest 21:52
bgsのコアチームメンバーの1人が、そもそもそもビー2で動く。ポータル機能っていうのをポータルビーというパッケージとして、提供をしております。と、
@Guest 22:03
ま、これは、今のテレポートの機能と、大体同じ機能を。ポータルというコンポーネントと、
@Guest 22:10
マウント先トゥーの先となるものをですね。実度とか、セレクターで定義するんではなくて、ポータルターゲットという対象となる。え、コンポーネントをベッド用意して、それとの1対1として
@Guest 22:23
定義するみたいな。ま、ちょっと書き味は違うけど、ほぼほぼ一緒にかけるのかな。ポータルポータルビーという、ま、今
@Guest 22:30
結果的にはブリッジライブラになりましたけれども、ビー2でのポータルリストみたいなものが存在しますと
@Guest 22:36
で、なんでこれを。今はポータルビーで書いておいて、ビュー3になった段階でテレポートに置き換えるみたいなことも、結構簡単にできそうなので、
@Guest 22:45
もしですね。結構そのモーダルのフラグ管理とか、まあ、結構そういったzインデク都合とかuy都合っていうところで、
@Guest 22:53
設計がねじ曲がりそうで、え、ちょっと困ってるとかっていうのがあったら、ショートに書いておけますかね。書いておこうかなと思いますので、ぜひぜひこの
@Guest 23:02
ポータルビューってやつを使ってもらえればいいかなと思います。私、結構仕事でよくポータルビー使ってますけど、
@Guest 23:09
なんか、ワシンプルなライブだけあって、別になんかそのバグがあって困ったとかあることもないんで、まあ、普通に安心して使えるパッケージだとは
@Guest 23:17
思います。おおいいですね、
@Guest 23:19
なんでこれ使ってみるのがいいかなと思いますね。
@Guest 23:24
あれですね、パッとみ、ポータルターゲットを置くか、置かないかぐらいの違いそうです。
@Guest 23:28
そうですね、ポータルターゲットを置くか、置かないかの違いしか基本的にないですね。
@Guest 23:33
じゃあ、もう今すぐ
@Guest 23:34
そうっすね、今すぐ使えます
@Guest 23:35
今すぐ使います。
@Guest 23:36
ただ、
@Guest 23:38
ちょっと私これちゃんとコード読みに行けてないんで、ビュー3のテレポートのこと追い切れてないんですけど、なんか、ビュー3のテレポートは不思議な力で、サーバーサイドレンダリングに対応してるらしいんですけど、
@Guest 23:51
それまあどうやってやってるのか、正直よくわからないんですけど。いや、まあ、ポータルターゲットとポータルの関係だったら、最悪、そのコンポーネント感でうまく疎通してやれば、
@Guest 24:01
コミュニケーションはできるけど、ただのドムセレクター
@Guest 24:04
ク、エリセレクターで、どうやってやってるんだってのがちょっと。正直よくわかってないんですけど、ビュースリーのテレポートだと、どうやらそれが実現されてるみたいなんですけど、ポータルビーは確か
@Guest 24:14
ssrgは考慮されないんだっけなっていうような特徴があるんですけど、まあ、ssrgにもモダル出すことって基本ないとは思うんで、そんなに問題ないかなっていうようなあ、
@Guest 24:24
確かおうかなと思います。
@Guest 24:27
いや、ありがとうございますじゃあ、もう今すぐにでも使えま
@Guest 24:30
ね。そうですね、うんかな
@Guest 24:33
いうところではいございます。
@Guest 24:37
はいというわけでえ。今回はユースリサディのテレポートについてお送りしました。
@Guest 24:43
私たち、UITのメンバーが所属するLINE株式会社では、このようなフロントエンドに関する議論を比々行っております。
@Guest 24:52
でえ、今回のようなですねニューススタディの勉強
@Guest 24:55
かは、まあ、毎週え、社内で行っております社内勉強会での正解でもあります今後もえ、テサイトでは社内外
@Guest 25:03
問わず、どんどん情報を発信していきたいと思っております。え、また、twitterでのハッシュタグはえ、シャープUIT、アンダースコアインサイトです。
@Guest 25:13
エピソードのご意見やご感想、リクエストなど、ぜひぜひお気軽にツイートしてください。え、それでは、また次回のエピソードでお会いしましょう。
@Guest 25:23
それでは、えポとこいさんありがとうございました
@Guest 25:26
はい、ありがとうございました。
