@Guest 00:02
え、こんにちは、UITのポテトフォーディです。
@Guest 00:05
え、ユーザーインターフェースと、テクノロジーを愛する開発者のためのウィークリープブキャストUIT、インサイド。今週も始めていきたいと思います。
@Guest 00:13
今回はですね、ゲストにUITのきよさんとアモンさんをお呼びして、エピソード55でえ、紹介したlineポイントクラブのえタイプスクブスクリプト、マイグレーションの
@Guest 00:23
その後のえ、進捗共有についてやっていこうと思っております。えきょうさん、あもんさん、本日はよろしくお願いいたします
@Guest 00:30
よろしくお願いします。
@Guest 00:35
それではですね、今回久しぶりの出演となりますので。きょうさんとあんさんえ、今1度自己紹介の方、お願いしてもよろしいでしょうか。
@Guest 00:42
はい、えっと、line株式会社、フロントエンド開発センターUIT1室、フロントエンド開発サチームに所属している京ょうよと申します。
@Guest 00:52
えっと、現在担当しているプロジェクトは、lineポイントクラブと、えっと、linelivecmsプラットフォームのフロントエンド開発です。皆様よろしくお願いいたします
@Guest 01:03
はい、よろしくお願いいたしますいしますでは、あもんさんもお願いします。
@Guest 01:08
はいとこんにちはとライングロス、テクノロジー、株式会社、UITチームのとケシアモンと言います。
@Guest 01:15
きょうさんと同じく、lineポイントクラブのフロントエンド開発を担当しています、お願いしますはい、
@Guest 01:21
よろしくお願いいたします。
@Guest 01:24
それではですねえ、今回のホームペーにえー、入っていこうかなと思うんですけれどもえ、まずですね。今回のエピソードはえ、前回のエピソード55でえ、紹介してい
@Guest 01:34
だいたlineポイントクラブのタイプスクリップと、マイグレーションのえー対応のごちご実談にえとなるかなと思います。
@Guest 01:40
前回ですね、えっと、リニューアルについて話していただいたかなと思います。えけれども、えっと、ちょっとえ半年ほどがいたのでえ、改めてですね。簡単にタイプス、フトマイグレーションについての概要を強さの方に説明いただいてもよろしいでしょうか。
@Guest 01:53
はい、わかりましたえっと、まちょうど半年ぶりになりますね。えっと、今回おしお話するのがはい
@Guest 02:00
で、えっと、まあ、前回の振り返りってことで、簡単に。えっと、lineポイントクラブについての説明をさせていただこうと思います。はい
@Guest 02:09
で、えっと、まあ、前回の放送でも話した内容なので、まぜひ見ていただきたいっていうのもあったりはするのですが。はい、
@Guest 02:15
えっと、まあ、lineポイントクラブの規模感やタイプスクリプトのマイグレーション計画について、ちょっと色々おさえしながら説明していこうと思います。はいはい
@Guest 02:24
で、まず、lineポイントクラブのまプロジェクトの傾向ですね。はいはい、えっと、lineポイントクラブは、えっと、lineの主力サービスの1つとして、えっと、定義されているサービスになります。
@Guest 02:36
で、えっと、様々なプロジェクトのプロモーションになっている。えーと、プラットフォームとなっており、えっと、いろんなサービスのハブとなる役割を持つサービスの1つとなっています。
@Guest 02:46
まなので、えっと、定常的に多くの機能開発が入る案件の1つだと思っていただければと思います。はいはいでプロジェクト傾向はま、こういうこういう感じになっておりで、あとはフロントエンドのえっと、規模ですね。
@Guest 03:00
えっと、まあ単純な規模の話なんですが、えっと、フロントエンドのえっと、コードのソファイル数がちょうど3598ファイルに
@Guest 03:09
なっています。そうですね、結構多いですね、はい、多いですね、
@Guest 03:13
で、えっと、そのうちのjsファイル数っていうのが、えっと、500ファイル前後あるっていう状態ですね。はい、で、えっと、まあ、
@Guest 03:21
ちょうど今進めているタイプスクリプトのマイグレーション対応で。えっと、今はだいぶ減ってきていて、現在は頑張って43楽ファイルほどになってますね。
@Guest 03:32
はい、おしらもう1割ぐらいはタイプ、スクプトマグレッション中で減ったっていうところ、そうですかね。
@Guest 03:37
はい、えっと、タイプスクリプトマイグレーションしながら、やっぱョークファイルとか結構出てきたりする。あ、これはそうですよね、1個にまとめられるだろうってことで、まとめていった結果、だいぶ整理整頓について。えっと、まあ、50ファイル以上は多分削ってる感じですね。
@Guest 03:52
なんでそういったところも、うん、変化があったってことですね。
@Guest 03:55
そうですね、変化ありましたね、はい、
@Guest 03:59
エピソード55のタイミングでは、どこまで完了してたんでしたっけ。
@Guest 04:03
ええ、エピソード55のタイミングではまちょうどえっと、まあとで、ちょっと詳しくはお話しさせてもらうんですが、えっと、ステップ2と呼ばれている部分までが一旦完了していた状態になりますね。はい、なるほど
@Guest 04:16
で、えっと、まあまずえっと、lineポイントはえっと、まこういったちょっとファイル数が膨大だったり、あとははの開発がすごい定常的に入ってくるって傾向があるんで。
@Guest 04:27
えっと、タイプスクリップとの。えっと、マイグレーション対応は、中長期計画で実施するという判断になりました。
@Guest 04:34
で、えっとま、前回はその昼食期契約で、えっと、どういうことを思って対応してるかっていうのは、まあお話させていただいた感じですね。はい
@Guest 04:41
ま、その先を今日はおお聞きできるっていうところですかね。あま
@Guest 04:45
ということになりますね、
@Guest 04:46
なるほど、なるほど、了解ですでは、聞いていきたいと思います。
@Guest 04:51
えっと、今どんな感じの計画で動いているかっていうところととまそこのえ現状等々について順番に共有いたいただきたいと思います。こちらも、きょうさんでよろしいでしょうか。あ、はい、大丈夫ですですお願いします。
@Guest 05:04
えっとまではちょっと。えっと、細かい計画部分というのは、前回の放送で。えっと、お話はできてなかったと思うんで、ちょっとこちらについて説明していきたいと
@Guest 05:12
思います。はい、えっと、まずえっとま通常であれば、えとま計画自体フェイズって形で分けてま。期間区切ってから実施すると思うんですが。
@Guest 05:21
えっと、今回はえっと、ステップって形で。えっと、lineポイントの方はえーと、対応していますね。はい、で、えっと、各ステップについて、えっと、説明していきたいと思います。
@Guest 05:30
まず、ステップ1として、えーと、タイプスクルトの導入、基盤の整備ま、環境構築っていうのを行っています。
@Guest 05:37
で、えっと、ま、これはちょっと前回。えっと、既に対応していた項目になりますね。はい
@Guest 05:42
で続いてステップ2なんですが、ま、こちらがえっとま。ユーキール感性のタイプスクリプト化とディファクタリング続いて、ステップ3で、えっと、bux。ま、つまり、ビーのストアとのえっと、タイプスクリプトかと、フルディファクタリングっていうのを行っています。
@Guest 05:57
で、えっと、あとはステップ4でapiのタイプ定義
@Guest 06:01
でうん、ステップファイブで、えっと、ビューファイルのディファクタリングと、タイプスクリット化っていうのを、えーと、実施するっていう形になってますね。なんで、全部で5つのステップでえっと、実施しています。
@Guest 06:11
はい
@Guest 06:12
で、今のステップがえいくつに、
@Guest 06:15
あかねはい。えっと、今のステップはちょうどステップ4がそろそろ終わるっていう段階に
@Guest 06:20
位置していますね。うん、はい、なので、からステップファイブだけっていう形になりますね。はい、
@Guest 06:25
なるほど、なるほど了解です、ありがとうございますはいじゃかなりえっと、ま、今もう進んできてるっていうところですかね。そ、
@Guest 06:32
そうっすね、もう、だいぶ順調には進んできてる感じですね。思ったよりも、はい
@Guest 06:36
じゃ、もう結構ままま。もしかしたら、後で話すかもしれないんですけど、もう結構終わりの目処が見えてきてる感じですかね。
@Guest 06:44
あ、はい、後でちょっとちゃんと報告させてもらうんですが、ちゃんと出ているんで、ちょっと。それはまたちょっと報告させてもらいます。
@Guest 06:49
了解ですはいました
@Guest 06:52
で、続いて計画の方針なんですが、なんでフェーズっていう切り方ではなくて、ステップかっていうと、
@Guest 06:58
えっと、まあ、よくある形にはなるんですけど、えっと、メインとなる。えっと、機能開発の予定に組みむ形で、今込回のマイグレーションというのは実施しています。まあ、なんでえっと、ほんとにえっと、歩みを一緒にしてっていう形です。
@Guest 07:10
はいはいはい
@Guest 07:11
で、えっと、今ロードマップで引かれている。まあ、各機能の開発がえっと、例えばおっきめの開発で全ての画面に影響する機能で、
@Guest 07:20
ま、全画面のフルリグレッションテストが必要になるものかどうか。あとは、はいはい
@Guest 07:25
まあ、あとはえっと、まあ、それとは別に。また、一部画面のみに影響するような機能で、えっと、画面単位でふ。ディグレッションテストが必要になるものかどうか。
@Guest 07:34
あとは、えっと、例えば、えっとまうちの会社のテスト舞台である9aチームですね。うん、9aは、チームの稼働に、えっと、少し余裕がある場合に、ちょっと
@Guest 07:44
ここの部分だけちょっと確認してください。で、投げれるかどうかなどをはいはい
@Guest 07:48
はいはいはいちょ
@Guest 07:49
ょうどその3点をえっと、見極めた上で、えっと、マイグレーションを適切に。えっと、組み込んでいくっていう形で、今実施しているんですよね。はいはいはい
@Guest 07:58
なので、えっと、まあ、タイプスクリプトのマイグレーションはま、日々の機能開発に、えっと、混ぜ込むような形で。えっと、無理なく実施していて、
@Guest 08:06
えっと、基本的には、機能開発との足並みを完全に揃えた形の対応というのを。えっと、私たちは心がけているの。
@Guest 08:13
あ、なるほど、なるほど、まあじゃあれですかね。そのリファクトのためにまキベがもう1回走し直す
@Guest 08:19
直すみたいなことはできるだけないように、ちゃんと機能開発の中で、まちょっと余裕持ってスケジュール入れたりとかすることによって、えまリファクターをしつつ、ちゃんと機能開発も前に進めていくっていう風な形で
@Guest 08:30
やってるんですかね。あ、そう
@Guest 08:31
通りですね、はいまや、やっぱえっとま、それで、ちょっと期間取るっていう点もなんだろう。はい、やっぱ、スケジュールの調整とかも必要になってくるんで、ま、どちらがいたら、まあ、機能開発がやっぱプロリティーとかインで。
@Guest 08:42
えっと、そこに合わせた上での。まあ、スケジューリングっていう形で、えっと、進めさせてもらってますね。
@Guest 08:47
ああ、なるほど、なるほど、それでえっと、ちょっと思ったんですけど、
@Guest 08:52
結構機能開発とま、結構リファクターってなると、いつでもできると言いますか。その開発者側で、えっと、できる範囲でやっていくってのができると思うんですけど、
@Guest 09:01
結構その機能開発側って、授業とかの。えっと、要件にもよると思うんで、なかなか。例えば、今回リニューアルから半年たって、ステップも計画されてっていう風にやっていたかなと思うんですけど、なかなかそっち側の機能開発側の未来って、
@Guest 09:14
え、開発者側から描きづらいかなと思うんですけど、
@Guest 09:17
今回ってどういう感じで。え、その事前にどうやってそのステップを今回5つに分けたっていう風におっしゃってたかなと思うんですけど、そこの計画
@Guest 09:25
の策定みたいなところと、機能開発の部分って、どういう風にえっと、うまくロードマップ引いていった感じなんですかね。はい、
@Guest 09:33
えっと、それに関しては、えっと、基本的には機能開発のロードマップに合わせて、えっと、計画を組んでるって形になっていて、
@Guest 09:40
ま。実はちょっと。プロジェクトによって多分違うかもしれないんですけど、うちのま、lineポイントクラブのプロジェクトはもう傾向として、大体半年後かえから1年後ぐらいのえっと、機能開発のロードマップも常に引かれてる状態なんです。あ
@Guest 09:54
ああ、そうなんですね、なんか受容的なビジョンだけじゃなくて、まあ、こういうのを開発しようっていうとこまで結構ロードマップとして引かれてるって感じなんですかね。
@Guest 10:01
はい、そうですね、まあ、もちろんリソースの金でま前後とかしたりはするんですけど、はい
@Guest 10:07
ま、ただえっと、前回えっと、お話させてもらった。7月の段階ままリプへのマイグレーションが完了して、本格的に進むぞってやってた段階ですね。
@Guest 10:17
はいはい、実はあのタイミングで2021年にどんな機能開発が予定されてて、どのぐらいマイグレーションを進めることができるのか。っていうのは、もう全部目と立ってたんですよ。
@Guest 10:25
ああ、そうだったんですね、なるほど、なるほど、いや、もう話す時点でもう次話す時にはここまでは絶対発表できるぞって感じだったん。
@Guest 10:33
あ、そうですね、もうその通りですね。はい、
@Guest 10:36
なるほどってことは、じゃあ、今このちょうど半年たって話に上がってるってことは、結構新着とかま、そのロードマップ通りに進んでるって感じですかね。
@Guest 10:45
あ、そうですね、あれ、自分が当初思い描いていた計画よりもすごい順調に進んでいて、
@Guest 10:51
あよりより良い方向に進んでる感じなんすね。
@Guest 10:55
そうですね、ま、ちょっと最初に出した概算とかよりもまいい数値が出てるんで、ま、ちょっと今回ちょっと数値情報ま、アバウトな数値にはなっちゃうんですけど、ちょっと用意してきたので、なんかこちら説明させていただこうかなと思ってます。
@Guest 11:09
おぜひぜひお願いしますはい
@Guest 11:12
でま、今回ちょっとまあ、やっぱ公開できる範囲もちょっと限られてるんですけど、まあ、大はいきく分けて3つのえっとま目標と実績について、ちょっとお話ししていきたいと思います。はいはい
@Guest 11:23
でまず1つ目の話ですね。
@Guest 11:25
えっと、ま、ここはもう完全にスケジュールの話なんですけど、えっと、作業工数と完了予定日についてのと、お話を最初にさせてもらおうと思います。
@Guest 11:33
はい、お願いします。
@Guest 11:34
はい、
@Guest 11:35
で、まずえっと、当初のえっと、えっと、プロジェクトをまあ、えっと、進行する時のに立てた目標ですね。
@Guest 11:44
えっと、マイレーション前の目標としては、当初。えっと、まあ1年半はえっと、予定として、えっと、見てたんですよ。はいはい、
@Guest 11:53
目標期間として、ただえっと、前回の放送あった。えっと、7月末ぐらいの段階でちょっとま機能開発の方が色々動いたので、
@Guest 12:01
はいはいと、そっからちょっと計画目標ちょっと変更して、えっと、バッファ見て、2年ぐらいの対応計画ってことで、えっと、ちょっと目標修正させてもらってます。実はあ、
@Guest 12:13
そうですね、まあ、ちょっと機能開発に足のみ揃えるという話なんで、まそこを踏まえた上でですね。はいで、一応えっと、稼働としては1日平均3時間ぐらいま、もちろん、えっと、多い時も少ない時もあるんですけど、
@Guest 12:24
まそうですね。うん、まただな鳴らすと3時間ぐらいになるあ、
@Guest 12:29
鳴らすと3時間ぐらいという想定で、一応2年計画ってことで、最初は立てていました。
@Guest 12:34
はいはいはいで、えっと、実際今えっと、ステップ4に取りかかって、そろそろ終わるって段階なんですが、はい、えっと、ちょうどそれの実績を踏まえながら、えっと、一応目処がたったんで、そちらについてちょっと紹介していきますね。
@Guest 12:47
はいはい、お願いします。
@Guest 12:48
はい、で、えっと、最初は2年対応計画って話だったんですが、一応今ちょうど1年経過してるんですよ。ちょうど去年の2月からえっと、対応自体は始めているんで。
@Guest 12:59
ああ、なるほどなるほど、
@Guest 13:00
そうなんですよ。で、発表がまあ半年前だったっていう話でで、えっと、1年経過している段階で、今進捗としては、70パーセントほど完了してるんですよね。実はおお、
@Guest 13:10
そうなんですね、
@Guest 13:11
もがっつり進んでいて、
@Guest 13:13
じゃもう半分以上進んで4分の3ぐらい進めますもんね。そうです
@Guest 13:17
ね、はい、もうステップもえっと、5つあるうちの4つまで、えっと、4つが終わりそうってぐらいなんでは。はいはいはい、なんで残ってるのはほんとに。ステップファイブのビューファイルのえっと、タイプスクリップとかですね。
@Guest 13:27
その対応すれば完了なんで、結構ゴール見えてるんですよね。今
@Guest 13:31
確かにもうあと1つだけですもんね。
@Guest 13:33
そうなんですよあともラスト1段でで、まあ、そういうこともあるんで、順調に行けばえっと、ま、当初2年計画で出してたものが一応1年半ぐらいでえと終わりそうかなという今目処が出て、あ、
@Guest 13:46
そうなんですね。ってことはま、一旦ちょっと伸ばしてみたけど、実は元々のスケジュールがのままでいけそうみたいなああた
@Guest 13:53
ありですよ。はい、伸ばしたかいなかったなみたいなのはあったんですけど、まあ、元に戻って1年半でえっと、追われる見込みっていうのがちょっと出てきました。はいはい
@Guest 14:02
で、あとは1日の平均稼働時間を3時間として、えっと、見ていたって話をしたんですけど、実際の実績見てみると、まあ3時間かかってなくて、2から3時間なんで、2.5からえっと、3時間で平均値が出たって感じですね。
@Guest 14:17
ま、多い時で3時間になるぐらいに収まってるって感じですね。あ、
@Guest 14:21
そうですね、一応そのぐらいで収まってますね。はい、
@Guest 14:24
なるほどなるほどなるほどうん
@Guest 14:25
なので、えっとま、ちょっとまとめると、まあ想定よりも良いペース進んでいる状態です。で、あとは、1日あたりのそのタイプスクトルにかける稼働数っていうのも、
@Guest 14:35
えっと、ちょっと少なめに出ているっていう感じですね。実績としては、で、完了日も前倒しできる見込みも入ってるんで、今のところ、そのスケジュール部分に関しては、順調に進んでいると思ってもらって、オッケーです。は、い
@Guest 14:46
ま、1度修正はしたけれどもはまた元の予定に戻ってきて、しかもそれが本来の稼働より少ない量でいけてるんで、かなり順調と言いますか。
@Guest 14:55
その当初の計画より、より良い結果が出てるって感じですよね。
@Guest 15:00
あ、その通りですね、はいや、
@Guest 15:02
すごいですね逆に初めの制度がすごいですよね、
@Guest 15:08
したからね、うん、
@Guest 15:12
よかったですね、意外にもあた当たったっていうところで、
@Guest 15:17
普通なかなか。やっぱ、機能開発とリバクターって両方かなりえ。あの、色々予期せぬことが起こりやすいんで、見積もりより長くなるとかって、普通によくあることだと思う。
@Guest 15:27
ですけど、なんか、むしろ前倒しに終わるっていう1年以上かけるものが、前倒しに終わるって、初めの制度がすごいすごいですね。
@Guest 15:35
あ、だけど、あれですね、やっぱ慎重に多分出してるっていうのもあったりはするんで、ちょっとパパもで、やっぱとってるんですよ。この数値はいはいはい、長めでまなので、一応前倒しで終わってくれてるっていうのはあったり、
@Guest 15:46
燃え出しで終わるのはすごいいいことですね。はい、そすね、あ、でももうてことは。あとはステップファイブをいかにこう倒すかっていうところなわけですね、
@Guest 15:56
ほんとにそこですね、まあ、そこももし、まあ普通に半年あればいけるかなとは見ているんで。うん、そうですね、まあ、ちょっとこれからが楽しみですね。どうやってスピード感よく、えっと、マイグレーションを実施できるか、あとは、
@Guest 16:09
運良く機能開発がまあ入ってくるかどうか。
@Guest 16:13
うん、うん、うん。
@Guest 16:13
確かに昨日開発と合わせるっていうところが前提となっている。都合、上まいい感じにマッチしてくれるかどうかってのもちょっとあるわけですね。
@Guest 16:21
まあ、もちろんありますね
@Guest 16:24
けど、あれあもんさん的にはあれこれ。今回機能開発に混ぜてやりましたけど、なんかマッチしてるとかって、なんか体感とかありました。感想とか
@Guest 16:32
ま、そうですね、今回で言うと、ま、ちょっとこの後触れるとは思うんですけど、サーバーサイドのコトリンへの移行っていうところで、結構UITの方。でも、まあ、多めにコ数をちょっと確保していたっていうところは
@Guest 16:43
あったんですけど、意外となんでしょうね。えっと、そんなにまだそのUITとしての作業が発生していないっていう部分もあって、ま。そこでまその空いた時間をリファクターに多く
@Guest 16:53
避けるようになって、ま。そこで、ちょっと息に進捗があったかな、みたいなところはあると思いますね。なんで結構はい、僕的にも早く進んでるなっていう感覚は
@Guest 17:02
あります。おお、
@Guest 17:04
あ、なるほどなるほどあいいですねこう開発メンバーみんなでよいい具合に進んでるなっていう認知持ちながら、実際に
@Guest 17:13
本来より前を進めていけんの。そうい。
@Guest 17:15
あとは、まあ、先にリファクターをできるっていうことで、まそのこと
@Guest 17:20
でに対する何かしらの作業が発生した時には、もう少しなんかやりやすい環境になって、進められるっていうところは、結構いいポイントかなと思いました。
@Guest 17:28
なるほどな、
@Guest 17:29
確かに確かにそうですね、ちょっと先んじてリファクターしておくと、未来のコストがどんどん
@Guest 17:34
こうそうですよね、
@Guest 17:35
下が下がりますからね。あということはま、結構前回はとりあえず第1歩っていうところでしたけども、もう今回はかなり
@Guest 17:45
もう終わりが見えていて、めちゃめちゃ順調っていうところですかね。はい、
@Guest 17:50
その通りですね、はい、
@Guest 17:52
いいですね、やっぱり結構あのき移行話って、とりあえず初めて第1歩を踏み出して動かせるようになりましたが、やっぱりエピソード
@Guest 18:00
として多いんで、それから上手くいったかどうかって、みんななかなか表に出てこない話でもあるんで、ほんとにうまくいって、調子がいいって話は聞けると、かなり
@Guest 18:09
珍しいエピソードですし、いい感じですね。なるほど、ありがとうございます、
@Guest 18:14
ありがとうございますじゃあ
@Guest 18:17
ま一応今回3つ用意してるんで、そのうちの2つ目行きましょうか。はい、きましょう、はい、きましょう。はい、じゃあえっと、続いてがタイプスクリプトの学習コストについてですね。多分、
@Guest 18:27
これはい、計測する必要。
@Guest 18:28
多分、なかなかいないのかもしれないですけど、えっと、ま概要としては、ま、
@Guest 18:33
例えばタイプスクリプトに慣れてないメンバーがタイプスクリプトを使うことで、えっと、学習コストはどのくらいかかるのであろうとか、あとは、学習する際にある程度低下するであろう。まあ、作業効率あるじゃないですか。
@Guest 18:45
はい、それがまどのくらいの期間で元に戻るのだろうって、やっぱ疑問に思ってる皆さん、結構いると思うんですよ。
@Guest 18:51
そうですよね、前回は前回のエピソード55では、あのきょうさんの方で、もっとやっぱりそういったものはかかけることっていうところのそのなんでしょう。衛生要因というか、あのモチベーションみたいな意味も含めて
@Guest 19:03
え、投資しているみたいな話が結構あったかなと思います。けれどもま、実際そういったところ
@Guest 19:08
え、現場の人がやってみて、どうだとかっていうのは、やっぱりなかなか外に出てこないんで、やっぱりみんな実際どうなんだろうなって。タイプkプトに触れる機会が少ない人がも思っている印象は
@Guest 19:20
ある気がしますね。まあ、そう
@Guest 19:21
すよね、ま、自分もちょっとこれ疑問で思ってたりはしたので、ちょっと試しに計測を簡単にやってみました。っていう話ですね。はい、ほう
@Guest 19:29
で、えっと、まあ、簡単に言うと、学習コストがどのぐらいプロジェクトに影響を与えるのかを測定するために、
@Guest 19:36
えっと、まこんなことをやってみました。えっと、タイプスクリプトに慣れてないメンバーがタイプスクリプトを使ってま。何年で稼働コストが平常レベルまで戻せるかっていうのを、えっと、測定するっていうことをちょっと試しにやってみました。今回
@Guest 19:50
はいはいはいで、えっと、ま、ここで1回角コストっていう言葉でちゃったんですけど、はいまあ、業務において、えっと、学習コストって角コストに含まれるじゃないですか。ま
@Guest 19:59
あ、そうですよね、どうしても業務時間か食って勉強するっていう話になっちゃいますね。
@Guest 20:03
ま、あとは、慣れるまでの時間っていうのもやっぱ入ってきますし、そういった意味でカコストっていうのをベースでちょっとえっと、測定したっていう形になってい
@Guest 20:10
はいはいはい
@Guest 20:11
はいで、えっと、まあ、もちろん測定するにはサンプルが必要なので。えっと、今回はえっと、今日賞用って男をサンプルにして、えっと、ちょっと計測を行いました
@Guest 20:23
それはあれですか。フロントエンド開発センターUITフロントエンドさん、チームの教ョヨさんですか、
@Guest 20:30
了解です、わかりました、私ですょうしょうよさんの話をお聞きに、できれば、と
@Guest 20:36
はいはいでお願いします。はい、すいません、
@Guest 20:44
はい、えっと、ポイン
@Guest 20:46
トクラブに関しては、
@Guest 20:47
あ、えっとまタイプスクリプトへの移行は。えっと、あれですね。えっと、全色でアングラをま使用してまチームの中で、タイプ、スクリプトの経験がすごいあるアロンさんを一応メインに置いていて、
@Guest 20:58
あ、はい、自分がまあサポートみたいな感じで、えっと、進めるように進行しています。
@Guest 21:04
はい
@Guest 21:05
で、えっと、自分今回タイプスクリットを本気でがっつりやるのって、実は初めてで、
@Guest 21:10
えっとでタイプスクリプトに慣れてない。えっと、ま、自分がタイプスクリプトを学習しながら、えっと、移行を進めていくと、まどれぐらいの稼働コスト
@Guest 21:22
がままどれぐらいで、稼働コストが平常レベルまで戻るかっていうのをえっと図っています。
@Guest 21:28
はいはい、タイプスクとか慣れてない人が、えっと、タイプスクリット始めました。ま、そこでえっと、ちょっとやっぱ最初手こずるんで、稼働コストはちょっと長めにできてしまうんですけど、それが元に戻った時期っていうのを一応調査してます。はいはい
@Guest 21:42
で、えっとまUITメンバーだったら、すごいイメージしやすいかもしれないですけど、私がサンプルってこともあるんで、えっと、ま1個の基準にはなるかなとは思っています。
@Guest 21:51
まあ、えっと、ほんとに慣れてる方とか、初めての方でも容量いい方だったら、自分より全然早めに。えっと、学習は完了できますしま、ちょっと初めては
@Guest 22:00
いじるって人でもちょっと遅いぐらいで、多分完了はできると思うんで、1個の指標にはなるかなと思っています。はい、
@Guest 22:07
で、えっとま当初の想定だと、えーは、いま1年半から2年という目標を実は立てていたんですね。
@Guest 22:14
はい、
@Guest 22:14
慣れるまでま稼働コストが、えっと、平常に戻るまでま、そのぐらいの期間はかかるかなって、最初は見込んでいました。
@Guest 22:21
まあ、なぜかって言うと、まあ、タイプスクリットってま型の定義があるんで、コードか量は増えます。はい、ただ、
@Guest 22:27
肩の力でコードの品質やデバッグに関わるコース自体はすごい減るので、えっと、まその見込みを立てて、えっと、
@Guest 22:34
まあ、既存のコード品質改善がまあ、タイプスクリートによって改善されて、トータルの作業時間がまあ、導入前ののレベルとを下回った時期というのをまけ。はいはい
@Guest 22:47
まあ、えっと、まあ、そのえっと、コストのえっとまコスト減るって部分に関してはまレビューが結構多い部分ですね。ま、例えばまレビューでま、今まで肩がない時代のレビューって
@Guest 22:59
あれなんですよね。ま、チェックして、一目でほんとに漏れがないかっていうのをバーってチェックしてそうですね。
@Guest 23:05
処理の配慮漏れがないかっていうのを指摘をレビューで返すみたいなパターンが多かったと思うんですよ。
@Guest 23:10
ありました、ありました
@Guest 23:11
まあ、ただえっとまタイプスクト入れたことによって、
@Guest 23:15
まあ、えっと、なんすかね。plリクエストがもうできた時点で、そこらへんはもうある程度えっと、回収してる。もう
@Guest 23:23
えっと、そこはもみつみつけて修正してるって状態になったんで、はいはい、プルリクエスト出す人も、レビューで見る人も、多分稼働コスト下がってるはずなんですよね。うんま、そういった意味でのえっと、そこまでのトータルコストがまあ、どのぐらい下がったかっていうのを見てみます。
@Guest 23:38
はい、
@Guest 23:38
で、えっとま実際に測った実績なんですが、えっと、1年半から2年計画で、まあ、2年ぐらいの時期を見込んでたんですけど、
@Guest 23:48
実際に終わったのは6か月ぐらいで目標達成できました。
@Guest 23:51
なお、お、なるほど、なるほど、
@Guest 23:53
てことはま、これはあれですかね。ま、ちょっとまだタイプスフト書くことによって、え、時間かかってる部分はあるけれども。ま、それ以上にレビーの個数が減ったっていうところで、
@Guest 24:03
あのペイしたっていうとこですか。
@Guest 24:05
ああ、当たりですね、はい、うん、なるほど、なるほど、ちょうどそういうことになりますね。
@Guest 24:09
で、まあ、実際にまあ、肩を書く時間自体もだいぶ短縮ができてるんで、慣れ慣れとかによって、なんでそこも短縮できているので、えっとまトータルで見ると一気に。えっと、角コース下がってるなって感じがします。
@Guest 24:23
まあ、なんかこれだけだけど、本当かって思われる方もいると思うので、まあ、そのことあった出来事で話していくと、あ、ちょっと自分がまちょっと時間の余裕ができたんで、午後ぐらいですかね。
@Guest 24:34
えっと、午後ぐまとある日の午後ぐらいに、abaの片定義やってきます。ってことで、
@Guest 24:39
えっと、あもんさんに明日prお願いします。ってことで、一応ま依頼を出したんですけど、ま、翌日アもんさんが出社して見たら、プルリクエスト10件ぐらい出ていたっていう事件があった感じですね。
@Guest 24:56
その通りですね、なんで1日で10件ぐらい送ってきて、おおって感じになってますね。
@Guest 25:01
あん時
@Guest 25:02
まあなんで。まあ伝えたいこととしては、半年あれば、1日に10件のプレリクエスト出せるぐらいまで、えっと、開発効率は戻ります。正直
@Guest 25:11
ま、慣れることができるって感じですね。ま
@Guest 25:13
ほどなるほど、じゃ結構半年でいい感じに行くになるってとこです
@Guest 25:17
ね。あ、まあそうですね、はい。
@Guest 25:20
ちなみにこれ、あのapiの方定義ってなると、結構色々そのレスポンスのバリエーションとかもあって、結構tsえ的なえところの
@Guest 25:29
知識も必要なところをきょうさんがばっちりやってくれたって感じかと思うんですけど、あのさん的にこのこの10件来たプロリーグ見たとき、どんな感じですかね。
@Guest 25:37
そうですね、まあ、えっと、一言で言うと、だいぶ助かりましたっていうところがありましたね。
@Guest 25:44
結構なんか定義のところってなんかはい、もうこれ使ってないものあるんじゃないかとか、はいはいはいうななんですかね。
@Guest 25:50
あの、例えば、サーバーのapiのドキュメントを見て、で、それを元に多分tsの片定義作っていくとは思うんですけど。で、そうすると、コードに当てはめると、コード上でエラーが出て、このプロパティーがないですとかは、はい、パティもう使ってません。みたいな
@Guest 26:04
エラーが出るとま、どうしても新しく入った僕としては、この歴史的な経緯がわからない。それは、もうほんとに消し消していいのかとか、つか入れなきゃいけないのかわからないっていう部分では。
@Guest 26:13
ま、結構そのポイントクラブとして長くやってるきょうさんにこの辺をやっていただけたのは、すごいほんとに助かったなという感じですね。
@Guest 26:21
逆に、ここの方がちゃんとつくことによって、これまでそのあまさんが後から入ってきたことによって分からなかった。そのプロパティーの怪しい部分みたいなのを、ほんとにダメなも、もういらないものだったら、いらないって思いやすくなった感じ
@Guest 26:34
いうそうですね、はい、
@Guest 26:37
確かに確かになるほど、なるほど、結構ま長く携わっているメンバーが新しくタイプスクープに集中していくと、そういうメリットも結構ありそうですね。
@Guest 26:46
そうですね、
@Guest 26:48
あと1点はこれあとね、実は工夫があって、はいえっと、実はさっきもステップ説明した時、あれ。ストアソをステップ3でやって、apiをステップフォードやるって流れあったじゃないですか。はい、
@Guest 27:02
えっと、ステップ3の段階でストアが、えっと、apiの型を基にちゃんと動くように実はしてあって、で、それの方に片定義してたやつを全部。えっと、最終的にapiが
@Guest 27:13
やるってタイミング全部移行してきたんですよ。
@Guest 27:15
あ、そうなんですね、うん
@Guest 27:17
で、えっと、そうすると、まずストアでちゃんとした動きになってるかどうかっていうのをえっと、まずがっちり固めた後に、はいはいapiに持ってきて流し込むみたいな。
@Guest 27:27
はいはいはいはい、工夫みたいのをやってたんで、スピード感よくできたっていうのも、一応経緯としてはありますね。
@Guest 27:32
結構スムーズにこうしやすかったし、まあ、結構apiの片手って逆に先に片手だけあって、実装が伴ってないと、
@Guest 27:39
その間違った形を信用してしまうってこともあるかなと思いますけど、まあ、そこはこれまでのステップ3リーで完全に担保してたんで、すごいスムーズにできたって、
@Guest 27:48
あ、そういうことですね。はい、
@Guest 27:50
なるほど、なるほど、ありがとうございます。
@Guest 27:54
結構6か月で、もうそういうところまでまプロジェクトとしては、そのきさんがタイプスクープトにキャッチアップして、6か月目にはということは、もうえ、ステップ4まで進んでいるっていう話でしょうし、すごい
@Guest 28:07
え、新宿としては、すごい短い間で移行が進んでる感じだったんですね、
@Guest 28:13
どうでした。共産的に学習コスト6か月でっていうのは、結構想定よりは早かったかなと思うんですけど、実際体感としてどうでしたかね。学習コストか、その
@Guest 28:24
高数っていうり、裸として感じたところってどういう感じでしたか。
@Guest 28:28
そうですね、まだか、最初はやっぱタイプもいろんな書き方があって、えっと、すごい手こずるなって思ったんですけど、はい、やっぱえっと、アモンさんがいたことによって、多分この6か月っていう目標達成っていうのは実際できていて、
@Guest 28:40
多分い
@Guest 28:42
タイプスクリップとか、ちゃんとやってる方と組んだ上で、その人からちゃんと教えてもらうことによって。この1年、2年って最初見込んでたのが一気に多分短縮すると思うんですよね。
@Guest 28:52
はいはいはいはい、そうですね、
@Guest 28:53
なんでやっぱタイプスクリップをちゃんと理解して、えっと、まあ、えっと教えてくださる方と一緒に組むと。まあ、自分は6か月だったんですけど、もっと早い方だったら、もっと早い段階で、もう慣れてバンバンかけるようになるんじゃないかな、とは思ってます。
@Guest 29:07
なるほど、なるほど、ありがとうございます
@Guest 29:10
じゃですね、ちょっと色々話していきましたけど、タイプスケると、マイグレーションのえ、進捗報告としてま気になる。え、最終的な稼働コスコストの回収期間みたいな話を改めて
@Guest 29:20
話していただこうかなかなと思いますけど、こちらもきさんの方にお願いしてよろしいでしょうか。
@Guest 29:25
じゃあ、えっと、まあ、3つ目の稼働コストの回収期間まこれ。多分いろんな人が気になってる部分かなと思ってるので、ちょっと話していこうと思います。はい、お願いします。ちょっと繰り返しにはなっちゃうんですけど、
@Guest 29:36
まず、lineポイントクラブでは。まあ、新しいメンバーがま古い技術を勉強するよりも、
@Guest 29:41
モダンな技術で、即戦力となる環境を整備すること。っていうのを、まあ、1個のスローガンとして掲げている。この方針がチームビルディングメンバーのメンタルケアにつながり、そのメンタルケアの影響によって、
@Guest 29:53
えっと、稼働コストの削減という付加価値を生むと、えっと考えて、えーと、対応とかを進めています。ま、タイプスクリートだけじゃなくて、いろんなリファクターですね。
@Guest 30:01
はい、実際に作業する上でわ、これ対応したくないなっていうストレスのケアだったりとか、あとはうわ、これちょっとサイドフェクト多すぎて辛いみたいな。そういった部分、
@Guest 30:11
あとは、えっと、まあ、精神負担とか、そういった部分をちゃんとケアして、えっと、より、えっと、作業がしやすい環境を作ることによって、えっと、稼働コストを削減して、あとはモチベーション管理もするって意味合いで、ちょっと1個にトータルして、メンタルケアって言葉で呼んでいます。
@Guest 30:25
はいで、えっと、前回のまあ話でま言ったところとしては、えっと、今の仲間と未来の仲間を救うためのタイプスクリットということで、タイプスクルの実装っていうのは、目標出してます。
@Guest 30:36
なので、えっと、意図としては、チームマジメントにおけるま、そのメンタルケアのですねメンタルケアや、まあ、そのメンタルケアができなかったことによるリスクヘッジをえの一環として、タイプスクリプトの導入をしています。
@Guest 30:50
なんで、最大プロオリティーとして、はまチームのリスクヘッジというところで目標を立てています。うん、うん、うん
@Guest 30:55
までなので、実はこの目先のコストパフォーマンスを考慮しないっていう。えっと、ま、優先目標に立てていないっていうこともあるので、実際のところか、コストの回収話はは。えっと、プライオリティは低めっていうか、形になっています。はい、
@Guest 31:10
まあ、ディスクヘッジを例に例えるんであれば、まあ、セキュリティ対応と一緒で、えっとま、どんなにコストかかってても、絶対にやんないといけないことだと思ってるんですよ。はいはい
@Guest 31:19
まそれと同等ということで、えっと、まあ、えっと、リスクヘッジのために私たちはやるんだっていうのは、えっと、上に伝えてるような感じです。うん、うん、うん、うん、
@Guest 31:26
まあ、チームマネージメントにおけるリスクっていうのは、まあ、セキュリティリスクと同等ぐらいの危険性があると、自分の中でも定義してるんで、ま。それでやらせてもらっているものの。
@Guest 31:36
ただ、やっぱコストパフォーマンス出さないと説明もできないんで、コストパフォーマンスちゃんと出しとかないと説明責任。やっぱ発生するんで、それがあるんで、稼働コストの回収期間ていうのは、えっと、ちゃんと
@Guest 31:47
えっと、定義してやるようにしてるっていう形ですねう、私たちとしては、はい、
@Guest 31:51
チームが画解しないように、まあ、あのリソースはかけるけれども、そのリソースに関して、その開発者か以外から見た時の合理性みたいなのも、しっかりと
@Guest 32:00
担保しておくっていうところですね。
@Guest 32:02
そういうことですね、はいはいはいまなんでま優先度は低いんですけど、一応ちゃんとそういった数値は出しているっていうことで、えっと、まその話をさせてもらいます。はいはいで、
@Guest 32:11
えっと、そうですね、えっと、まず稼働コストの回収って、えっと、結局ま回収っていうことなんで、タイプスクリットを対応することによって、増えるコストと、
@Guest 32:21
実際に導入が完了したタイミングで、えっと、運用改善されて、削減できるコストの2種類があると思うんですよ。
@Guest 32:28
で、まあ正直何で削減するのかって話なんですが、まあ、えっと、先ほど話した通り、開発効率の向上
@Guest 32:35
だったりしますね。そのまあ、やっぱメンタルケアとかにも繋がる部分にはなるんですけど、まあ、開発とかよりやりやすいような。
@Guest 32:42
えっと、環境を揃えることによって、開発効率を向上させて、
@Guest 32:46
えっと、まあ、作業者のま、業務ハードルとか、精神的な負荷をま下げることで、えっと、一機能単位の開発コストをま減らすっていう形を取っています。
@Guest 32:55
で、えっと、短期間で一定レベル以上のコードがまあ作れるようにってことで、えっと、まその3点ですかね。開発効率の向上を、えっと、作業者の負荷を下げるあとは、一定レベル以上のコードが、えっと、容易に作れる。一応、その3点を
@Guest 33:09
もによって、コストが削減できるってことで、一応話はしていますね。はい、
@Guest 33:14
で、えっと、じゃあそのコスト削減によって、えっとまどのぐらいで、えっと、回収が可能なのかって話をしていきたいと思います。で、
@Guest 33:23
まず目標として立てたのは、マイグレーション完了後に2年6カ月で、えっと、稼働コストの回収ができるっていう計算を最初は出していました。
@Guest 33:32
えっと、これに関しては稼働人数2名、計算ですね。はい、
@Guest 33:37
で、えっと、実際にえっと、今えっとまプロジェクト進んでいく中で、えっとま、実際のえっと、かけたコースとかも出てるんで。それに伴う実績としては、
@Guest 33:46
当初2年6か月計算だったんですが、2年、2カ月にえっと減っていますか。働コストの回収期間ていうのはまこれも稼働稼働人数2名ですね。はい、
@Guest 33:56
で、えっと、あとは、えっと、マイグレーション完了後に、えっと、2年6か月で回収するって話をしていたんですが、
@Guest 34:03
正直言って、えっと、これ間隔地ですよ。間隔地なんですけど、もう既にコストの回収はされ始めてるのでは。っていう感じになっている印象です。はい
@Guest 34:12
ま、そのあ、あれですよねあの、全部タイプスクープスに回収収し直したから、そのコストが戻ってくるっていうよりは、もう今移行している中で、どんどんレビューの
@Guest 34:21
あの負荷が減ったりだとか。ま、そのそれこそファイルが1割ぐらい減っているってことだとかっていうところでま、コストの回収が置きながら、なお
@Guest 34:29
え、品質が上がっているっていう感じですかね。あ、
@Guest 34:32
その通りですね、はい、
@Guest 34:33
確かに確かに
@Guest 34:35
まちゃんとした影響範囲は分離できていないんですけど、まあすでに多分されてるだろうみたいな感覚はええと思ってますね。はい
@Guest 34:43
ま、全体としてまだかけているコストみたいなのもあるとはいえ、ま回収できているところは、どんどん回収され始めてきている段階には、もう1年と少しで至っているっていうところで
@Guest 34:52
ですかね。あ、そういうことですね、はい、
@Guest 34:54
なるほどなるほど、
@Guest 34:55
結構前回、そのコストパフォーマンスみたいなよりはどっちかっていうと、衛生要因というか、メンタルケアとか、チームとしてのえ、うまく回るところをえーゴールに据えているって話を
@Guest 35:05
されていたかなと思うんですけど。まあ、結構計算や目標をしっかり出しつつ、そこにえちゃんと至るように、あ、形で進めていってはいるんですね。
@Guest 35:13
そうですね、うん、まあやっぱちょっと数値出しとかないと、後で説明責任絶対出てきちゃう。
@Guest 35:18
まあ、そうですよね、
@Guest 35:20
なので、えっとまちゃんと人に説明するためのえっと、数値っていうのは、ある程度取るようにはしてますね。定義したりとか、まあ、もちろん、ちょっとアバウトな部分もあったりはするんですけど、ま、そういう形でlineポイントの方は、えっと、タイプスクト対応というのは進めています。
@Guest 35:33
で、ま、ただタイプスクリットのえっと、まあ、そうですね、パフォーマンスだ出すためには、まあ、タイプスクリプトの恩恵にちょっと座るっていう部分はあったりするんですけど、
@Guest 35:41
えっと、まそこは多分。えと、恩恵をマックスまで出せるような運用体制だったりとか、工夫っていうのはしっかりやっているんで、ま。問題ないとは思うんですが、ま、ちょっとどのぐらい
@Guest 35:52
え工夫がはまるか。でか、起こすの回収率はちょっと変わってくるかなと思っているので、そこは努力引き続きしていこうかなと思ってるところです。
@Guest 36:01
なんか、せっかくですし、あれですよね。そのパフォーマンス出すための工夫のどれがどれぐらいハマったかみたいなのは、結構それぞれで分けておいてもらえると、例えば、UITのやっぱり他のプロジェクトとかも
@Guest 36:10
歴史的に長いんで、ts以降できてないものもいっぱいあるかなと思うんで、なんか、次取り組む人がわかりやすくなったり。そうですよね、
@Guest 36:17
そうですね、まそこもちょっとまとめてみましょうかね。うん、後々
@Guest 36:21
せせっかくなんで、なんかこういう施策はま、こういう工夫はこれぐらいはまったっていうのがあると、もしかしたら、他の人にとってもプラスになるかもしれないですね。はい、
@Guest 36:33
ではですね、ちょっとですねえ、今回あのタイプスケープト以降に関しての話え、進捗共有ってのをきよさんの方からえて、サイドでぜひ話したいっていう風にねえ、ご連絡いただいたと思うんですけど、
@Guest 36:44
これって、あの、そもそもどういったモチベーションで、今回お話持ってきてもらったんですかね。
@Guest 36:48
あ、そうですね、ま、ちょうど半年経ったっていうのもあありにしてはあったんですが、
@Guest 36:54
ちょっと面白いものを見て、えっとま前回えっと、UITのブログでま、エンジニアブログですかね。えっと、lineのエンジニアブログで、タイプスクリプトのメリットとコストっていう記事あったじゃないですか。
@Guest 37:06
あ、ありましたね、うん、うんで、
@Guest 37:08
あれのえっとま。記事ももちろん読んだんですが、えっと、twitterの反を見たんですよ。実は、
@Guest 37:13
はいはいはい、そしたら、
@Guest 37:14
あやべろいろんな意見出てて面白いなと思ったんで、えっと、なんかそこの話をちょっと踏まえてやりたかったなっていうのがちょっとありましたね。あ、はいな、そこについてちょっと語りたかったなっていうところですよ。
@Guest 37:27
ま、それがあったんで、ちょっと話したいなと思ってました。はい、
@Guest 37:30
ちなみに、共産的にはそのタイプスクリプトのえ、移行、結構
@Guest 37:35
ま推進したい人と反対したい人みたいな人が結構いたかなと思うんですけど、共産的にはどうですかね。あの記事であ、
@Guest 37:41
自分すね、えっと、もちろんタイプスクリプトをまあ推進したいなっていう立ち位置ではあるんですが、あえてそこ寄らずに、ちょっと自分は中立派ですってことで、
@Guest 37:51
えっと、見ていますね。
@Guest 37:53
ちょ、ちょっと中立派としてのスタンスが気になるところなんですけど、はい、ちょっと今回のエピソード結構な時間になってきているんで、来週のエピソードとして、とってもよろしいですか。その話あ、
@Guest 38:04
なるほどすあ、もう結構時間かかってますもんね、ま、
@Guest 38:07
まあそれで大丈夫ですよ。オッケーですじゃあ
@Guest 38:09
あ、ちょっと来週是非ま。タイプスクトのえまメリットコスト推進派、中立派の話をちょっとできればなと思うので。え、今回いいテンサイドお聞きいただいている。皆さんは、ぜひぜひ来週もお話を聞いていただければと思います。
@Guest 38:27
え、というわけでえ、今週はですねえきょうさんとあんさんにえ。lineポイントクラブのマイグレーション対応の話を聞いていきました。
@Guest 38:35
え、タイプスブトのですねえ、利用にあたってのえーま推進かえ、あるいは反対かという話については、ちょっと。来週にもえ、実際にポイントクラブの話も交えつつ
@Guest 38:45
やれればと思うんですけれどもま、今日は進捗報告というところでま、どれぐらいのえ、期間でえ、コストをペイしていくことができたのか、という話をえ、聞いていきました。
@Guest 38:54
え、ラインではですねえ、このような、えー、フロントエンドに関する議論や、えー発表などえ日々行っております。
@Guest 39:01
えま、社内勉強会で行っているコンテンツをそのままえUIT INSIDEで行っている例もありますので、ま、今後もどんどんアウトプットしていこうと思っておりますので、ぜひぜひお聞きいただければと思います。
@Guest 39:12
それでは、ちょっと来集合となってえしまいますけれども、引き続きょうさんもさん来週もよろしくお願いいたします
@Guest 39:18
よろしくお願いよろしくお願いします
@Guest 39:20
少しはお聞きいただき、ありがとうございました。
