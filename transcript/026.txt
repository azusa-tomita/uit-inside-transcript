@Guest 00:00
はい、こんにちは
@Guest 00:01
こんにちは
@Guest 00:02
今週もよいサイドやっていきたいと思います。え、まず、初めにこのポットキャストについて説明いたします。
@Guest 00:09
このポッドキャストは、ユーザーインターフェースと、テクノロジーを愛する開発者たちが、毎週最新のフローにエンドの動向について語るためのポッドキャストです。
@Guest 00:18
最新のおび、標準の動向や開発、フレームワークの変遷、またまたurやuxに関することまでえ、最近のトレンドをキャッチアップしていくことを目的としております。
@Guest 00:28
今回はですねえ、イテンサイドえ、恒例のメンバーとなります。えっと、私はたとええはるさんとえ、2人でやっていきたいと思います、よろしくお願いしますよろしくお願いします。
@Guest 00:40
ええということでですね。今週のテーマなんですけど、ま、ちょっと。今週ほんとは、あの、ビーフェスジャパンのえー、イベント終わった後の話をしようと思ってたん
@Guest 00:49
ですけど、ちょっと台風によって中止って形になってしまったんで、ちょっと別のテーマで話そうかなと思っております。で、ちょっと今日は相談なんですけど、はい、
@Guest 00:58
あのspaを作ってる時のはい、まあはい、状態管理の話の1つなんですけど、
@Guest 01:06
あのhtttリクエストはいを飛ばす。まあ、基本spaとapiと連携すると思うんですけど、その時に
@Guest 01:14
あのなんでしょう。例えば、ウェブサービスとか作って、あの、自分でシートデータ入れてる間はいいけど、本番動かしてみたら。リクエスト飛ばして成功した後、初期状態の空っぽの時にブランクのデータ表示したりとかあるじゃないですか。
@Guest 01:28
ていう時のその取得中は、ローディングを出す0件の場合は、取得は終わってるけど、0件の場合はないを出す成功してる場合は、これを出すみたいな。あの出し分け
@Guest 01:39
をするとき、みんなどうやって設計してるかなっていう。
@Guest 01:44
なるほど、
@Guest 01:45
だから、みんな悩んでるけど、あんまり議題に上がらなそうなやつ、そう
@Guest 01:52
談したいなとなるほどってまして、
@Guest 01:55
結構ベストプラクティス的なものはあるけど、それが最善なのかっていう
@Guest 02:00
そうっすね、依頼はあります。結構どうしてるかなというの聞きたかったんですけど、いきなりですけど、どうやってます。
@Guest 02:08
そうです、そうですね、僕が昔昔ってか今もしその趣味で、そのアトのアプリケーションで、例えば
@Guest 02:15
まリラックス使うってなると、多分そのなんていうんですかね。1つのリクエストに対して、こうえ、リクエストとサクセストフェイル。
@Guest 02:25
まあ、3つの状態を持つっていうのがま、これ、結構割と定番みたいな感じですけど。
@Guest 02:31
ま、簡単なやつだと、アクセス中はそのリクエストで、そのズローディングをトゥルーにして、で、サクセスになったら、まあ、イズローディングフォースにして、でで
@Guest 02:40
入れる。はいはい、はい、
@Guest 02:42
よくあるやつなんですけれども、僕はそれはあんまりいいとは思ってなくて、そう複雑になればなるほど、
@Guest 02:50
崩壊しそうだな。まあ、そうすけれども、まあ、個人開発ならそれでいいかって感じです。
@Guest 02:57
なんか、そのよくあるそのリラックスのあの実装を。あの、私も見たことあるんですけど、
@Guest 03:02
あれやるときって、なんかこうもグローバル生徒に状態を持ってやって、で、取った後の状態も、その取得後のリストみたいな状態も両方持ってやる感じですよね。ああ、そうです。ですよね、
@Guest 03:16
なんかあれもいいのはいいけど、なんかリソースに対して毎回フラグ立てないといけないし、リクエストのなんか
@Guest 03:24
あれですよね。大体それやるときって、なんか状態みたいなのを、なんか状態増えれば増えるほど増えただけ。なんかいいなみたいなを手にしないといけなくて、辛いやつですよ。
@Guest 03:34
いず、イズローディングが1つなのかっていう
@Guest 03:38
イズローリング1つなのか、問題みたいなのが結構あるよな。そうですよね、やっぱそうなりますよね、
@Guest 03:47
僕、最近結構業務はいはい、開発して問題だなって思うのがローリングって結構なんていうんですか。コンポーネント単位で定義するっていうのが結構直感的だと思う。あ
@Guest 03:59
あ、そうですね、
@Guest 04:00
例えば、その画面まず画面全体をローディングしてで、ローディング中、画面が画面全体でてます。はいで、ローディングが終わ
@Guest 04:08
で、次に別のあの、その中の1つのコンポーネントのローリングが始まって、で、そこでもまたローディングがはいはい共有されてっていう感じで、そのローリングが終わっても、また別の
@Guest 04:20
根本とのロドローディングが始まるみたいな。はいはいまになってて、いつまで経ってもローディングが終わらないみたいな。
@Guest 04:27
あ、まず、親の全体で、アプリケーション使う情報の認証とかのローディングが入ったと思ったら、さらにそれぞれのリソースの入るみたいな、
@Guest 04:37
なんかいる中に、そのローディング中のくるくるが泣いてて、あれ、なんとかしたいな、
@Guest 04:44
なんか辛いっすよね、やっぱり
@Guest 04:47
なんかいい方法は知りたい。僕も知りたい
@Guest 04:52
で、なんか状態の管理も結構難しいし、どうしようかなってのは私も悩みですね。結構bgsのアプリ
@Guest 05:02
えションの場合は、みんな雑にやってるようなっていう気持ちがあって、例えばなんでしょう。
@Guest 05:08
あまり体育休許で書いてる人多くないじゃないですか。はい、そうなったら、なんか例えば、その配列とフォールスのユニオン体育にしてしまって、
@Guest 05:18
そうはその間は何もないた。ポルスとかなるとか、アファインドとかの時は何もないから、ローディング中にするが、はい、タイプがまてか、レングスが
@Guest 05:28
持っている場合は、その配列ではいみたいなことをやま、そこで判断するみたいな。実装をよく見るんですけど、なんかこれは
@Guest 05:38
なんかタイプ。スクリプト、フレンドリーではないなみたいな気持ちになって、楽では。まあ楽楽ですし、そのコンポーネント内でうまく閉じてくれるんで、いいっちゃいいんですけど、微妙だよなと思って。
@Guest 05:51
うータイプス、クリフトタイプ、スクリプトをまあ使うってなると、多分そのいないナムが適切かどうかはわかんないですけど、その結構その
@Guest 06:03
タイプの合成で、まあ、このローディングの時はこの
@Guest 06:08
このクラスでこのえ、まあ、ローディングが終わったら、このインターフェースでみたいなできるんで、まあまだ全然
@Guest 06:15
可能性は全然あるって感じですかね。ま、ただそれでいいのだろうか、という気持ちもするっていうとこですよね。
@Guest 06:24
ただ、ちょっと他のアプローチと式になってるのもあって、例えばその
@Guest 06:30
なんか取得が終わるか終わってないかみたいなのって、例えばアンギラだったら、エーシングパイプとかで解決するじゃないの
@Guest 06:36
ですか。なんか、テンプレート内にはい、そのそもそも非同期であることを明示してしまえる機能が、要は。あの、アンエラテンプレート内で、あれって全部rxじゃないですか。
@Guest 06:47
なんでrxの対象となるオブザーバブルなものを、そのエイシンクっていうプレフィックスをつけてやってやると、
@Guest 06:54
はい、解決されるまでの状態を持つみたいなのがあるんで、なんかそういうのが各フレームワークになるほど、備わっていれば、
@Guest 07:02
アプリケーション側が関心を持たないといけないのは、そのaシクが処理されてるかどうかみたいな。で、もうあの、そこがいいかなみたいな
@Guest 07:12
デートでもそういう機能
@Guest 07:15
があるそうですね。なんでそことうまく組み合わせると割と快適に書けるんで、あれはあれだなと思いつつもリアクトとかビーって、あんまり。自分の
@Guest 07:25
観測範囲では、その機動機処理とかをうまく使えるやつがないかな。
@Guest 07:31
自分でやってくれって感じですよ。そうですよね、
@Guest 07:33
っていうのがあって、結構そこみんな結構苦しい実装になってるんじゃないかな、という気が
@Guest 07:41
ま。どれも一応行ったんだよな。ありますよ、しますね、なんでそれら
@Guest 07:46
のどれを選ぶかって話はな気はするんですけど、まあ、なんかどれがいいんだろうなっていうとこですね。
@Guest 07:54
ちなみに春雨さん最近はプロジェクトはあのビルジェースですか。
@Guest 07:59
はい、そうですよね、
@Guest 08:01
ロードロードロードに今なってる感じっていうとこですよね。
@Guest 08:05
その労働の表現自体は、ちゃんとやあの対策をしていて、そのはいはい、あの、ディレクティブで、ローディングのこう
@Guest 08:13
コンポレントみたいなのがあってま。それで、そのローディング中は表示させないけど、ローディングは終わったら表示させるっていうところまではできてるんです。
@Guest 08:22
てことはあれなんですね。そのディレクティブを付与するだけで、
@Guest 08:27
その特定ののリソースへの取得が完了してるかどうかを見てくれて。してない場合は、ホールバックのコンテンツが表示されるっていう。あ、それは全然デレクティブとかもありですね。
@Guest 08:38
まあ、ありっちゃあれなんですけど、逆に簡単すぎて、さっきのそのローリングのそうアイコン増えすぎ問題
@Guest 08:46
ま、確かに確かにでもディレクティブで解決するのは、やり方としてありですね。私は結構あのラッパーホンポーネントとか。
@Guest 08:54
あ、そうですね、ビュビ、プロミスシッドっていうプロミスedはいえ、あのプロミスラッパーみたいなコンポーネントライブラリみたいなのが、実は一応あって、うん、これあれですね。あの、
@Guest 09:06
確かビーファイヤとか、あの、ファイヤベースとの連携ライバリーとかを作ってる。えっと、コアの人が作ってるはいやつがあるんですけど、
@Guest 09:15
これみたいな形のdjcだと、こういうそのフロミスオブジェクトを渡してしまって、うん、スロットで解決するみたいな。
@Guest 09:24
あ、はいはいはい、
@Guest 09:25
ちょっとこれシノートに貼っときますけど、こういうスロットでの解決のイメージが、その変に状態持たないんだったら、あるのかなっていう。
@Guest 09:36
そうですね、デロミスが解決されてない場合は、まあまた人だろう。
@Guest 09:43
ま、なんか妥当なぽいアプローチな
@Guest 09:46
気はしますよね。っていう印象が強かったんで、ディレクティブってのは、自分の中にあんまイメージなかったんで、確かにディレクティブもありだよなっていう気は
@Guest 09:55
そう。ティブの中のま方によります。単純にその今トゥルーフォロスになってるっていうのが、まあ、
@Guest 10:02
なんかこう上手いことできる。はいはいはい、気はするんですけど、まあ、確かにそれて
@Guest 10:08
ちゃでも、ちゃんとこうテンプレートテンプレートっていうか、そのそうスロットに入れれるようにすれば、そういうカスタマイズやりやすい
@Guest 10:18
こう、ネームドスロットっていう解決方法もあるかな、という気がしますね。こうすると、ペンディング、リザブル、リジェクトを全部まとめて取れるんでいいかなと思うんですけど、
@Guest 10:28
なんか、ディレクティブ使う場合って、デジェクトの場合って、どういうってハンドリングすることになるんですかね。
@Guest 10:34
エジェクトの場合は、ベットコンポーネントを用意して、皮で切り替えるみたいな。あ
@Guest 10:41
てことは、今のその履歴っていうのは、成功しても失敗しても、とりあえず終わったら出してくれたら、ああ、なるほど、なるほど、
@Guest 10:49
確かにそれはそれでシンプルですよね、あの、なんでしょう。デレクティブ自体は、プロミスが終わってるかどうかの関心しか持たないわけで。
@Guest 10:58
なるほどあ、結構それもありな気がしますね、履歴という結構妥当感はありますね。
@Guest 11:05
なんか、今じゃあこういう話してますけど、なんか今のリアクトリラックス、スタイル以外で。はい、なんかやるとしたらはめんどういう形でやるのがいいと思うとかあります。
@Guest 11:14
うん、そうですね、また、逆トの話になってしまうんですけど、はいはい、最近やった。えっと、個人開発ではその
@Guest 11:24
グラフqlを使ったんですけど、はいはいはい、あれってもうアポロっていうその
@Guest 11:30
プロジェクトがありまして、そこでもう結構なんでもやってくれるみたいな。その状態管理みたいにやってくれるんですよ。なので、
@Guest 11:37
その時は結構それに乗っかってやりました。
@Guest 11:41
なんかあれですよね、しかも、アポロ自体がそのいい感じに、リアクティブなアクトレンゲを用意してくれてるって感じですか。
@Guest 11:50
スケート管理とかも、その
@Guest 11:52
なんていうんですか。その、あのアプリのデータがそのグラフql内に閉じてたら、多分それだけで、はいはい、大体満足できるみたいな
@Guest 12:01
感じ。なんで、もしかしたら、結構その通信
@Guest 12:04
のプロトコル自体にも関係してるかもしれない。ああ、grpc使うともしかしたらgrpcに最適な。そういう
@Guest 12:13
はいはいはい、みたいなのも
@Guest 12:14
あるかもしれない。ちょっとよくわかんないですけど、それもまあ1つの
@Guest 12:19
ほかもしれない。確かに確かにそうですね、今までなんでしょう。apiって言ったら、頭の中で、とりあえずジェイソンが出てくるみたいなとこはあ、そうであると思う。なんか普通にジェイソンレスト、apiた話
@Guest 12:33
そう。ジェイソン色がかりなので、我々は。
@Guest 12:38
でも、まあ確かにそうですよね。あの、アポロリンクステートとかで、状態をリンクしてしまえば、それで解決するという話は確かにありそうな気はしますね。
@Guest 12:48
あれの場合ってそのなんでしょう。
@Guest 12:53
あれですね、エクエリ叩いたりとか、ミューテーション叩いたりした場合の、そのあのグラフキエル操作の途中状態って、どういう感じで、アポロ側では担保してくれるんですか。
@Guest 13:05
要は、そのペンディングみたいなのって表せるんですかね。心ング
@Guest 13:10
あ、そうですね、ペンディングちょっとあったと今調べます。はい、あ、はいはいですね、どれですか
@Guest 13:22
でも、ちょっと小のの方にはかってきますね。
@Guest 13:24
ま、こんな感じで、そのラフェールのクルをはい、書いてであれですね。
@Guest 13:31
ゆそのローディングとエラーっていう、まあ、2つの
@Guest 13:37
値がもう見られてます。それがまあ存在したら、ローディングコンコンと返すみたい。
@Guest 13:43
はいはいは、い
@Guest 13:44
ま、その方針的にはさっき言ってた。そのローディングのステートカットなら返すみたいなのに。そうですり理由っていうのは、そのなんていうか見える部分に関しては、まあ、そういうあ
@Guest 13:57
あ、エラーも同じような感じ。はいはいはい、
@Guest 14:00
ただあれなんですね、その自分たちで、そのイラムとかを管理するには、もう失礼。
@Guest 14:07
そもそもそのなんでしょう。
@Guest 14:11
あれですよねえ、これはフックもあるんですね、今、フォロワーにはあ、そうですね、なるほど、なるほど、リアリアクス側がモリとして、ローディング状態エラー結果っても全部返してくれるって感じなんですね。そうですね、
@Guest 14:23
ユズクリっていうそうなクスはありますね。で、まあ、ローディングとエラーとデータってのが、
@Guest 14:30
ああ、確かにこれでやってしまえば、だいぶそのなんでしょう。自分たちで実装する必要がないですし、なんか、リラックストとかにすごい。なんか、
@Guest 14:39
寝食されるわけでもないんで、
@Guest 14:41
そうっすね。筋が良さそうですね。そう、これだけでずっと閉じてたらすごい便利だと思いますよ。
@Guest 14:47
確かにそうですね、こういうアプローチはすごいいいですよね。
@Guest 14:53
ブラフキ、エアプロー使ってる場合は、ま、これでうまくリンクさせるっていう点もあるっていうところですよね。なるほど、なるほど、
@Guest 15:02
まあそれでなくても、例えばまあ自分で貸したもの作るでもいいですし、色々できることはありそうですね。別に復活で解決できる系の話なきも、
@Guest 15:12
してこなくもない感じはありますね。
@Guest 15:16
ここの場合だと、そのボーディングとエラーっていう2つの名前ですけど、まあ、そこは結構工夫できるかも。そうですね、他にもなんかいろんな値が考えられるところですよね。
@Guest 15:28
そうっすね、確かにちょっと
@Guest 15:32
あのもう1個気になってるのがあって、私一切触ってないんで、触ってないベースでも知ってたら教えてほしいんですけど、あの、リアクトのサスペンス
@Guest 15:41
てあるじゃないですか。なんか、あの非同期うまいことやってくれるマンみたいな
@Guest 15:47
やセンスかや、ちょっと僕は使ってない、申し訳ないや、そっかありましたね。
@Guest 15:56
なんか、一時期ちょっと話題になってたと思うんですけど、
@Guest 16:01
はいはい、これなんかうろ覚えですけど、そのそのなんかそもそも
@Guest 16:09
れらレンダリングができなかったら、その下の評価せずにか
@Guest 16:13
はあ、そうですね、そう、あの、なんなん。なんか自分もちょっと内部構造をざっくりしただけなんで、あれなんですけど、その成功してない。あの、完了してない限りは、
@Guest 16:24
あのプロミスがスローされるみたいな。うん、プロミスオブジェクトがスローされてくるんで、それを扱えばよくて、で、成功した場合は、普通に連打が発信みたいな形になってるんで、サスペンスでうまくラップしてくれるしてやるだけで
@Guest 16:38
なんでしょう。あの、ローディング中とあとあれですよね。タイムアウトも一応設定できるんで、タイムアウトした場合の処理っていうとこと、成功状態みたいなのを
@Guest 16:49
やってくれるという噂でございます。というっすね、
@Guest 16:53
そうですね、あれ、
@Guest 16:54
そうですね、
@Guest 16:56
ミスっていうのはあれですね、わかりやすい、わかりやすいってか、直感的、
@Guest 17:00
実直感的ですよね。で、特に今見てたらあ、そうですね。マックスグレーションっていうのがあるみたいなんで、これで
@Guest 17:08
うまくその感覚みたいな。まあ、多分待機時間を待機して、かつフォールバックっていうものをロックスで渡すことができて、オールバックの中にははいえ、ノードを渡してやると、それが表示されるみたいですね。チルドレンとして
@Guest 17:22
というとこなんでま、これもこれで結構初めにえっと、言及してた。ビュービュープ、ロミスドをリアクトップ。
@Guest 17:30
こうなりそうだな感がありますね。ビビの場合は、スロットがあるんで、スロットで解決しようとしないしまいますけど、逆トの場合は、プロックスが中心になると思うんで、
@Guest 17:40
やります。
@Guest 17:41
なんか、似たようなアプローチ感は
@Guest 17:43
あるんで、これも面白い試みだよな。気はしますね。ただ、まあ、あんまり使ってる人をまだ私の観測範囲では見たことがない。
@Guest 17:51
これをリアクト本体が実装するのって、なんか結構面白いですね。
@Guest 17:56
そうっすね、けあ、これリアクトの責務なんだみたいな。そう、
@Guest 17:59
なんか、コンポーネントを使うのかなっていう思いきや、逆と本体が
@Guest 18:04
そうですよね、
@Guest 18:05
なんか、なんでしょう。これって、どっちかって言うと、そのリアクトって、あんまり自分のイメージでは、そのレンダリングが中心であって、こういうほんとの副作用的な
@Guest 18:17
副作用って持たないイメージだったんで、なんか、副作用が激しいものをよく持ってるな、という印象はありますね。
@Guest 18:26
サンスなんか名前が引っかかります。なんか、こうサスペンスって
@Guest 18:32
聞くと、そのあれですね、その、ここのコンポーネントレンダリングを待つみたいな雰囲気を感じます。僕はそうなんで、
@Guest 18:41
なんで結構レンダリングに関係あるじゃな、
@Guest 18:46
ちょっとま。プロミス、ベースドなレンダリング用な関数で考えると、確かに決していきますね。うん、
@Guest 18:54
そうですね、確かになんかあんまりローディングよりももっとこう一般的な概念かもしれない、なんかのれレンダリングを待つみたいな雰囲気ですね。
@Guest 19:03
とりあえず、プロミス解決させてされてくれみたいなイメージで言うと、確かにサスペンスっていう概念しっくりきますね。
@Guest 19:10
良さそう、
@Guest 19:15
全部な気がしてきた
@Guest 19:16
どれも一応いたというか、ま、どれも別に悪くはなくて、結構好みな気はするですけど、どれで倒すと1番
@Guest 19:26
ま。誰も困らないというか、驚きが最小になるかっていうとこですよね。
@Guest 19:31
どうすか。なんか今色々お話しましたけど、はい、これちょっとじゃあ次試すかみたいな感じであります。どれが
@Guest 19:39
薬とサスペンスはぜひ使ってみた
@Guest 19:42
そうですよね、私もこれちゃんと使ってみようかな。
@Guest 19:47
ポッドキャストで話題に出すように、そういえば、ああいうものもあったなと思ってた。段階で一切使ってないんですけど、
@Guest 19:55
これ使ってみるのあり感めちゃくちゃありますね。
@Guest 19:59
そうそうあれですねビとかだと、そのさっき言ってたビープロミスドは
@Guest 20:06
そうね、一応有力ここぽい感じはしますよね。
@Guest 20:10
あと、ちょっと気になる展開としては、先週ポッドキャストでちょっと話したんですけど、ビューネクストには同じようにサスペンスが入るかも。みたいな。はい、おっていう流れがあるっぽいんで、
@Guest 20:22
作るぜって言ってるんで、実は
@Guest 20:25
あんまり実装上が概念として変わらないんで、とか、今はビープロミスで作ってみて、うん、サスペンスィー3が来たら、サスペンスやってみるかみたいな。あれ、なんかなか
@Guest 20:34
そうですよ
@Guest 20:35
かね。あのま表のま実装は変えずに、その裏側のそのレンダリングの仕組みを
@Guest 20:43
リサスペンスにすみたいなら、ライブラリとしては、そういうことも
@Guest 20:47
できそうですよね。そういうのもありそうなんで、全然なんか可能性としてありそうだな感はありますね。いや、ちょっと。これは
@Guest 20:57
サスペンス回り中心になる可能性も含めて見ておくべきな感じはしてきますね。
@Guest 21:04
いや、さすがにビールでも、リアクトでも書けるっていう話になったら、採用量は増えてきた
@Guest 21:09
そうですね。なんか、何かしらこう答えが出してくれる
@Guest 21:13
そうですね。いや、これはまあみんなそうなんで、サスペンスオブなり、
@Guest 21:19
まあ、それこそグラフケル使うぜっていうなら、ポロ使ってみるないっていうとこで、解決していきましょう。って感じですかね、
@Guest 21:26
まあ、自分たちで答えをつけていきましょう
@Guest 21:30
ね。ま、ただ、有力な選択肢はたくさんありそうなんで、貼っとくから是非見てくれって感じですかね。
@Guest 21:36
はい、
@Guest 21:37
じゃあ、そんな感じで決めますか。
@Guest 21:39
今日はえーspaのえ、状態管理、特にえー、非同期通信とか。まあ、プロミスを扱うものっていうとこについて、
@Guest 21:47
どうやってしょっていくのがいいかなっていう話をえしていきました。
@Guest 21:51
結構ですね。今回の場合は、え、それぞれのフレームワークでの解決方法のは組めてやっていきました。えー、ラインのUITsではですね、このようなえ、ジャパスクリプトやフロントエンドに関するワークについてえ、日々議論が行われています。
@Guest 22:04
毎週金曜日にあるテイスラーベン協会という勉強会で、え、ナジ教育を行ってたりしますので、そちらの方でえ出た話題などについてはですね。ポートキャス内で、え、どんどんこ
@Guest 22:14
返していければと思います。え、その他ですね。このポッドキャストについてのえ、ご意見やご感想もお待ちしております。え、ファッシュタグシャープUIT、アンダースコアインサイド
@Guest 22:23
シプUIT、アンダースカインサイドにてついていただけます。とえ、今後のコンテンツ作戦を参考にさせていただきますので、え、ぜひぜひえついていただければと思います。
@Guest 22:34
ということで、今週はですね。spaのえ、非同期通信におけるえ、状態管理っていうところでえ、ポテト4ディとえーは、メの2人で話していきました。ありがとうございました、ありがとうございました。
