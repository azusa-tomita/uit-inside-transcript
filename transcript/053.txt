@Guest 00:00
こんにちはこんにちはえ。それでは、今週もUIT INSIDEをやっていきましょう。
@Guest 00:07
UIT INSIDEは、ユーザーインターフェースと、テクノロジーを愛する開発者のためのポットキャストです。
@Guest 00:14
最新のウェブ標準や開発、フレームワークの変遷、uyエックに関することまで、
@Guest 00:21
様々なフロントイの情報をキャッチアップできるポップキャストをお送りしております。
@Guest 00:27
twitterでのハッシュタグは、シャープuyt、アンダースコアインサイド、エピソードのご意見やご感想、リクエストなどなど
@Guest 00:36
ぜひツイートしてください。え、それではえ、今回のパーソナリティはえたかだと、
@Guest 00:43
UITのはたさんをお呼びして、え、今回はお送りしたいと思いますそれではよろしくお願いします
@Guest 00:51
はい、よろしくお願いいたします
@Guest 00:54
はいで、今回はえ、ビューススタディの第6回目で、ビュースのフラグメントについて、今回は
@Guest 01:04
取り上げたいと思います。はい、で、デュースのフラグメントについてなんですけれども、ま、これは、あのリアクトにもリアクトフラグメントという
@Guest 01:14
ものがあるんですけど、もまそれに同等なんですかね。ど、
@Guest 01:18
そうですね、うん、うん、うん、ちょっと簡単にじゃあ、早速説明さしてもらいますか。
@Guest 01:25
今回ですねビーススタディのシリーズとして、ちょっと。今日はフラグメントを取り上げようかなと思ってるんですけど、これはビュー3で
@Guest 01:35
え導入される。え、実際にドム状には病が知らないけれども、ドム要素として存在するようなとものとなります。
@Guest 01:43
多分、これまでもほぼ同じような機能として、
@Guest 01:46
ビューテンプレートの中でテンプレートタグっていうのをたまにかましたりすることがあったかなと思うんですけど、あれえみたいなものだと思ってくれたらいいかなと思います。
@Guest 01:56
そもそもですね、ウェブの標準自体にまリアクトもそうなんですけど、ウェブの標準自体にドキュメント、フラグメントっていう概念があってですね。
@Guest 02:04
ちょっと小事に言われるも貼っておこうかなと思うんですけど、イメージとしては、ドキュメントオブジェクトっていうのが、まあ、ウインドウには入っていると思うんですけど、あれはあれ自体にはそれが1つのドム要素っていうわけではなくて、その中にして、メル要素があって、みたいな形の
@Guest 02:19
ただの箱だと思うんですけど、あれを自分で提起できるような。機能となっておりますと
@Guest 02:24
リアクトの方にですね。すでに。それと、同等の機能として、リアクトとフラグメント、あるいは、タグ名がカっぽのタグですね。
@Guest 02:33
を、使うことによってですね、実現できるような形で、リアクトの機能として、すでにあってですね。それと、ほぼほぼ同じような機能が。bjsにえー、貼ってくれたっていうような
@Guest 02:43
イメージでいいかなと思います。
@Guest 02:47
はい、ありがとうございます。そうですね、デュースのあの、そのテンプレートって、まあ普通要素1つ
@Guest 02:54
だけだったと思うんですけども。そのや、ドキュメントフラグメントのように、その複数の要素をまあルートに持たせるみたいなイメージ。
@Guest 03:03
そうですね、うん、そうですね、実際、えま、どういったことができるようになってるかって話で言うとですね。
@Guest 03:11
そのこれまでと、ビージスのえービーテンプレートにおける、テンプレートタグっていうのがとあると思うんです。
@Guest 03:17
ですけど、はい、テンプレートタグっていうのが、まあ、1番ルートに書くのはと、みんなよく書くかなと思うんですけど。実はこれはその子供にも書くことができて、もも
@Guest 03:28
なんでしょう。複数のドムをまとめて、vイしたい時とかに、テンプレートはいはいておくと、実際に描画されないとドム装みたいなのが生まれるっていうのが結構
@Guest 03:37
書き心地に影響するような形で使えるっていうので、まあ使ってるケースもあったりしたかなと思うんですけど、え、直下に各タグってのは1つしか
@Guest 03:45
書けなかったし、実際書く時もうまくと複数を置いている。操作してくれなくて、
@Guest 03:50
で、例えば、なんか、親にヘッディングとコンテンツがあるようなコンポレントを作るのであれば、親をセクションタグで囲むとか。ほんとにただの愛のためのものだったら、1個。親にディブを挟んでから、
@Guest 04:01
雇用素を2つ置くみたいなことをやっていたかなと思うんですけど、
@Guest 04:05
それがですね。今回解消されて、コンポーネントのルートであっても、複数の要素を書くことができるようになったっていうところですね。ここえービー3では、フラグメントっていう風にえ、保証しているようです。
@Guest 04:17
うん、あの、そうテンプレートっていうのが、すでにあったっていうところは、ちょっとあれですね。リュースじゃない人からすると、ちょっと混乱ポイントか。
@Guest 04:25
ああ、確かに確かにちょっとこれはあれですけど、ちょうど前回のビー3勉強会のやつで、
@Guest 04:36
テレポートの話だと思うんですけど、実際はポータルトテレポートやっているのがえやっている子とは一緒っていうのと同じでですね。まあ、名前が違うだけで、実質的にリアクトでいうフラグメントっていうもの
@Guest 04:48
が、bjsのテンプレートタグとして、これまで使えていたんで、ま、その表現の幅がルートでも使えるようになったコンポーネントのえ、ルートでも使えるようになったっていうだけの変更かなと思います。
@Guest 05:01
はいはい、そうですね、そうですね、うん、
@Guest 05:04
多分1番嬉しいのは、そのあのルートショックのそのテンプレートには複数要素、そのなんか
@Guest 05:11
今までだと結構そのて適当にそのディブを1つ用意して、その下に複数用意するっていうこととかはなくなるってのは、単純にその構造が単純化して
@Guest 05:21
嬉しいそうですね結構行が単純化したりだとか、あと、今とかだと今の仕様だと許可されてますけど、え、dldtddとか、
@Guest 05:32
あのタグとか使う時っていえ、はい、dはtとdddって、今だと間にディブかましてもいいように、えー、仕様が変わったりしてますけど、元々は並列じゃないといけなかったとか、
@Guest 05:43
まあ、あいった並列であることを前提としているようなえ、要素ってたまにあるかなと思うんですけど、はいはいはい、例えば、そのddddをまとめた
@Guest 05:52
質問のアコーディオンみたいなのがあったとして、dtにタイトルがあって、ddにコンテンツ出すみたいなものを作るってなると、これまで結構コンポーネントとして、切り出す時に上に1個自分を置いてみたいなことになりがちだったんですけど、まあ、そういったコンポーネントを作りたいときに、
@Guest 06:07
結構便利になるかなと思いますね。
@Guest 06:09
そうなんか、上に置く置くタグに適切なものがない時っていうのは、たまにあるかなと思いますので、そういう時にデブを入れなくてもいいみたいなのがいいところかなと
@Guest 06:19
もいうん、
@Guest 06:20
まさにdtddタグはそれにぴったりの
@Guest 06:25
そうっすね。1番イメージつきやすいのはそこかなと思いますね。
@Guest 06:31
じゃあ、あの、逆にそのフラグメントが来ることによって、なんか懸念すべき点みたいなのってあったりし。
@Guest 06:38
ああ、そうですね、それで言うとですね、基本的にフラグメントは複数書いた時に自動的に解釈して
@Guest 06:46
描画してくれるんで、それ自体は問題ないんですけど。え、ビーチスの場合、結構。親の方から子供のコンポーネントに、例えば、見た目用のクラスとかを
@Guest 06:56
親のビューテンプレートの中で、子供のコンプラネントを呼び出す時に、クラスに。例えば、なんかイズアクティブみたいなものをつけるみたいな形で、クラスとか。ベット属性を付与することってのが結構あったかなと思うんで、
@Guest 07:07
1つ目か2つ目どっちがその属性にえ、該当するのか。もちろんわからなくえ、なるので、自動的に付与されないっていうことは、念頭に置くべきかなと
@Guest 07:18
思います。つまりはですね、親からクラス云々みたいなのを付与している前提でいる場合もあったかなと思うんですけど、フラグメントとして利用する場合ですね。どっちにそれを
@Guest 07:29
つけてやるのかみたいなのは、vvインドでやってやる必要があるっていうのは、え、気を付けておくべきポイントかなと思います。
@Guest 07:39
はい、はい、あいかそうですか、スタコンポーネントのなんか名前そうな特に今までときっと気にせず、そのクラスとかつけられたと思うんですけども。まあ、
@Guest 07:51
そうですね、どっちつけた
@Guest 07:52
そうですか、わからないんですよ、うん、どっちにつけるみたいなのを判断はできない。もちろんできないというか、場合によって変わるかなと思いますので、そこは明示的に
@Guest 08:02
バインドしてやるっていう必要が。はいはい、出てくるっていうのが留意点かなと思います。
@Guest 08:08
あ、あ、なるほど、ありがとうございます。じゃあ、そのビューフラグメントについてま、結構その逆トの
@Guest 08:18
フラグメントっていうのは、結構前に追加されたと思うんですけど、なぜ、この美術のタイミングで、
@Guest 08:25
やっと一そうになったかっていうところは、まあちょっと気になるところですので、ここはちょっとお伺いしたいなと
@Guest 08:31
思います。そうですね、じゃあ、ちょっとえーしよ、介しようかなと思います。これまでも、テンプレートっていうところで、そのルート以外であれば、テンプレートタグとして
@Guest 08:41
使うことによって、え、複数のえーマウント自体ができたはずなのに、なんで今になってると、えーだけこういう風になったんだっていうところはちょっときなえ、気になって
@Guest 08:51
調べていたんですけど、ビューのですね。三毛の頃はですね。コンポーネント自体のマウンドスロジックっていうのが、
@Guest 09:01
エレメントに入っているアウターhmlを完全に書き換えるみたいな実装をしていたらしいです。と、
@Guest 09:07
ちょっとソースコードまで追ってるんではなくて、アップデートするrfcから読んで
@Guest 09:12
知ったところなんですけど、アウトhmlっていうところで、完全にそのコンポーネントは、マウントする先のドム要素っていうところのを、自体を置き換えるっていう挙動を行っていたみたいです。と
@Guest 09:24
えということは、その決まっているマウント先の唯一のドム1つのドムに対して、中身をまって置き換えるって形になるので、複数
@Guest 09:34
書いた場合、もちろんえ、あれの一応染しかえ。書き換えることはできないっていうことえっていう問題があって、えと完全にぜ実装動みたいなところで、これまで複数書けなかった
@Guest 09:45
ということらしいです。とで、ただですね。ビュー3に入って、ちょっとこっちはコード見つつ
@Guest 09:51
え見てたんですけど、ロジックが改善されてですね。インラーhmlの依存となっています。なんで、マウントのえー、マウント先の要素の
@Guest 10:01
雇用素として、全部の結果を連打していくみたいな形になっているみたいでして。これによってですね。そのルート要素でも、フラグメント。実現したえ
@Guest 10:12
実現ができえ、可能となったえみたいですとでえ、実際行動ってみてもですね。その対象となるところに、チルドレンをひたすら連打してるみたいな
@Guest 10:22
あのコードになっているんで、まあ、2個雇用が3個雇用がチュードレンをまるっとレンダーしてるっていう
@Guest 10:27
ところで、これまでのアウターaclでの丸と機械のとは違って、必要な要素をえ、雇用素として設定してるっていうので、
@Guest 10:36
特に問題なく動作するようになったっていう経緯があるみたいです。
@Guest 10:40
あ、ありがとうございます。なるほど、そうですね、まあ、確かに結構実装に深く
@Guest 10:48
入り込んでそうだなっていう予感はしたんですけど、まあ、アウターcmとイタテムの違いっていうのは、まあ、確かに
@Guest 10:56
すいません。僕もか、あの完全なロジックを理解してるわけではないですけど、まあ、説明を聞いてる感じだとまあ、
@Guest 11:03
なるほどなというすごい納得感のあるというか、まあ、メジャーバージョンアップでもないと、なかなか手をつけられなさそうなところだよなっていう感じはしますよね。
@Guest 11:12
そうですよね、うん、まあまあせっかくジュースを使うのであれば、ぜひぜひこう
@Guest 11:20
複数のコンポイントをいっぱい入れていきたい
@Guest 11:24
とこですよね。そうですね、まあ、ちょっとまあ、そのフレーマークの制約で無理やりちょっとディブを足してるみたいなのも、やっぱりこれまでも一定以上あったかなと思うので、
@Guest 11:33
ま。できるだけそんなポンポをデブだらけにしたくないっていうのは、やっぱりみんなあると思うんで、そういうのはうまく対処できていくといいのかなと思いますね。
@Guest 11:44
じゃあ、
@Guest 11:44
あ、じゃあ最後にちょっと1ついいはいすか。
@Guest 11:48
はい
@Guest 11:49
はい、じゃあ、ちょっと私の方からちょっと。フラグメントの紹介しといて、そこれ言っておかないとなと思ったのがあるので、ちょっと言いようかなと思
@Guest 11:57
います。1点注意点がありました。ちょっとこれ1を探してみた感じもそうだったんですけど、bjsで
@Guest 12:06
今アプリケーション書く場合、みんなあのオフィシャルのイエリントプラグインビルっていうので、ビルテンプレートの例えば、
@Guest 12:12
vfを書いた時のキー忘れとかも結構色々指摘してくれる
@Guest 12:16
ルールが入った。あれ、あの、公式のリントルは入れてるかなと思うんですけど、そこにですね。そのビースラッシュ、バリッドテンプレートルートっていうルールがありまして、
@Guest 12:27
これはその名の通り、その今までのビュー2の使用所をえ、複数のルートビューテンプレートの
@Guest 12:33
ルートチョッパに置くことができなかったんで、置いてしまってる場合は、これ間違えてますよ。っていう風な警告出してくれるルールとなっています。で、ただですね、ちょっとこれ
@Guest 12:42
ちがまだビュー3の対応が完了しているわけではないみたいでして。ビュー3のプロジェクトであっても、これが表示されてしまうと言いますか。
@Guest 12:52
まだビュー3がベータの状態、今、収録時点でベタの状態なんで、ベータ用のルールみたいなのが、
@Guest 12:58
パブリッシュされてない状態みたいで、ビーツの色によって、バリドテンプレートルートのエラーが出てしまうっていう状態となります。と、
@Guest 13:07
なんで、もし手元のプロジェクトで、
@Guest 13:09
ま、これからrcとか出てきたら、だんだんびsのrcを入れてみてもいいんじゃないか。みたいな。プロジェクトも出てくると思うんですけど。もしかしたら、
@Guest 13:18
そのエラーが引き続き出てるかもしれないので。手元のエリンとrcjsのえ方を編集して、こっちはオフにしてやるっていうのが必要になるかも
@Guest 13:28
しれません。ま、これ自体は多分今後ビュー3になっていくと、
@Guest 13:33
リント書を禁止するルールでもないとは思うので、まあ、どこかしらのアップデートで削除されるのか何なされるかなと思うんで。ひまずは
@Guest 13:43
手でオフにしましてしまっていいかなと思います。まあ、結構えとvsコードのエーションとか入れてたら、普通に。ビュー3の環境で書いてても怒られてしまうんで、
@Guest 13:54
まあ、その辺はえ、一応オフにするっていうのがえ、はい、今時点だと必要かなと思います。
@Guest 14:03
ああ、なるほど、そうですね、イスリントの対応がまあ、もうちょっとかかりそ
@Guest 14:09
そうっすね、まあ、ちょっとオフィシャルのエコシステムの方も、もう完全に追いついてるわけじゃないみたいなんで
@Guest 14:16
ま。多分ほぼ全員が入れてるであろう。一応イエスリントの方はえ、注意してい
@Guest 14:21
た方がいいよってのはま、これなんで、普通に不具合とかではなくて、まあ、単純にまだ追いついてないだけっていう風に。
@Guest 14:28
はい、じゃああれですね。イエスリントのルールを見直して、
@Guest 14:35
最初に使う時は、不害ではない人だけ把握はいといいかなと思います。
@Guest 14:41
ありがとうございます
@Guest 14:45
というわけでえ、今回はユーススタディのえーと、フラグメントについてえ、お送りしました。
@Guest 14:53
私達UITのメンバーが所属するLINE株式会社では、このようなフロントエンドに関する議論を日々行っております。
@Guest 15:02
今回のユーススタディのフラグメントの内容についても、毎週行われている社内勉強会で発表される成果でもあります。
@Guest 15:11
ここのえUIT INSIDEでは、社内社、外問わず、どんどん情報を発信していきたいと思っております。え、また、
@Guest 15:20
ポットキャストを通じて、第に興味を持っていただけた方は、え、カジュアル面談をえ、現在実施しておりますので、ぜひえページカのリンクよりご連絡ください。
@Guest 15:31
それでは、また次回のエピソードでお会いしましょう。あなたさん、ありがとうございました、
@Guest 15:37
ありがとうございました。
