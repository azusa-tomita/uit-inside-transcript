@Guest 00:00
こんにちは、UITのはめです今回もUIT INSIDEを始めたいと思います。
@Guest 00:06
UIT INSIDEは、ユーザーインターフェースと、テクノロジーを愛する開発者のためのポットキャストです。
@Guest 00:13
最新のエブ標準の動向や開発、フレームマークの変遷、uiやウェックに関することまで、毎週フロントエンドの情報を
@Guest 00:22
脱進していくことを目的としています。ハッシュタグはシャープ、UIT、アンダースコアインサイドエピソードのご意見や感想は
@Guest 00:32
いつでもお待ちしております。ぜひぜひツイートしてください。
@Guest 00:37
今回はですね、もう定番となりつつある花倉さんと所さんをお2人をお呼びしました。はい、では、
@Guest 00:45
お2人よろしくお願いします
@Guest 00:48
よろしくお願いします。
@Guest 00:54
今回はですね、年末にUITが主催していました。ミートアップであるフロントエンド、紅白エティ合戦
@Guest 01:03
についてやま。その後、アフターショーということで、まあ、同じメンバーでポットキャストを収録しました。でま、その中で結構色々と
@Guest 01:12
話が出てたと中で、まさにこの2人に今回は深掘りして聞いてみたいということで、お呼び再びお呼びしました。
@Guest 01:21
で、今回お2人を呼んだ理由っていうのは、ま、
@Guest 01:25
どちらもリアクトのライブラリーを継続して開発してて、それをossとして公開しているという活動を続けていらっしゃるということで、
@Guest 01:35
まそれぞれ、まあ、どんな開発をしているかっていうことをま、ミートアップの
@Guest 01:41
時点での内容もそうですしま、そのあと、なんかこうえ。進捗みたいなのがありましたら、まあこの場でも聞いてみたいなと思います。
@Guest 01:50
では、どうしましょうえ、花くらさんから聞いてみますかね。あの、今、どういった活動をされてるかっていうのを
@Guest 01:58
ちょっと教えていただけますか。
@Guest 02:01
そうですね、最近仕事ではちょっとネクストjを触って、おやジを。ネクストに移さないといけない。
@Guest 02:09
あの事案が発生してしまったので、
@Guest 02:12
はい、ギャツビーをネクストに移すっていうのをやっています。という感じですね。で、まあまあ趣味開発だと、えっとゆ、あの紅白、フロントエンド合戦以降。
@Guest 02:22
ずっとフルートをどうやったら、プロダクションに突っ込めるかっていうのの検証とか、あの、バグ取りとかをひたすら進めていて、
@Guest 02:31
そうですね。できれば、1月中にだ出したいっていうなんかをどこかでかわしていた気がするんですけど、ちょっと残念ながら、あの諸々が忙しくて、あの、
@Guest 02:41
今ようや。今今っていうか、まあ大体導入は終わっていて、今細かい
@Guest 02:46
あの
@Guest 02:47
ポップステットとかね。あの、そういうバグりやすいところのバグを直したりして、まあ、なんかメジャーリリースを迎えようとしているという感じですね。
@Guest 02:56
多分、さすがに2月中にはフルートメジャーリリースはできるんじゃないかな。あのた、メジャーリリスを出す前には、まあ1週間くらいは1回ほ本番で動かしてま。ちゃんと問題ないねっていうのを確認してからやる予定ですという感じ
@Guest 03:10
はいです、ありがとうございますそうですね、まあ個人開発なので、そういうはいな予想外の出来事とかは全然もう終わりだという。あ、
@Guest 03:20
ですよね、ですよね、
@Guest 03:21
もうもうさ、最初入れた時
@Guest 03:26
だ、誰じゃこれ誰じゃこんなんでで
@Guest 03:29
あの、自分に切れながらば、バグをした
@Guest 03:32
最初のスピード感がすごかったですね。もう、あの、その多分tにタップに合わせて公開されたのと、それそれを考えると、
@Guest 03:41
そりゃそりゃそうだろみたいなそういや、でも、もう2月中には公開できそうっていうことで、
@Guest 03:50
ほんとかな
@Guest 03:52
はい
@Guest 03:53
ま、またなんか忙しくなるんじゃないの。
@Guest 03:57
いや、そ、そういうフラグを立てないで、
@Guest 04:01
まあまあまあ多分ね、もう、ほんとにでかいバッグが取れたから、まあ、2月中には公開できるじゃろうという見積もりではあります。
@Guest 04:10
はい、やってもないですね、
@Guest 04:13
それは楽しみです。ま、私もま触りだけしかちょっと使えてないっていうところはあるんですけど、も。
@Guest 04:23
まあ、でも内容については別にここで紹介する必要は
@Guest 04:30
ありますかね。結構かわ変わりましたあの、前回から
@Guest 04:35
えっとね、変わった気がするちょっと待って、あの、1か月前の時点でどういう状態だったか、もう何も覚え
@Guest 04:43
えと、えっとね、1ヶ月前はね、確かね、まだね、ゆずルーターフック、あゆずるタクスが入ってなかった気がしますね。
@Guest 04:53
ああ、なんか
@Guest 04:55
でそのあと、1.0.00デブをなんか公開してたら、えっとうさんに補足されてて、あの融通ルートはなんで使っとるんやん。あんな型型の危ないものって、あの
@Guest 05:07
はい、あの、僕もユズルーターについては、あんな型の危ないものっていう感想は。あの、持ってるんですけど、あのとはいえ、あのブロイドハブはリアクトルーターで作られていて、そこからリアクトルーターで作られたアプリケーションし、いつかま
@Guest 05:20
暇があったらネクストジェースにしたいよねっていう気持ちがあるので、まあそこで一旦ステップをはこう刻むというところで
@Guest 05:29
で、フルートにゆずるターフックを入れて
@Guest 05:33
で、まあ、アプリケーションコードのルーター周りをネクストェース5冠っぽい感じにしつつも、後からネクストジースにあげればいいんじゃない。っていう3段で入ってるっていうのがありあります。
@Guest 05:44
そうですね、ままメジャー開発ま
@Guest 05:48
あの、1か月前時点から1番大きく買ったのはそこですね。もう、なんか、他のユーズパラムスとか、なんか細かいフック全部デプリケットにして、もうユーズルーターか、ユズフルートターを
@Guest 06:00
どっちかを使ってくれ。ただし、ゆずフルートルータを使ったら、お前の将来は保証しないけどなっていう。
@Guest 06:06
なるほども
@Guest 06:09
そう。ユーズフルートルタは、あのヒストリが触れたりとか、なんか色々便利な機能が入ってるので、まあ、なんかネクストジェースとは、互換性が
@Guest 06:18
あの完全にない、もうそこのそこにしかない機能使ったら、お前ネクストジェースに移行するときに、どんな苦しみを
@Guest 06:26
味わって、俺は知らねえぞみたいな。
@Guest 06:29
いや、なんか、名前名前からするとすごい。あのフルートがさも手厚くサポートしてるのくれるのかと思ったんですけど、
@Guest 06:37
あれはまあ
@Guest 06:40
無理です。ちょっとジースのし、
@Guest 06:42
ネクストジュースの仕様めちゃくちゃあってたんですけど、ヒストリステットまともに触る方法なくて。
@Guest 06:49
あ、そうなんですね。
@Guest 06:51
あと、ビフォアンロードとか、あそこらへんのイベントフックもなんか結構エラーを投げて、なんか自前で回収
@Guest 06:57
したらえちゃうみたいな。なんか、結構ふわふわとした危ない方法が、あの、結構あって、
@Guest 07:05
あの、どうしてもネクストジェーと互換性を取りたいという気持ちと、あの、ネクストジェースにはない機能を使いたいっていう気持ちを合わせると、なんか、僕の中で出た答えはうん、APIを分けようっていう
@Guest 07:17
感じになったっていう。
@Guest 07:19
なるほど、なるほど、いや、正しそう。
@Guest 07:22
いや、悩みましたねとてもう
@Guest 07:25
今回初めて聞かれた方に出演すると、結構このフルートっていう、そのプロダクトの。まあ、元がその
@Guest 07:33
業務上の問題を解決するためっていうところもあって、まあ、なかなかま
@Guest 07:39
なんて言うんすかね。純粋なこう。あの、理想を追い求めるら、ライブやりという
@Guest 07:44
ところの側面以外にも、そういうなんか、ある問題を解決しないといけないみたいなところとかもあって、あそこもあの、ちょっと後半で
@Guest 07:53
私聞いてみたかったので、まあ、それもああで
@Guest 07:56
はいはい、じゃあからたっぷりお話をしましょう。
@Guest 08:08
はい、そうですね、フルートに関しては、ま、そういうところですかね。
@Guest 08:12
あとは、まあ、なんかチラっとあんまり強く告知はしてないんですけど、状態管理ライブラインのリスってやつとあって、モーダル状態管理。ライブラインのモードレットってやつを。まあ、なんか
@Guest 08:22
最近イギリスしてますね。
@Guest 08:26
はい、すいません、ちょっとかなり僕のターンが長くなってしまって、申し訳ないんですけど、
@Guest 08:32
リスっていうのが、まあ、アフルールすらリスlisでリスなんですけど、
@Guest 08:37
あれですね。ページ単位の状態管理っていうとこに注目した。なんか、パッと使い捨てられるビーxみたいなライブラリです。ああ、
@Guest 08:47
そのspaのそのいろんなページを遷移する。あの、そのセッション中の状態をなんか管理しようっていう
@Guest 08:56
考え方ではなくて、あのたまにあるじゃないですか。なんか、こうめちゃくちゃめんどくさいフォームとか。
@Guest 09:04
ああ、はいはい、
@Guest 09:05
なんかこう1つのホームの中でこう追加したり、削除したりできる要素があったりとか、
@Guest 09:13
なんか、細かいバリエーションしないととか、非同期通信して、なんかどこうしないとみたいな。ああ、なるほど、ちょちょっとそういうめんどくさい
@Guest 09:22
状態管理なんか局所的に非常にめんどくさい、あの状態管理をどうどうやってやろうかねって考えて作ったのがリスっていうやつで、まあ
@Guest 09:31
きゅう。まあ、なんか仕様としては本当にビーxですね。つ作ってから気づいたんですけど、あ、これビューxじゃんって
@Guest 09:42
あ、はい、どうぞ。クリエットスライスってやつがあって、そのスライスに。アクションとま。あと、初期ステートと、あと、コンピューテットプロパティーを設定して、
@Guest 09:52
で、そのアクションを叩くと、まあ
@Guest 09:55
じょ。その中でま色々非同期通信とかやったりして、状態を変えてて、リアとリアト側にはその状態が降ってくると、
@Guest 10:02
うんで、なんかその状態から計算可能なじょ。別の状態とかは、コンピューテットプルパティで、まあ、なんかステートから計算させるようにして、
@Guest 10:11
という感じでやっていくと、リアとから結構副作用
@Guest 10:16
ヤトのあのコールバックとかから副作用を起こすようなことがだいぶあのリス側に移行できるので、
@Guest 10:24
割とそこら辺の副作用を伴う周りの処理が。非常にテストが書きやすくなったりとか。ま、単純にリアとかもその
@Guest 10:33
アクションに引数を渡すだけのコールバックになって、まあ、めちゃくちゃコンポーネントがシンプルで、アプリケーションの全体状態管理ではないので、まあ、なんか状態がページが変わったら消えちゃっていいよねっていう感じで、結構あのなんだろう。ステートを割合直に触る
@Guest 10:47
っぽい。なんか、APIが生えてたりとか、
@Guest 10:49
フラックスって、あの、そういうこう小回りが欲しいページだとめんどくさいんですよね、どうしてもいちいちアクションを投げて、なんかストアに渡してみたいな
@Guest 10:58
で、逆にあれはあれはなんで必要なんだろうって考えると、なんかこうアプリケーションのなんかどういう
@Guest 11:04
どういうなんか、データのやり取りがあるかとか、ユースケースとか、なんか治安を守るために、ああいうのが必要であって、逆に
@Guest 11:12
1ページだけでパッと消えちゃうやつだったら、多少治安悪くてもよくねっていう割り切りで、なんか、ステットに直接なんか、プロパティをセットできるとか。なんか、そういうAPIを許しているっていう
@Guest 11:22
やつですね。
@Guest 11:24
なるほど、結構そうですね、mpi。あの、リレックっぽい
@Guest 11:28
っていう感じなんですけど、確かになんて言うんですかね。そのコンポーネントからそのめんどくさいし、政党の管理周りを追い出したいみたいな、そういう用途
@Guest 11:38
で使えそうと思って出したけど、
@Guest 11:40
そういう感じですね。うん、うん、うんとというとこで、こうそうすごく小さい、使いやすい。なんかbxですね。
@Guest 11:50
うんうん、うん、うん、ありがとうございます。これ、これをシレット裏で開発していたという。
@Guest 11:56
はい、
@Guest 11:58
まあそんな感じです。まあ、あとは、モードレッドに関しては、まあ、なんかモーダル管理台ぐらいなんで、
@Guest 12:04
まなま。なんかこっちについてはま、そんなに深く語ることもないかな。まあ、なんかみんなあのリアクトのコンテキストに状態繋ぎながら、モダル使いたいじゃろ。
@Guest 12:16
なんか、うちもそういう字があったから、そこら辺のコード切り出してみたよっていう感じのノリなので、まあ、なんかこちらはリードミをご参照くださいっていう感じです。
@Guest 12:24
便利そう、モードレッドレンだろ、
@Guest 12:29
結構サンプルコードとかになんかこうあのいけてる。なんか、モーダルの
@Guest 12:35
出し方みたいな。あの、なんか、シュッとフェードインしてきて、シュッとフェードアウトしていくみたいなモーダルをどうやったら作れる。はい、サンプルコードに突っ込んであるので、あえ、ザンプルあります。
@Guest 12:47
おお、なんかいっぱいありますおー、バックドロップ。あ、皆さん、あの、イラレールはもちろんショのトにありますので、
@Guest 12:57
ぜひあよろしくお願いい見てください
@Guest 13:01
という感じでね。なんか、色々作ってたらなんかあれこれ
@Guest 13:05
なんかもうちょいがん張ったら、普通にフら。あのリアクト全部制覇できるやんみたいな。リアクトの大体めんどくさいところ、全部制覇できるなっつって、なんか、全部フルールジェースをガンデーション中に突っ込んでるんですけど、
@Guest 13:17
まあ、うん。なんか多分この調子で行くと普通になんかリアクターアプリケーションスイートみたいなな名乗り方できるなと思いながら、なんかこう次何しようかなって考えています。
@Guest 13:27
すごいですよね、なんかもあんまりもうふ、フルール関係なく、全部全部入りみたいな感じになってますよね。
@Guest 13:34
全部になっていました。なんか、ノリでやってたら
@Guest 13:40
というところでね、はいというところで、まあ、ネクストジュースとか。あの、最近のリアクトアプリの動向を踏まえて、なんかもうちょい
@Guest 13:48
こう適合できていったらなと思っています。
@Guest 13:52
ありがとうございます
@Guest 13:54
はい、なんかなかった、失礼しました
@Guest 13:57
いえいえ、ありがとうございますじゃあ、みさん
@Guest 14:05
のターンなんか、またバトルみたいに紹介したんですけど、いやこ今回は普通にあの、お互いそう紹介すし合うっていう形なんで。
@Guest 14:15
はいでうさん最近はどんな開発を進めてますか。
@Guest 14:22
そうですね、まず、UITet合戦で話したロンはま、そんな大きく何か変わってるわけじゃないんですけども、
@Guest 14:32
まあ、1つだけ。自分が小説関わってないんですけど、プロダクションにちょっと投入しようとしてくれているところがあるみたいで、
@Guest 14:41
やったぜ。
@Guest 14:43
そうなんすよ、まあ、そっからちょっとAPIここ使いにくいとか、こここうしたらいいみたいなフィードバックはもってるんですよね。
@Guest 14:52
なので、スキを見て、そこを直して、個人的にはもうちょっとAPIもいい感じにしていきたいなっていう風に思ってはいます。
@Guest 15:01
ただですね、ロコを作ってみて思ったのが
@Guest 15:04
やっぱりなんか世間がまだまだ片安全性に関心がないな、みたいなことをそう
@Guest 15:12
いや、ルーティングカタンゼで、何が嬉しいの。みたいな人もやっぱたくさんいるんですよね。
@Guest 15:18
あ、あまち結構きいところではありますよね。なんか、ルーティングって結構1回書いちゃったら、なんか
@Guest 15:26
もうい安全じゃんみたいな、
@Guest 15:28
なんかすげえすげ。え。ざっくりした解釈をすると、そういう解釈もあるんで、ま、あとはいえやパラメーター見せたら怖いし、僕は片全欲しいよっていう
@Guest 15:37
気持ちはあるんですけど、結構説得ね、そこらへんのうん、難しいですね、
@Guest 15:43
そうなんですよね、自分がソロコン作った直接のきっかけは、業務でコード書いてた時に
@Guest 15:50
こうなんか仕様が変わってこう。ルーティングっていうか、ページが次々なんか繋ぎ変わるんですよ。それで、いろんなパラメーター受けはしたりしてたもんだから、
@Guest 15:59
そこでもうミスりまくって、なんかデータが変な方に行ってしまったり、データがなくなってしまったりとか、そういうのを経験して、あか、安全性が欲しいなって思ったんですよね。
@Guest 16:09
ああ、なるほどね、
@Guest 16:11
確かにそれはああ、そのし、普通になんか
@Guest 16:16
説明そのシー普通になんか語るだけで結構説得力ありそうだけどな。あんたこのあの、もうこのパラメーター続くって本気で思ってんのって
@Guest 16:25
そう。やっぱ実際変わるなってことを学んだんですよね。なるほどね、
@Guest 16:30
うん、なんかそこはもうちょっとこうなんかわりわかりやすいっていうか、理解しやすい。具体例に落とし込んで、なんか用意できたら強いかなとはちょっと思ってますね。
@Guest 16:41
なるほど、なるほど、
@Guest 16:45
そうですね、運用していって変わっていくケースはま、結構怖いですね。はい、なるほど、あ、めちゃくちゃ理解が深まりました
@Guest 16:54
あ、それはよかったですまあ、そんなこんなでやっぱりこうもうちょっと
@Guest 17:00
このか。ルーティングの型、安全性という概念を広めたいなっていう風に思ってまして、なので、今年に入ってからでしたっけ。なんか、記事を書いたりしましたね。
@Guest 17:09
カゼルーティングとはみたいな
@Guest 17:14
そう、それはそれでまたへそうなんだとか、どうでもよくないみたいな。色んな感想が集まるわけですけど、ま、そこで、ちょっとま。フルートもちょっと紹介さしてもらったりとか、
@Guest 17:24
ハートありがとうござい
@Guest 17:25
拝見しました。
@Guest 17:26
あ、それはよかった。あと、ネクストナクスト向けにパスピーラっていうのが出てたので、その後で紹介してみたりとか、
@Guest 17:33
なんでかわかんないけど、日本人が作ったライブラリがあの辺すごく多いですね。なんか、ルーティングの方、安全性の領域だと
@Guest 17:41
なるほど、そうな
@Guest 17:42
あぱ、パスキーダもそうでしたっけ。
@Guest 17:45
そうですね、あれは日本人のスピードとか、あと何でしたっけ。フルリオ
@Guest 17:53
はいはいはいはいえ、あの辺を作った方の作品なので。
@Guest 17:57
ああ、なるほどね
@Guest 18:01
ね、そう、日本人ばっかりその辺やってて、もしかして、自分のロコがきっかけだったら嬉しいなとちょっとだけ思いつつ。
@Guest 18:07
まあ、
@Guest 18:08
そうかどうかは全然わからないですが、
@Guest 18:11
いやいや、そ、そんな気がします。
@Guest 18:16
ああ、そんな感じなので、やっぱりルーティングの方、安全性については、なんか警防活動ってあれでしたけど、
@Guest 18:23
もうちょっとこう認知されたいというか、盛り上げていきたいなってのが思ってるところですね。
@Guest 18:29
なるほど、なるほど、
@Guest 18:32
はいっていうまあ、ロの話が1つありまして
@Guest 18:35
ま。これは。そして、もう1つ全く別の話として、最近やってるのがまたcssejライブラリーをちょっと作ってしまったっていう話があるんですけど、
@Guest 18:45
あ、もしかしてあれ2つそれはか
@Guest 18:47
はい
@Guest 18:48
あ、2つ目だったんだ。あ、なるほどはなんか前から作ってたやつのなんかあれね、進展があったのかなって思いながら見てました。
@Guest 18:55
あ、全く別のコンセプトで、別のものを作ってしまいました。
@Guest 18:58
あ、なるほど、なるほど、お
@Guest 19:01
えで。なんか前から作っていた1つ目のシセセン、ジェスラウリはカステラっていうやつで、なんかウェブコンポーネント
@Guest 19:10
というか、カスタムエレメンスとか、その辺の技術使ったら良くないっていうコンセプトで作ったやつなんですけど、
@Guest 19:17
まあ、今年に入ってから作った。もう1つのやつは、ライトウィンドcssっていう名前を付けてしまいまして。
@Guest 19:25
はい、明らかにそう明らかにテールウィンド意識してる名前なんですよね。え、そうというのも、そうて、
@Guest 19:34
紅白lt合戦でも、ちょっとだけ確かテールインドの話がありましたよね。ヘッドレスuyとか、その辺の文脈で、はいはいはいはい
@Guest 19:42
はい、その辺の流れもありましてこうテールウィンドがここ1年くらい非常に。まあ、日本でも
@Guest 19:49
こうなんか知名度を上げてきてるというか、なかなか使われてきてるなと思ってるところがありまして。
@Guest 19:58
あ、テルミントって結構何年か前からあったけど、き物だなって印象が結構自分を持っていたんですよね。
@Guest 20:05
はい、なんかすごい覚えづらいクラス名をたくさん並べて、あ、
@Guest 20:10
ブートストラップ時代をなんとなく、なんか思い出。なんかエドキを覚えてれば。まあわからなくはないけど、ちょっと頭辛いなみたいな。
@Guest 20:19
はいはいはい、絶妙なところがありますよね。
@Guest 20:21
そうなんですよね、なんでまあ実際twitterとかではテルウィンドこれどうなの。みたいな意見が。まあ、結構自は観測していたわけですよ。
@Guest 20:31
でも、そんな中でも結構実際にテールウィンドウを使ってみたら、あれ、案外良くないっていう意見がちらほら出てきまして、
@Guest 20:40
結構みんなテレビのにやられていくんですよね。やられていくじゃないけど、
@Guest 20:47
魂を持っていかれています。
@Guest 20:49
そうなんか、いざ使ってみたら、意外と良かったみたいな人が結構いるんですよね。
@Guest 20:58
うん、うん、うん、ええ、
@Guest 20:59
はい。
@Guest 21:00
なので、自分もまあ実際テールウインドウを使ってみたんですけど、
@Guest 21:05
まあ、テレビのの良さは分かったけど、やっぱクラス名あれ、辛いなって思ったんですよ。
@Guest 21:11
なので、まあ、そのテールウィンドと同じ各社の利点を受けられるようにしつつ、
@Guest 21:18
なんか短いクラス面やめて、生のシ生素。そのまかけるようにしたら、どんなものになるかなと思って作ってみた
@Guest 21:25
ら。ライトウィンドcssができたっていう流れですね。
@Guest 21:29
ほうほうほう、なるほど、なるほど
@Guest 21:33
までも結構そのAPIを見たら、APIってか、使い方を見たら一目瞭然って感じはありますね。
@Guest 21:41
そうですね、なんか
@Guest 21:44
API作ってから気づいたんですけど、ライトウィンドcssのAPIがエモーションってあるじゃないですか、はい、はい、あれのあれのなんかcssを直にかけるやつ、あれと、実は同じAPIになったんですよね。ああ、なるほどあ、
@Guest 21:59
cssってテンプレートリテラの中にし、cssを直に書いたら、なんかクラス名に変換して使うことができるみたいな。
@Guest 22:08
まあ、あれと同じapになりました。
@Guest 22:11
エモーションの、あのスタイルドから、そのなんですかね、そのディブのコンポーネントの要素を機能をとって、そのクラスメだけ取り出せるところっていう。
@Guest 22:22
そうですね。そうですね、うんえ、ボンションのスタイルドじゃない方みたいな感じ。はいはいはいえ
@Guest 22:30
なんですけど、エモーションって、結構ランタイムにそれをやるんですよね。自分の理解が正しければ、ランタイムにはいはい
@Guest 22:39
ええ、そのcssの生の文字列受け取って、それをスタイル要素が何かに突っ込んで、クラス名発行して返すみたいな
@Guest 22:48
ことをやるんですけど、ま、それをもうちょっとビデオタイムにできたらいいんじゃないかっていう発想がまず1つあって、
@Guest 22:57
はい
@Guest 22:58
うん、うんうん
@Guest 22:59
で、なんか、ビデオタイムにその辺やるってのは、リナリアがすでにやってるんですけど、
@Guest 23:03
はいはいはいはい、
@Guest 23:05
なんか、ライトウィンドcssで新しくそう挑戦したこととして、こういい感じに最適化して、
@Guest 23:11
まあなんでしょう。クラスじゃなかった、シセスを最小化したいっていうのがあるんですよ。つまりほど、
@Guest 23:19
talendocssと、それこそ同じようにこうアプリ内で使われるすべてのcsssが1箇所にまとまって、ドンとある。しかも、それが
@Guest 23:28
いい感じに最小化されてるみたいな状態を目指していて
@Guest 23:32
はいし、
@Guest 23:33
テレビングのcssだと、いわゆるパージがあって、あれで余計なクラス名は全部消すことで、ま、一種の最適化というか、
@Guest 23:40
最小化が実現されているんですよね。
@Guest 23:43
はい、
@Guest 23:45
なんでライトウィンドcssは、それをある種逆向きにしたと言いますか。
@Guest 23:50
生のシーを書き集めて、それに対して全部クラス名を発行して、1つにまとめてcssを履くってことやってるんですけど、
@Guest 24:00
そこで、まあ特徴的なのがこう。複数のコンポーネントで、同じcssが使われてるとするじゃないですか。
@Guest 24:08
なんか、ディスプレイフレックスとかよく使われるやつはも、どこで使われても、全部同じクラス名にするっていうことをやってみたんですよね。
@Guest 24:18
ああ、なるほど、
@Guest 24:20
えこう、重複を排除するっていうんですかね。なんか、
@Guest 24:25
アプリ内の全ての例えば、ディスプレイフレックスに対して、aっていうクラス名が割り当てられたら、
@Guest 24:30
そのアプリ内の全てのコンポーネントがaっていうクラス名を使ってるみたいな、そういう状態ですね。
@Guest 24:36
はい、うん、うん、うん、
@Guest 24:42
なるほど、それって結構どれくらいのリドで、なんか
@Guest 24:46
その統一するんですか。プロパなんか、1プロパティとその値を被ってたら程度だと、なんか結構厳しいですよね。
@Guest 24:56
そうですね、だから、ほんとにここをガチガチに最適化するってのは、ものすごいトピックではあると思うんですけど、は、い
@Guest 25:04
ま、自分はちょっと。とりあえずpoc的な感じで作ったので、そこはこれからの課題って感じですね。
@Guest 25:16
あ、そう今のところはとりあえずもうプロパティー名と値が完全一致してるものに、もう同じプラス名を割り当てるだけみたいな状況で。
@Guest 25:24
ああ、なるほどなるほど、うん、うん、うん。
@Guest 25:27
一応なんか、一応まとめられるときは、複数のプロパティを1つのクラス名に突っ込んだりしているんですけど。
@Guest 25:35
あ、もうすでに結構頑張ってますね。
@Guest 25:38
そうですね、結構ガリガリアルゴリズムを書いたんですけど、これどれリズムで
@Guest 25:45
なんかグラフとか出てきますね。
@Guest 25:48
そうですね、あ、グラフは実はあ、これグラフを作ったらいいんじゃないかなと思って。ソースコードに書いたけど、実は使わなくて、
@Guest 25:58
そう1回あ、これグラフだよなと思いながら作ったんですけど、なんか、将来的にガチのアルゴリズムを書くときに、もしかしたらグラフを使うかもしれないですけど、
@Guest 26:07
今はそこまではって感じですね。
@Guest 26:10
いや、これ多分踏みたら相当cssの知識つきそうですね、そうなんですか、ステカスケーディングの
@Guest 26:21
真髄に触れそう。
@Guest 26:23
はい、こう。なんか、ショートハンドプロパティと、ショートハンドじゃないつ書いたら、どっちが優先されるのみたいな。そういうことが色々関わってきそうで。
@Guest 26:35
ちなみに、ドウィンドって、複数のクラスをつけるのは、今んとこ想定してないという感じですかね。
@Guest 26:42
待てか、1つ生のcss
@Guest 26:49
文字列をなんか複数のクラス名に変換されるイメージですね。やることとしては
@Guest 26:55
なるほどなあ、
@Guest 26:58
なんか複数の
@Guest 26:59
別々に複数のし、クラス名結合、別々に複数のクラス名を生成し、それ結合したらなんか壊れないかみたいな。心配はちょっとありますけど、
@Guest 27:09
やめちゃくちゃ心配ですよね。
@Guest 27:11
そうなんですよね、できれば、その辺のユースケースもなんとかしていきたいとは思いつつ、
@Guest 27:18
いや、めっちゃ大変そう。
@Guest 27:21
まあ、でもそこをそう最小化するってのが1番やりたかったことで。
@Guest 27:26
はい、
@Guest 27:27
むしろ、テルウィンドと同じメリット
@Guest 27:30
を実現しつつ。あ、クラス名に頼らないってのは、多分そうするしかないんだろうなって考えた上で、そうしたみたいなところもありまして。
@Guest 27:39
なるほど、
@Guest 27:41
なるほど
@Guest 27:42
ね、正直なんか、結果がテレィンドcssと似てるってことを意識したから。ライトウィンドcssなんて名前をつけたんですけど、
@Guest 27:51
なんかやってることは全然別な感じはしていますね。そうですね、うん、
@Guest 27:56
はい、そうですね。cssの最適化、ビルドタイム最適化だからな。いや、やばいな
@Guest 28:05
そう。ほんとにちゃんと実現できたらやばいっていう気はするんですけど、
@Guest 28:09
いや、かなりやばいですよ。
@Guest 28:14
ええ、これも記事書いて公開してからしたんですけど、一応少し似たようなコンセプトのものに、コンパイルドっていうプロダクトがあるらしいんですよ。
@Guest 28:23
はあ、なるほど、
@Guest 28:25
なんか名前からして、こっちもなんか最適化して、そしてそうだなみたいな名前なんですけど、アトラシアンが出してる
@Guest 28:34
コンパイルドっていうものがコンらしくて、ですね。はいえ、
@Guest 28:42
調べてみた感じだと、なんか
@Guest 28:47
スタイルドっぽいAPIのコンポーネントを完全にビルドタイム最適化じゃない。ビルドタイムにコンパイルして、
@Guest 28:58
もうクラス名に変換するってのは
@Guest 29:01
結構似てますね。
@Guest 29:07
おお、なるほどな
@Guest 29:11
まただこうなんか、グローバルにというか、複数のクラス目、またがってこう。共通化したりするようなことは、
@Guest 29:19
今んとこしていないみたいで、そこが違うかな、という風には感じています。
@Guest 29:26
なるほど、
@Guest 29:29
そうですね、結構まAPIはまいわゆるそのスタイスタイル、コンポーネントに載せつつ
@Guest 29:35
ええ、なんか、最近だと、そういうビルドタイムの最適化みたいなのが、やっぱり言っているインドからやってきそうな予感を
@Guest 29:45
感じました。今
@Guest 29:47
そうですね、テレビのはなんだかんだで、ただのcssとして、最終的には提供されて、
@Guest 29:54
ランタイムがないってのは非常に魅力的なとこだと思うので、そのトレンドには乗っかっていきたいっていう気はしてるんですよね。
@Guest 30:01
うん、うん、うん、
@Guest 30:08
いやいいな、なんかライブラリ開発力がいっぱいできた。
@Guest 30:13
いや、
@Guest 30:14
その僕もあのアイディアとかはその常々
@Guest 30:19
思ってはいるんですけど、なかなかそういう馬力を発揮するっていうのはすごいですよね。いや、
@Guest 30:26
そうですね、馬力発揮はなんかうん、なんかどうやら能力らしいという噂は聞いていますね、
@Guest 30:34
やっと気づきましたかいの能力ですよそれは
@Guest 30:40
はい、
@Guest 30:42
まあでも1回このライブラリ作りたいと思って、割りを発揮しらしちゃうと、なんか他のことが全部手つかなくなるんですよね。
@Guest 30:53
生活破壊しちゃう
@Guest 30:55
そう、それもそうだ。実は今自分タイプスクリフト、本執筆がもうそろそろ終わるっていうとこなんですけど、おお
@Guest 31:02
いや、ライブラリ書いたせいで、その分だけ丸々こう終わりが伸びてしまって、
@Guest 31:09
ちょっといや、本の出費してる大事な仕事じゃ仕事かな。仕事があるので、それぞれちょっとアライトリンドシーシースを
@Guest 31:18
作りたいって思った時、全く手がつかなくなってしまったんですよ。
@Guest 31:23
ああ、そっか、そうそういうためらいもあるかも。なんか、これこれつく作るのはいいけど、作り始めたら、なんか他の
@Guest 31:32
ossとかなんも手つかねえみたいなの。というためはいのはい、
@Guest 31:44
流行ってるoss全部パクって自慢で実装すればいいんだよ、
@Guest 31:50
ラバにも作れるし、ossの動向も掴めるし、あの便利ですね。
@Guest 31:54
ああ、今流行りの自力で再実装ってやつですね。流行ってるかわかんないけど、結構やってる人多いですよ
@Guest 32:04
大事
@Guest 32:05
あ、なんかね、黒魔術がやっぱ黒魔術のままだとね。なんか、困った時の引き出しに困るんですよね。なんかスノそう、フラミング力とかね
@Guest 32:17
そうさっきのそのcssの話もそうですけど、やっぱりなんかどうしてもこう。スノプログラミング力を発揮する時っていうのを
@Guest 32:26
ま、こういう機会だと結構多いかなっていうところもあるんでやうん、うん、いや、なんか
@Guest 32:33
すごいく車での車でのままにしてはいけないっていうのは
@Guest 32:39
そうですよね。そうですね、その自分
@Guest 32:44
あ、ごめんそう自分。たまたま全く別のところで毎週cssしより、6会も実は参加してたんですよ。
@Guest 32:55
なんで実はcssのそれこそカスケーリングの資料とか、たまたま結構読んでて、
@Guest 33:01
おお。なんか、ライトウィンドcssに行きそうな予感はちょっとしていますね。お、
@Guest 33:07
なるほど、
@Guest 33:08
なんで結構基礎力をつけとくと、ライブラリ作れるよみたいなことは、ちょっとだけ主張しておきたい。
@Guest 33:17
はい
@Guest 33:18
ふんふんふんいや、なんかうさんあまり意外でしたね、そんなにcssのなんなんすかね、その
@Guest 33:27
ガチのシーの人だと思わ、
@Guest 33:30
結構
@Guest 33:31
多分皆さん意外だと思う
@Guest 33:33
しょうか、
@Guest 33:36
僕もなんかそこまであ、なんかし書読むほどcss。なんか深く関わってたんだみたいな
@Guest 33:43
のイメージはなかったです。なんか、すごくかかとか、タイプスクリットあたりの人だと思ってたので、
@Guest 33:48
そうっすね。まあ、元々仕様書読むのが好きだっていうのはありました。なるほど、じゃ、ワジャワスクリフトっていえば、エクマスクリフトの使用書も
@Guest 33:57
一応大体読んでいるし、まあ、webhtmlとかあの辺のししも結構たび読んでますし
@Guest 34:06
まなので、今回csssみたいなとこですかね。
@Guest 34:11
ああ、なるほど、そういう基礎力の発揮のされ方が強いですね
@Guest 34:16
ね。ほんとに興味持ったから、cs読んでたら、なんか役立ちそうみたいな、そういう感じでした。これは
@Guest 34:24
いや、さすがに僕はちょっと使用書、頭から1から読む気力はさすがにないないですね。
@Guest 34:31
なんか、たまになんかあれこれどういう挙動すんだろうって気になった時に、ちょろっと。なんか、そこだけしを見に行くことはたまにあるんですけど。
@Guest 34:38
あそ、そうですね、はい、そ、
@Guest 34:39
そういう感じですよね、
@Guest 34:42
やっぱ大体そんなもんですよね。なので、指し頭から全部読みとは自分もなかなか言わないですね。
@Guest 34:49
いや、自分はちょっと好きなので、頭から読んでしまいますけど、
@Guest 34:55
実際のところ使用する読み方を分かってるようになると、まぱっとつまみ食いできるから強いですね。
@Guest 35:04
なるほど、な、
@Guest 35:08
うん、なんか、あの塩しむの好きっていうのはなんとなくわかりますね。結構なんて言うんすかね、その
@Guest 35:15
ま、そのちよそち代の内容自体もそうですけど、なんかこう。
@Guest 35:19
なんか、最初にこういう用語の定義が最初にあって、で、そこから組み立ててるみたいな、そういう
@Guest 35:27
な、なんていうんですかね。これ読めば全部わかりみたいな面白さは共感したけど、全て読むという体力は
@Guest 35:36
すごい。
@Guest 35:43
いやいいな、結構深い話が聞きた感がある。
@Guest 35:53
じゃあ、お2人はあ、テーマライブが紹介紹介と言いつつ、なんかすごい深い話をしてしまった。
@Guest 36:07
ありがとうございますじゃあ、もうすいません、バサッと次のテーマに映りたいと思います。
@Guest 36:15
私からもう1つお聞きしたかったことは、まあ、ライブの開発の話をま、今までされたと思うんですけど、もま、もうちょっとこう視点をあげて
@Guest 36:25
ま。こういうossを公開する、開発して、公開すること自体について、ちょっとお伺いしたいなと思います。
@Guest 36:33
でま、さっきも話が出たと思うんですけれども、なんて言うんすかね。その純粋にこう、自分が欲しいものをスクラッチで開発するみたいな話
@Guest 36:43
を。まあさ、あの、この前のネタップでもされたと思うんですけども、なんか、ここから、
@Guest 36:51
このオイテスライブへの公開のステップアップが
@Guest 36:54
なかなかおっきはへ隔たりが大きいんじゃないかなと思っていてま。そういう自分のよ、純粋なこういう欲求で
@Guest 37:04
できたものを。まあ、そこからこう
@Guest 37:07
ちゃんとこうぜろんな人に使ってもらえるようなところまで持っていくプロセスみたいなって、結構色々とまあ
@Guest 37:17
あるんじゃないかなと思っています。で、まただまそういうのを乗り越えてま。こういうライブライトして、公開したっていう経験
@Guest 37:27
があったと思うんですけど、もまさっきのその塩ムとかもそうなんですけど、なんかそういうこういうメリットがありました。とか、こういう経験が
@Guest 37:37
見られました。とか、そういう話をちょっと聞いてみたいなと思いますが、どうでしょうか。まくらさん
@Guest 37:45
まあ、なんか社内でなんか皆さん、ユーティリティとかはま書くとは思うんですけど、じゃあ、そのユーティリティがオイsになるまでの僕のなんか、中の強い動機っていうと、まあ一言で言って承認欲求だなという。
@Guest 38:00
ああ、なるほど、
@Guest 38:03
なんかとにかくなんかなんだろうこう色々な欲求はあるんですよ。その
@Guest 38:08
もう俺と同じ苦しみをもう誰も味わうなっていうなんか欲求もあるし、あおいここにはくってやつがいるんだろう、みんな見ろみたいな、そういう承認欲求もあるし、
@Guest 38:17
なんか
@Guest 38:18
とか、あとき
@Guest 38:19
もうなんか技術的になんか普通になんかこうもうライブラリー作ってると、なんか楽しいとか、なんかそういうなんかじなんだろう。自分
@Guest 38:29
の今見てるシーンをなんか世の中の全てだと思い込みたくないから、なんか一般なんか、いろんなギースケースを集めて、なんか一般的にして、なんかそのついでになんか外の情報も得られるみたいな。
@Guest 38:40
でなんかで、自分のなんか、業務とかで書いてるコードがこの世の全てではなくて、なんか、それ以外にもいろんなユースケースとか、なんかいろんな悩みとかがあって
@Guest 38:49
っていうのを、なんか色々情報収集していくと、なんとなく、なんかこう。
@Guest 38:54
あの、自分の目の前の悩みと、なんか、一般的な悩みとかっていうLINEが見えてくるんで、じゃあ、なんかそこらへんをなんかちょっと一般に寄せ、
@Guest 39:01
なんかこううちの事情も解決できる。なんか、いい感じの中立会を求めようみたいな。なんかそういう
@Guest 39:09
ところですね。っていう、なんか色々な欲求あるんですけど、まあ公開するかしないかで言ったかな。何か言われたら僕は承認欲求です。
@Guest 39:18
はい、
@Guest 39:21
承認欲求はまあ正直誰しも持ってるっていうか、まあそれはないとライブやりなかなか公開する人ほぼいないんじゃないかっていう
@Guest 39:29
気はするんですけど、なんかさ、あのぜ。あれですね、1つ目の話は、なんかちょっと興味深かったですね。その
@Guest 39:37
私もなんかその業務で開発していったものを、まあ、なんていうんですか。外に出すっていうことまで持っていくためには、ま、それなりのハードルが
@Guest 39:48
あると思うんですよ。でも、はい、なかなかそういうところでこうま、どうせまあ、これこうもう書き捨てみたいなことだし、みたいな。そういう
@Guest 39:57
ところで、とどまらずに公開することによって、なんか
@Guest 40:02
逆にそれ公開したことによって、なんかこう。自分の書いたコードに意味があるっていうのが意味を持たせるみたいなのっていうところは、
@Guest 40:11
ううんとね、多分ない。
@Guest 40:15
あれあないんですか。
@Guest 40:17
多分ね、多分ね、ほんとにね、他人にコード見せても、なんか何のメリットもないし、
@Guest 40:23
まみが豊かになれるっていうのはそうなんだけど、そもそも、そのダイブライって、まあ見られなかったらなんか存在ししてて、もししてなくても、なんか他人から見たら同じなんですよ。
@Guest 40:34
うん、うん、
@Guest 40:36
ほうほうだからなんなんだろう、ちょっと言葉まとめがうまく思いつかないんだけど、何も気にせずに公開していいよっていう話ですね。あの、どうせなんか
@Guest 40:46
公開すればなんかいきなり強い味方が湧いてくるわけでもなくないし。あの星の数ほどおossパッケージってあるので、あの、誰かが1人小さいラベラで公開しても、
@Guest 40:56
あの別にいちいちそれにつけ込んで、なんか
@Guest 40:58
あのどどやりに来る。怖いおじさんたちは、なんかもっとホットなネタにあいっぱい集まってるので、あの、何も気にせず公開しちゃっていいです。あの、ライセンス的な問題とかなければ、
@Guest 41:09
ああ、そっか。いや、なんかあんまり考えすぎてたのかもしれない。
@Guest 41:16
うん、あ、いや、僕もそこら辺なんかちょっと色々考えたりはしたんですけど、まあ、なんかoss。あの、使ってもらうことを。主軸にして、なんか色々考えちゃうと、なんか行き詰まっちゃうんですけど。うん、まあ
@Guest 41:30
あの本当に重要なあるライブラリーだったら、まあなんかあ、これこれうちのケースだったらこうなんだよね。みたいなユースケースとか、多分色々集まってくるんで、
@Guest 41:40
ま。とりあえず脱だけ出しといて、まあ、なんか誰かから意見が来たらああ、そうなんだつってなんか実装してま
@Guest 41:48
で。まあ、なんか音沙汰がなかったら、まあ、それは元々音沙汰がないものだから、音沙汰がないのはそりゃそうよっていう。なんかこう諦めですね。一種の
@Guest 41:56
うんうん、うん、うん、
@Guest 41:58
なんかうん、敵も味方もいないんだったら、別に何をしてもいいじゃんっていう。なんか、無の人理論を振りかざして、僕はなんか適当にライブラリを公開しています。
@Guest 42:09
ああ、いや、なんかちょっとあれですね。このも猛烈な勢いでライブが開するあのい、あの変輪を買い回りましたね。
@Guest 42:21
ま、確かに、精神的な面では、そういうモチベーションで持っていくってのが、多分1番賢いかもしれないです。
@Guest 42:30
うん、うん、
@Guest 42:32
大丈夫あのし、あの悲しく、もう悲しくも嬉しくも、ほんとになんかあの有名な人が書いたあの、めちゃくちゃこうなんだろう。
@Guest 42:41
政治的ワードの強いなんか、味付けで出てきたライフライとかじゃなければ、なんか基本的にあんまり見てもらえない
@Guest 42:50
し、まあ、それがまあ当たり前とは言いたくないんだけど、まあ、そういう世の中なので、まあ気にせず公開しちゃっていいですよ。どんどん出していきましょう。
@Guest 42:59
そうですね、それは大事ですね、うん、いや、ありがとうございます。うん、なんか
@Guest 43:14
私もきも気持ちがまとまらない。
@Guest 43:18
いや、まあこいや、ほんとこれはね、なんか1回なんかこう承認欲求の地獄を買い間見てから、なんかあの全てを諦めないとなんか掴めないか情なので、
@Guest 43:29
悟りですね。
@Guest 43:33
そうですね、一種の悟りですね。これはまあなんかとりあえず公開してなんかくよくよ悩んでみればいいんですよ。
@Guest 43:41
いや、重い重い、深くて重い
@Guest 43:52
そうですね。じゃあ、まあなんか多分
@Guest 43:56
あのおさんさっきのさっきの話に近いところではあると思うんですけど、なんか経験的なのはありますか。
@Guest 44:04
そうですね、まあ、ちょっと最初の方で
@Guest 44:09
こう。自分の作ったライブラリがいろんな人に使ってもらえる経験っていう話がありましたけど、
@Guest 44:15
自分まだそれ経験したことないので、ぜひ経験したいですね。正直なところ、
@Guest 44:20
あれ、僕もそんなにないですよ。
@Guest 44:23
ないですか、
@Guest 44:24
うん、なんなんかふ言うて、フルフルールは。まあ、なんか他の人にうちの会社のプロダクションで、なんか勝手に突っ込まれて、ええみたいな気持ちになったっていうくらいはあるんですけど、
@Guest 44:35
言うて大きいケース聞いたんです。それだけで、まあ、なんか他はなんか勉強会とかまあ、発表した時にいいねっていうのを
@Guest 44:42
聞いて、まあ、なんかま使われとるんだか使われとらんだか知らんけど、みたいな
@Guest 44:47
感じで。でも、まあ、他のライブラリも何本か出してるけど、まあ、ギットハーブのスター数もつかつかなきゃ使っとんのか、使っとらんのか、もうわからんみたいな感じなんで、なんか、ほんとに完全に興務にライブラリを放り出してるんですね。
@Guest 45:00
なるほど、いや、ものすごいわかります。それは、いや、この前twitterでもちょっとだけ話しましたけど、ライブラ出していいねって言われたら、その後何も起きないんですよね。基本的に
@Guest 45:09
いや、難しいっすよ。なんか、
@Guest 45:12
小さいライブラリだったら、なんかちょっと機械あった時に突っ込んでみるかって使ってもらえるかもしれないですけど、状態からライブラリのでかいやつとか、ルーター系ってなると、結構気管じゃないですか。
@Guest 45:24
新規プロダクト作る機会があれば、その時になんかタイミングが良ければ使うかもしれないけど、基本的に既存プロダクトのその機関、ライブラリーを差し替える。モチベーションって、相当強くないとないので。
@Guest 45:35
ええ、
@Guest 45:36
まあうん。ライブラリのもうなんかそういうジャンルとしては、もうなんかま使われづらいわなみたいな。
@Guest 45:46
なるほど、なるほど、いや、自分の作ったライブなりって、特にそういう傾向が強いなとはちょっと思ってるんですよ。っていうのも、
@Guest 45:54
はい、自分って結構自分の思い描いた理想をライブに落とし込む感じなので。はい、
@Guest 46:01
それは大にして、今までのやり方と違ったりするんですよね。ロコンなんか特にそうですけど、
@Guest 46:06
そうなると、なんか人々に考え方を変えることを知ることになるわけで、ただ、新規開発だからとか、そのレベルではなく、ハードルが高いんですよね。やっぱり
@Guest 46:17
そうですね、結構ねえ、
@Guest 46:21
高いですよね、僕もフルール作ってますけど、基本的にまあ、みんなリラックスじゃないですか。はいはい、
@Guest 46:29
だからな、なんでリラックスじゃなくて、フルールなのっていうところに対して、非常に強い動機を与えないといけないんですけど、
@Guest 46:36
まあ、苦戦しますね。そこらへん、なんか、ちょっとマーケティング臭い話になってくるんですけど、
@Guest 46:41
ええええ。
@Guest 46:42
特にあのフルールについては、リラックスツールキット使ったらマジで。なんかあ、このAPIフルールちゃんみたいな気持ちになっちゃって、ああ、なんかフルールを
@Guest 46:50
たみたいな
@Guest 46:51
ような気持ちになったりしてもしてるので、なんかね。ライブラリ使ってもらうのって、なんかそうそう、特にそういう機関系とかになってくると思う。なんか、周りの影響力
@Guest 47:04
をどう使うかみたいな話になってくるので、なんかぎじ技術の話じゃなくなってきちゃうんですよね。
@Guest 47:10
課題だと思われてないもの、課題だと思わせる。なんか、アジテーション力とか
@Guest 47:16
なんか
@Guest 47:17
で多分ね。あの、なんか嫌な話すると、結構インターネットって、今すごくすべての業界がエンタメ化していて、
@Guest 47:25
あつまると、この共感性とか、アジテーションがうまい人たちが、なんかどんちゃん騒ぐと、なんか、それが初めて課題として認識された。面白いって思われるという設定があるんですよ。うん、うん、
@Guest 47:36
まあの、我々もライブラリを選定する時に、あのどれくらい日本語文献があるかみたいなことをなんか軸に選ぶ人たちとかいると思うんですけど、もうあれもそれこそアジテーションじゃないですか。どんだけ偉い人たちが騒いでるかっていう。
@Guest 47:51
なるほど、なので、
@Guest 47:53
中で
@Guest 47:54
難しいんですよね。え、エンタメ力をつけなければいけないっていう技術。あの、うん、そうなんかま、中国全とな技術をするため
@Guest 48:04
して、不況するためには、エンタメ力をつけないといけないっていう
@Guest 48:08
話になってきて、なんか今なんかこうしんどいな。なんか、いや、あれとって今しんどいなって気持ちになってますね。
@Guest 48:19
ま、多分い1個だけ。あの、私たちが有利な点で言うとま、そういうなんて言うんですかね。こう、ライバルを開発し続ける
@Guest 48:28
ことで、なんて言うんですかね、そう、そういう目をさ、あの、なんていうんですかね。こういうのが基礎みたいな、そういう目をみさす見定められるところっていうのは、まあ
@Guest 48:40
1つあるかなと思ってて、結構はい。あの、
@Guest 48:45
さっきのそのあのビランタイムランタイムビルドじゃない。そのえ、あのcssのそのその
@Guest 48:53
コンパイルみたいな。そういう話とかっていうのも、まあまあ今私たちが話したから、まあ
@Guest 48:58
みこう。周りに知れ渡るんですけども、多分はいまおさんが話さ話さなければ、もううょさんがそれを専攻
@Guest 49:09
して実装できるみたいなところあって、やっぱり
@Guest 49:11
はい、
@Guest 49:12
結構あれですよね。こういう、そういう先行先行者なんなんて言うんすかね、そういうは早い早い者勝ちみたいな。
@Guest 49:22
はい、
@Guest 49:23
そ、そうですそうそういうは早い者勝ちです早い者勝ちみたいなところを狙っていくっていうのが、
@Guest 49:32
うん、いや、難しいですよね。なんか、早い早いもの
@Guest 49:36
でも、なんか後で政治力で覆されるみたいなね、結構ありますよね。
@Guest 49:43
なんか、個人開発者の個人リソースで作れるレベルの機能って、あの企業がでかい金持ってきて、でかい宣伝力持ってこられて、平然となんか一瞬で潰されちゃうんですよね。いや、
@Guest 49:55
まあまあまあ結局まあそれでも個人会社のなんか考えたことがし、あのあ、これはいいって思われて、それでなんか広まっていくんだったら、
@Guest 50:03
僕はまあosデス的には大成功かなとは思ってるんですけど、残念ながら、僕には僕のライブラインにはちょっとそこまでまだ強い思想が出てないので。
@Guest 50:14
あ、思想ほんとそれわかりますね。自分も思想を広めるために、ライブラリ作ってるとこありますね。いや、ほんとうん、
@Guest 50:22
いや、ほんとに自分のライブラの作り方ってそうなんですよ。
@Guest 50:25
はくらさんは結構こう。なんか、お悩み解決を頑張った結果できたものを切り出したら、ライブラリになったみたいな話もちょっとされてましたけど。
@Guest 50:33
はい、自分結構ライブラリーを作ろうと思って、ライブラリを書くんですよね。はい、別の目的で書いた行動を切り出すとかじゃなくて、
@Guest 50:42
あ、なんか理想的なものを思いついた。じゃあ、それをライブラリとして形にしようできた、宣伝するみたいな
@Guest 50:49
流れなんですよね。自分がこれまで作はいたライブラリってなんでま。もちろん、ライブラリを
@Guest 50:56
使ってもらえるのが1番嬉しいんではあるんですけども。まあ、ライブラリを宣伝することとして、ライブラリの考え方だけでも
@Guest 51:03
知ってもらいたいな、というのは、本当に思ってるところですね。
@Guest 51:07
はいや、めちゃくちゃいい、めちゃくちゃいいです。もうだめちゃうそうossやっぱそういうの大事ですよ。もう、なんか
@Guest 51:15
誰なんか誰が言い出しっぺかとか、なんか誰が偉いかとかじゃなくて、ただ、そこになんか良い思想があるあるっていう、なんか良いライブラリ良い実装を良いししよ。なんか、良い思想があるっていう
@Guest 51:26
なんか、じゃあ、それをみんなでなんか分かち合って、みんなでハッピーになろうぜイエーイみたいな。
@Guest 51:31
なんか、そういうノリはやっぱなんかすごくossで大事だなっていう感じはしますね。
@Guest 51:38
うん、うん、
@Guest 51:39
そうです。なんか、フロントエンド特有なのかもしれないですけど、そういうなんなんて言うんすかね、そういうなんて、あのライブライそのものは
@Guest 51:49
あのあまり使われないけれども、なんかそういう思想がこう広まっていくみたいな現象は確かにあるので。
@Guest 51:57
いや、それ、そういうモチベーションで持つっていうのは、うん、いいですよね。
@Guest 52:04
いやいや、ううさんの強いところはそこなんですよね。あの、僕のライブライブはほんとになんか現場で困ったから切り出すね。以上のもので、しかのtuだけのものでしかなくて、
@Guest 52:16
なんかあんまりそういうなんか次のプログラミングなの楽なあの根本的な直し方考えようみたいなところまではいれないんですよね。
@Guest 52:25
で、逆にうひょさんみたいな。なんか、プログラミングもそのものに対するスキルがめちゃくちゃ強い人は、あの最悪あ、言語をつくり、言語とかdslを書き出すことができるので、
@Guest 52:39
そこら辺を作り出して、なんかこう根っこからも全部とか大勢イエイみたいなことができるので、そういうところめちゃくちゃ羨ましいんですよね。
@Guest 52:47
う、うん、
@Guest 52:50
いや、なんかこうやって聞いてみると、結構2人が手を組んだらすごい素晴らしいラグができるんじゃないかっていう。なんか、
@Guest 52:59
さんが思想を作って、こうは、ふらさんがユースケースはに落とし込むみたいなや、面白そう、
@Guest 53:10
面白そう、面白そうだけど、僕の
@Guest 53:13
頭がそこでついてくから。
@Guest 53:14
いや、
@Guest 53:17
ほんとに僕の
@Guest 53:18
てることって、なんかフロントエンドなんか散々溜まったベストプラスのをなの。なんか再構築でしかないので。
@Guest 53:28
いや、難しいっすよね。や、やりたいなんかなんかうん。手貸せるところあれば手貸しますよ。
@Guest 53:36
てとか頭かもしんないけど。
@Guest 53:39
いや、そうですね、自分もユースケース集めるのとか正直苦手なので。いや、そのユースユースケスを解析する力みたいなの持ってるのはとても羨ましいなと自分も思ってますよ。
@Guest 53:51
はい、そうです。車内社内のコードを散々なんか暇があれば見てるままなので。
@Guest 54:00
いや、すごい。なんか、最後に最強のフロンテントタックが生まれた気がする。
@Guest 54:10
いや、なんか音楽おん、音楽っぽくていいですね。
@Guest 54:17
いや、いいなあ、
@Guest 54:18
面白そうだな、それ
@Guest 54:19
まそう、確かになんかやってみやってはみたいですね。何か
@Guest 54:22
はい
@Guest 54:26
いや、もういや、ぜひぜひていうか、私も加わっていいですか。
@Guest 54:32
なるほど、やるか、やるか
@Guest 54:34
気になる気になってきた、
@Guest 54:35
はい、
@Guest 54:37
ではまず思想から行きましょう。
@Guest 54:41
お思想から
@Guest 54:45
そうか、
@Guest 54:47
いや、まずコード書きたくないですよね。
@Guest 54:52
あ、今、流行りの今、流行りのノーコードってやつですか。これは、
@Guest 54:58
ミングもしたくないじゃないですか。なんか、頭ん中でふわふわって俺の考えた最強のプロダクトができたら、なんか
@Guest 55:08
それはそうだ。
@Guest 55:14
なんかそれ多分思想とかじゃなくて、機械学習で勉強するところからですね。多分、
@Guest 55:18
やばいな
@Guest 55:20
こう行動をひたすら集めないといけない、
@Guest 55:26
はいというとこでね。まず、早速音楽性のち違いが発生したところ、
@Guest 55:33
バンドが解散してしまいま
@Guest 55:35
5分で解散。
@Guest 55:40
まあまあなんかなんかね、なんか、こう機会があったら、そういうのをやっていきたいですね。
@Guest 55:46
そうですね、なんか解決したい課題とかあったら、声かけ周りに声かけてみたら、なんか生まれるかもしれないですね。
@Guest 55:54
はい、
@Guest 55:56
うん、
@Guest 55:59
いや、
@Guest 56:00
また新しいやって合成しますか。
@Guest 56:04
あ、やっていく時間足りないですね
@Guest 56:06
ああ、またまた時間が
@Guest 56:14
はい、
@Guest 56:15
じゃあいうところでいきましょう。はい、で、はい、今回はえっとま
@Guest 56:23
まライアクトのライブやりの話のはずだったんですけども、フロントエンド
@Guest 56:29
タックコンビができたという話について、えっと言ってやってきました。
@Guest 56:34
LINEのontinと組織UITでは、このような技術的なキャッチアップを日々行っております。
@Guest 56:43
UIT INSIDE以外にも、毎週の社内勉強会で、フロンテの情報交換を行っています。今後も、UIT INSIDEを通して、このような情報を外部に発信していけたらと思います。
@Guest 56:54
最後に、現在ダム株式会社では
@Guest 56:57
えち、卒中途採用ともに大募集しています。このポットキャストを聞いて、LINEに興味を持たれましたら、小のと1番下にある9人のページから、ぜひアクセスしてください。
@Guest 57:07
はい、それでは出産なくらさんもうやっていきましょう
@Guest 57:12
ましょう、やっていきましょう、全部倒すぞ。
@Guest 57:16
ありがとうございました、
@Guest 57:18
ありがとうございました、
@Guest 57:19
ありがとうございました。
