@Guest 00:04
こんにちは、UITのダバサランです。
@Guest 00:11
ユーザーインターフェースと、テクノロジーを愛する開発の為のえー、ウィキリー、ポッド、キャストユアイティーンサイドです。
@Guest 00:20
今週を始めたいと思います。今回は、ゲストにえ、UITの山本さんを呼び出して、え、リットのb2
@Guest 00:30
について話したいと思います。山本さんよろしくお願いします、
@Guest 00:36
よろしくお願いします。
@Guest 00:40
さて、まあ、私達なん何個かあのの。エピソードに出演しているんですけど、まあ、とりあえず軽く自己紹介、あの久しぶりの人には自己紹介します。
@Guest 00:53
まず私からですね。私はまだサランと言って、
@Guest 00:58
あま、yt所属のフロント、エンドインジニアです。主に担当しているプロジェクトは、ま、ldigとまラインのデザインシステムですね。と、
@Guest 01:08
LINEliveといったプロジェクトです、よろしくお願いしますそして、山本さんお願いします。
@Guest 01:15
はいえと、UITチームで同じくフロントエンドエンジニアをやっている山本達也と申します。
@Guest 01:21
担当プロダクトは、オフィシャルアカウントの中のLINEアプリ内で動かすあ、ミニアプリ
@Guest 01:29
の開発をしています。具体的には、ショップカードとか、クーポンとかやっていますよろしくお願いします。
@Guest 01:36
はい、
@Guest 01:38
ありがとうございますでま、山本さんのあの、ldagの担当者の1人でもあって、まあ、なんでかなんなんでldagをそんなに言うかと言います。とま、そのldagはそのラインのデザインシステムで、
@Guest 01:52
あの、その中にあの使ってる。ベースのライバルはあの今回話すリットでもあるので、まあ、
@Guest 02:00
今日のあの私達はあの、そのリットをま、実際にあのま実装に使っている経験のある2人ですね。
@Guest 02:12
はい、まあ今回あのまあ結構大きめの発表がありましたね。
@Guest 02:18
そうですね、発表の時間もめちゃくちゃ長かったですからね。そう
@Guest 02:23
なんか、生配信で2時間半がっていう生配信がありまして、まあ、あのリンクもあの下に置いておきますけど。
@Guest 02:31
あの、今回、その生配信のあの1番目玉なところをちょっと軽く紹介したいと思ってます。
@Guest 02:39
いや、でも、なんかブランニングからも結構変わりましたね。
@Guest 02:43
うん、そうですね、結構アイコンも新しいの作ったぜみたいなツイートが専攻して出てましたもんね。
@Guest 02:50
そうですよね、なんか、あの、実は私の初めてのpopcスト出演も。あの、まあ、テンサイドの2回目になってたんですよね。で、
@Guest 03:00
ちょうど同じビテレメントのちょうどb1の方まが出た頃なんですよね。
@Guest 03:06
ああ、そうなんだ
@Guest 03:07
でその話をして、なんかその時も結構その当時のブランディングはめちゃくちゃなんか、ややこしいっていう印象があったので。
@Guest 03:15
ま、今回のリ島っていう統一。まあ、そのポリマーという名前をなんかレガシの方に入れて、今回はそのリ島で統一して、ログとかも結構ブランディング。
@Guest 03:27
なんかちゃんとしてるんじゃないかなって思いますね。
@Guest 03:31
うん、ちょっとわかりやすくなりましたよね、ちゃんとリットの配下にいろんなのがあるよっていう構造になったので、
@Guest 03:37
そうですよね。なんか、ま、大和さんのそのldgをやる前は、そのリッと知らなかったと思うんですけど、なんかそうなんですよ、入る時は、ちょっとややこしくなかったんですか。
@Guest 03:48
いや、なりましたね、やっぱ何も知らない状態で、そのリットからリットに入ると、まあ、要するにリットhtmlとリットエメントをちゃんと
@Guest 03:58
見なくちゃいけないんですけども、いきなりな違いは何って言って、両方のドキュメント見始めるみたいな感じなので、まあ、ややこしいですよね。で、結果的に両方使うって話なんですけど、
@Guest 04:08
そうそうそうそうなんですよねえ、なんか今回今回の統一でも、まあ、あの、
@Guest 04:15
なんか、リッターとリッテルメントの両方のパッケージではなく、なんか統一したリットというパッケージが公開されてま。そこから、あの
@Guest 04:24
まあ単なるあのhtをレンドリングするライブラリーもあのま、ウェフコンポーネンツを作る為のライブラリーも、なんかそちらに入っているっていう形になります。
@Guest 04:35
リポジトリも統一されましたよね、モノレポになってましたね、そうですね、
@Guest 04:41
はい、
@Guest 04:42
まあ今回のモノでま、ちょっと説明飛ばしていたんですけど、まあ、先程言った通り。あのま、リットはあのメーンの目的は、そのウェブコンポーネンツを作り易くする為の、あのライブラリーなんですよね。
@Guest 04:56
で、それをまあなんだろう最小限のあのまコードでまあ、
@Guest 05:02
うん、あのなんだろう。モダンなコンポーネント開発ができるような、うん、こう感じになるようなライブラリーになっています。でも、そうですよね、
@Guest 05:12
なんか、今回のモレポかでなんだろう。色々とま統一感が出てきて、ほんとにうん、いいいい印象ですね。
@Guest 05:21
まい、開発者側からすると、嬉しい方に倒れたなというか、変わったなって印象。やっぱ持ちますね。
@Guest 05:30
で、開発者として嬉しい。あのことに関しても、
@Guest 05:35
結構その内部がめちゃくちゃ変わった割には、あのブレインキンチェンジが少ないんですよね。
@Guest 05:43
ああ、そうですね、結構APIもま一部変わってますけど、リネームとかもあるけど、極力同じように使えるような感じになってますよね。
@Guest 05:51
そうですよね、なんかま、私もその個人プロジェクトとかで、マリと使うことは多いんですけど、あの何個かそのま、プレリリースにマイクレションのあの進めているんですけど、
@Guest 06:02
もうほんとにあのインポートを変えるだけで済んだものがほとんどなんですよね。
@Guest 06:07
うん、うん、うんへえあ、結構面白かったのが、そのデコデーターとかでリネームが入ったものがあるんですけど。うん、
@Guest 06:15
それも新しい名前のものと、古い名前のものを両方エキスポートしたりしてたんですよね。
@Guest 06:21
新卒ですね、なので、
@Guest 06:23
親切だなってまで助かるって。
@Guest 06:28
まあ、どうせペャ品がありますからね。
@Guest 06:32
うん、そうそうそうそう
@Guest 06:33
そうですよね、結構その前がしいあの、いかになんかやりやすくするために、まあ、作ってはいるものなんですけど、まあ、
@Guest 06:43
内部でのそのブレイキンチェンジは結構多くて、あのかになってるのはなんか見た感じ。そのサーバーサイドレンドリング、要はssrを。あの結構
@Guest 06:55
なんかちゅ。なんか今回のリリースの中心だだよねです。
@Guest 07:00
うん、そうですね、
@Guest 07:02
やっぱそれをすると、そのssrを検討するにあたって、いろんな課題もやっぱ出てきたしっていうようなで、異で議論したみたいな感じになってましたね。
@Guest 07:12
そうそうなんかあの、なんだろうま、結構内部の話にはなってしまうんですけど、こう
@Guest 07:20
内部である。なんか、ちょっとエクスポートしてた。あの、でも、ほとんどの人が使わなかったようなフィーチャーがあって、なんかそれでsrがすごいややこしくなっていたみたいで、
@Guest 07:31
うん、うん、それをあえて、まあ、とりあえず削除して、あの、なんかssrがちゃんと機能するための色々な準備を
@Guest 07:40
ま勧められたんですよね。うん、うん、今回あの
@Guest 07:47
まさなんかさっきの削除の話もあるんですけど、結構あのニューバージョンの割にも、結構
@Guest 07:54
サスもあのパフォーマンスもあの良くなりましたね。
@Guest 07:59
ああ、そうですね、結構びっくりしましたなんか、そう、結構古いブラウザの対応方針を見直したみたいな
@Guest 08:07
話でしたね。なんか、プリフィルとかをちゃんと分けたりしてたので、コアパッケージが小さくなった分、
@Guest 08:14
バンドルサイズも小さくなって、パフォーマンスも上がって嬉しいみたいな。そうそう、そうなんか感じになってましたね。
@Guest 08:21
そうですよね、あの、ちょうどそのそういうポリフィルとのやり取りを、まあ、別のパイケージとして分割して、
@Guest 08:29
あとなんだっけ。なんか、元々あのサファリの11とかように、なんかあの、ちょっとしたあの、ホットフィックスみたいなものが入れあれたみたいなんですけど、まあ、サファリ11はほぼ
@Guest 08:42
ゆさんいないみたいな感じなので、もうなんか、それも削除したりするみたいなん
@Guest 08:48
ことをしたことで、結構最数が減らせたんですよね。新フィーチは色々ありますのにね、
@Guest 08:56
そうそう、ブラウザー特定のブラウザー用のワーカーランドの実装とか、結構多かったみたいですね。そうそうなので、まあそれを外せばそりゃそうだよなっていう。
@Guest 09:07
でも、もちろんそのプリフィールも引き続き提供してくれてるので、あの、いきなりサポート外されて、悲しいっていう状態にはならないっていうのも優しいって
@Guest 09:16
思いました。そうなんですよね、なんか、
@Guest 09:19
もうほんとになんだろうあの、できるだけユーザーなくしたくない。あの印象がすごい強かったんですよね、
@Guest 09:27
そうそう、結構丁寧でしたね。ホームページとかを見ても、そのサポートブラウザーの表とかもちゃんと書いたりして、安心して使ってねって言ってる感じがしましたね
@Guest 09:38
ホームページもあのリニューアルしましたね、今度、リットドットデブになりました。
@Guest 09:44
めっちゃわかりやすくなってるから、これ見た方がいい。
@Guest 09:46
ほんとにそうですよね、なんか、あのホームページになんか結構あの、なんからラブっていうか、なんかそういうなんか、
@Guest 09:55
チトリアルを
@Guest 09:57
あの何かそのままそこでやれるように。あの、何か。実際にあのオオイセスのウェフコンポーネンツとしても、公開しているプレイグラウンド的なものとかも
@Guest 10:08
なんか導入されてて、結構
@Guest 10:10
あの新規ユーザーがいたらなんだろう。すごい。あの、なんか、そこそこを見るだけで、色々でできるようになっちゃうんですよね。
@Guest 10:20
クレイグラウンドもなんかたただかけるだけじゃなくて、こう。昨日、別にクリックすると、そのサンプルコードがびって出てくるって感じで、
@Guest 10:28
すごい感覚的にわかりやすくて、よくできてますよね。
@Guest 10:36
これは使うしかないみたいな
@Guest 10:38
あ、ほんとに使ってほしいですよね。
@Guest 10:45
あの、今回そのまあ新しくフィーチャーが色々と入ってきたと思うんですけど、なんか、あの
@Guest 10:52
あもさん的に印象的になったものとかってあります。
@Guest 10:55
そうですね、僕結構今回のやつ見てさっき言った通り、結構今風になったなみたいな印象があるんですけど、その中でもやっぱり気になってたのが、
@Guest 11:06
あの再利用に関して意識してるんだなみたいなところが結構気になっていて、
@Guest 11:12
具体的には。リアクティブコントローラーとかの
@Guest 11:17
話なんですけど、今まで結構リットエレメント
@Guest 11:22
にロジックを実装するときって、そのクラスのライブにガリガリ書いたり、エクステンズしたりして、まあ、要するに再利用がうまく
@Guest 11:32
やりにくいなみたいなケースが多々あったと思うんですけど、それがしやすくなる構造を提供してくれたなっていう
@Guest 11:40
のが、結構1番面白かったですかね。具体的には、そのリアクティブコントローラーっていう、
@Guest 11:48
なんだろうな。コールバックファンクションをいくつか定義されたインターフェースと、そのリアクティブコントローラーを実行してくれる
@Guest 11:56
リアクティブコントローラーホストっていう、これも型インターフェースを提供してくれていて、これに基づいて実装するして、
@Guest 12:05
ウェブコンポーネンツにまあ、要するにプラグイン的なことをしてあげると、そのウェブコンポーネントのライフサイクルに合わせて、
@Guest 12:14
ロジックを走らせてくれると。なので、結構機能の集約とかがしやすくなってるので、
@Guest 12:20
結構ガンガンウェポンポーネンツの数が増えたとしても、結構いい設計ができそうな予感だな、と
@Guest 12:27
いう風に思いましたね。今日はね、この辺今風だなって
@Guest 12:32
そうなんですよね、なんか、特になんかそのそういうアーキテクチャー的での変更は、これが1番大きかったと思うんですよね。あの、
@Guest 12:41
なんかまあ、
@Guest 12:43
さっき山本さんが言った通り、こうん。まあ、前までだとこう。唯一のそういうなんか、ロジックをあの
@Guest 12:53
色々なコンポーネントで共通するためには、なんか、jsのクラスミクシーンをあの作り出すしかなかったんですよね。
@Guest 13:01
で、ま、それはまあそれであのなんだろう。色々とうまくいくんですけど、
@Guest 13:07
そのなんだ、そういう警鐘の仕方をすると、ちょっとなんかややこしくなる。あの場面がいくつか、
@Guest 13:15
そうそうそう、なんか、ミクシーをなんか何個か入れると、なんかすごいことになる。
@Guest 13:21
この機能は、一体どこで実装されてるんだ、みたいな状態にやっぱなっちゃいますからね。
@Guest 13:27
そう
@Guest 13:28
で、なんかこういうコントローラーは、なんか軽視するのではなく、なんか持ってるものなので、なんか、コンポーネントが持ってるものに、なんかそういうピーチャーが入ってるから、なんか
@Guest 13:38
まあ色々となんだろう、整理しやすくなるんですよね。
@Guest 13:41
対象のウェブコンポーネントじゃないとこで、実装された機能っていうのは、そのコントローラーを見ればいいので、ちゃんと切り分けてあげられると、すごいわかりやすくなると思いますね。
@Guest 13:52
そうですよね、しかも、まあ、このリアクティブコントローラーは、そのリッタリメントだけじゃなくて、まあ、そういう
@Guest 13:59
リアクティブコントローラーホーストっていうインターフェイスをインプレメントするものだったら、なんでもいいので。なんか、今は今ちょうどなんかリアクトとかアングラビューとか
@Guest 14:09
ように、なんかこのビったり、メントで作ったコントローラーを、なんか、そういうフレームワークでも使えるようにするためのなんか色々まちあの
@Guest 14:18
なんだろう。インテグレーションを、あの現在作ってる最中みたいなので、なんか
@Guest 14:24
ほんとになんだろう。1個システムに貢献してるっていう印象ですよね。
@Guest 14:29
リアクトの実装は、もう結構すでに一応実装上はありますよね。リポジトリに、リアクティブコントローラと、ホストの実装。
@Guest 14:37
そうですよね。なんか、ラボラボっていう機能の中に、あの、そういうリアとあののインテグレーションの一部として、なんか、このコントローラーを使うための
@Guest 14:47
昨日は入ったりしますね。
@Guest 14:49
ま、実際の開発って、リアクトとか結局使うので、やっぱそこのつなぎのとこで、めんどくさいとやっぱうんってなりますもんね、
@Guest 14:57
ちゃんと意識してるなってすごい。
@Guest 15:02
あと、再利用って話だと、ちょっと余談になっちゃうかもしんないんですけど、結構パッケージレベルでも再利用しやすくなってるんだなみたいなのが結構面白いなと思って。
@Guest 15:11
あの、パッケージ。今までリットhtとリットエルメントていう2つだったんですけど、今って結構リットhtmlとリットエルメントと、リアクティブエレメントっていうパッケージの構成に。
@Guest 15:22
今なってて、いわゆる今までプロパティーズとか、スタイルとか、そういうウェブコンポーネントを実装するやつって、今までリットエレメントで持ってたと思うんですけど、
@Guest 15:31
それをリアクティブエレメントの方に寄せて、
@Guest 15:34
でも、これからのリットエレメントは、リットhtmlとそのリアクティブエレメントコアをこう繋げるための実装みたいな
@Guest 15:43
感じの構造になってるのが結構面白いなと思って、要するに、こうテンプレートを別にリット。htmlじゃなくて、プリアクトとか、そういう他のものでも、
@Guest 15:52
ウェブコンポーネントが実装しやすくなるような素結合なライブラリーになってんだなってのが結構面白かったですね、これも再利用というのは面白
@Guest 16:01
そうですね。
@Guest 16:03
そうそうなんか、1対1のテンプレートエンジンがなんかきり気に入らないとかだったら、なんかそれこそ。まあ、あのピアクトのhtmとかをあのインポートして、なんかリアイブコンポーネントに繋げるみたいなことも。
@Guest 16:18
まあ、すごい簡単にできるようになるんで、なんかそうですね、そういう意味でも、
@Guest 16:23
まあ、別になんかうちを全部使わなくても、なんかyoutubeでも使ってくれたら、なんか色々とやりやすくなるみたいな感じのものが多いんですよね。なんて、
@Guest 16:32
親切なossだって思いました。素晴らしいなみたいなや
@Guest 16:37
あ、もうみたいな、そうそうそうなんですよね、なんかもう色々な意味ですごいですよね。
@Guest 16:48
ま、今回あのまああの1つのまかだったのもまさっきあのちらっと言ってた。あの、ラボっていう
@Guest 16:56
あの機能の数々なんですけど、ま、そのラボはその要はあ、まだ実験的な機能で、そのまだあの
@Guest 17:04
メインパッケージにあの入れられないような状況にあるものの、あの
@Guest 17:10
ま、おきい場所みたいな感じになってるんですけど、で、今、あの、そのリアクトのあのインテグレーションのそこに入ってたりしますね。
@Guest 17:19
ま、リアクトのやつは、ま、そのさっきのコントローラーもそうなんですけど、ま、リアクトはプレインワークの中でも、
@Guest 17:27
あのちょっとそのプロパティを渡すとか、あのイベントをうん、に役とするところで、あのちょっと。
@Guest 17:37
あの、まあ、アクトのイベントシステムみたいなものとかがあるから、なんか、それとの繋ぎ込みがちょっと色々ですよね。あ、
@Guest 17:46
うん、めんどくさいので、なんか、それをちょっとやりやすくするためのパッケージが提供されているんですけど、
@Guest 17:52
なんか、それのちょっといいところは。あのま、リッテルベントのウェフコンポネットではなく、なんかあのバニラのものとか、あのステンシルとかで作ったものでも、なんかそれにラッピングする
@Guest 18:04
ことで、あのマリアクトであの使いやすくするため、あのすることもできるようになるみたいなことが、
@Guest 18:12
まあ、そのラボの機能の1つなんですよね、
@Guest 18:16
便利ですよね、こういうのあると、結局ウェブコンポーネンツのいわゆるい、いわゆるhtmlのタグなので、
@Guest 18:23
アトリビュートとかは、やっぱストリングとかしか受け付けないから、この辺めんどくさいですもんね。イベントのハンドリング、いちいちアドリベントリスナーやだみたい
@Guest 18:32
そう、その辺しっかり隠蔽してくれるから、すごい使いやすい
@Guest 18:38
そう。まあ、他のプレームワークだとなんだろう。なんか、直接なんか、ドムのイベントとか、あのドムのプロパティをあの叩けるあの
@Guest 18:47
ことになるんですよね。なんか、ビーとかリアクトとかだと。だから、そういうあのプレイマークではこういうのはいらないんですけど、リアクトはちょっと。まだあの、そういう部分が
@Guest 18:56
ま、あれが思議なところはあるので、まあ、なかなか実装が難しいみたいなので、まあ、こっちからあの、
@Guest 19:04
なんか提供を提供ししやすくするみたいなことを今ま進めているみたいな感じですよね。
@Guest 19:12
で、なんかまあラブはめめっちゃ色々あるんですけど、他に特に個人的に気になったのは、あの、モーションっていうパッケージなんですけど、
@Guest 19:23
あの、そのモーションというのは、あの、あのリットで使うためのダイレクティブを提供してるんだけど、そのプリップっていうのはま、
@Guest 19:33
ハープリーストラインブリートレイっていう。あのま、略語になってるんですけど、
@Guest 19:39
そのアニメーションをあの走り出すためのあの構造って言うんですけど、あの、大レティブって
@Guest 19:49
こう。変更前と変更後のあのポジションとか。あのま、cssのデートをこう
@Guest 19:59
なんかほあのなんだろう。保管して、そこのアニメーションをかける。ほぼ自動的で。
@Guest 20:08
なんか
@Guest 20:09
例えば、なんかクラスであのポジションだけ変えてま。cssの方にアニメーションかけなくても、なんか、プリップのダイティブが勝手に。なんか、そのウェブアニメーションズの一品iで、
@Guest 20:19
こう繋ぎ込みを作って、アニメーションを実装してくれるっていうのがなんだ。すごい便利そうだなって思いました。
@Guest 20:27
結構、ウェブコンポーネントって、そういう結構なんての具体的な機能っていうのかな。
@Guest 20:32
そういうのを提供するの、ちょっと意外だなって印象もちょっと思ったりもしたんですけどね。あくまで、コンポーネントを作るまでで、そのコンポーネントの中身の
@Guest 20:41
サポートみたいなのはもうするんだなってのは、ちょっと意外な印象を持ちましたかね。
@Guest 20:46
そうですね、まあこれはあくまであの、なんかオプショナル的な機能なんで、なんかなんだろうん。まあ、誰も
@Guest 20:55
使いたがるけど、作るのはちょっとめんどくさいような機能をなんか提供してくれるんですよね。
@Guest 21:02
素晴らしい
@Guest 21:04
はいいや、あれあれめっちゃ感動したんですよね、ほんとに個人的にはなんかあれはすごいすごい魔法だなって思いました
@Guest 21:12
なるとわかりやすいです。
@Guest 21:15
そうそうなんか、あれ、あれがどこまでま放火を見たい人は、ちょっと。その配信のあの、リトラブのあのチャプターの終わりのあたりぐらいに、それが紹介されているので、ちょっとそこをちらっと見てください。
@Guest 21:31
では、まあ、最後にっていうのもあれなんですけど、あの、
@Guest 21:35
まあ今回の要だったsrのあの実装の部分に関してなんですけど、なんかまあこれもまたあのまだあの実験的っていうあのタグはつけられているんですけど、
@Guest 21:50
まあ、一応あのもうテストされ済みで、結構まあ使いたいなら結構使えるようになった
@Guest 21:57
実装ちゃんとできてますもんね。あの、イザリポジトリ内のイグザンプルとか。でも、普通に実行手元で簡単にできるから、それを見ると結構ええって
@Guest 22:08
なりますね。
@Guest 22:09
うん、そうですね、
@Guest 22:11
あの、なんかまあこれのかである。あの、まあ、今クロームでしかあの、実装されてないまで、クラリティーブドドムっていうのがあるんですけど、
@Guest 22:21
ま、それをちょっと。あのま前、あのポッドキャストのシャドードームの会でも、あの軽く紹介したんですけど、まあ、要はその
@Guest 22:30
あのエサルなんだろう。そういうサーバーから直接。あのウェフコンポンネスナイのテンプレートで、シャドードムのルーツを。
@Guest 22:38
あの、なんかそこで構成できるようにするためのあの標準仕様なんですけど、
@Guest 22:44
ま、それをあの使って、あのまリットのssr機能が実装されてます。
@Guest 22:50
今までjsで、アタッチシャドウとかって、やんなくちゃいけなかったですもんね。
@Guest 22:55
それが、htmlの要するにも、文字上で、banとテンプレート配下の要素も定義できるので、
@Guest 23:02
結構面白いですね。sssrアができるようになっている、
@Guest 23:09
しかも、まああのま他のブラウザーへのなんか、プリフィールはほんとにすごい。なんか、もうに2情みたいなものなんで、なんかあの、特に
@Guest 23:21
あの懸念というのはまあそこまではないみたいな感じですよね。
@Guest 23:27
あと、なんかままだ未公開なんですけど、こうあのネキストとかコアとか、あのイレブンティーとか、まあ、結構幅広い。あのま、サーバーサイドでのまレンダリングとか、あのスタティク、ジェネレーションでも、
@Guest 23:41
あの使えるようにするためのなんだろ。プラギン的なものをいくつか提供してくれるらしいですよね。
@Guest 23:50
なんか、イレベンティのやつとかをあのデモが見たんですけど、結構なんだろう。
@Guest 23:56
なんか、イレブンティアドプラギみたいな部分をちらっと書くだけで終わり、
@Guest 24:01
すごいですよね。使う側からすると、すごい楽チン。
@Guest 24:07
うん、あと、まあどなんかこれぐらいできて、なんで実験的なのかっていう話なんですけど、まあ、
@Guest 24:16
あの、今回まあ、イスサルがここまでかかった理由の1つでもあるんですけど、こう
@Guest 24:23
まリットの人たちは、いや、なんか作りたいのはこう。ビット限定のエール方法ではなく、ほんとになんかウェブコンポーネンツなら、どこでも使えるような。あの、
@Guest 24:34
srの実装やりたいみたいなんですけど、なんか今ちょうどあの他のライブラリーのとか。あの、まあ、
@Guest 24:43
私たちみたいに、あのデザインシステムを作ってるあの人たちも混ぜての。あのま、標準のボードが
@Guest 24:52
いて、なんかそこで、なんかssrのインターフェイスを統一します。みたいな動きもあって、
@Guest 24:59
多分それが終わったらっ。これが実験的ではなくなるんじゃないかなと思います。
@Guest 25:06
そうですね、もう実装できとるやんけみたいな印象が
@Guest 25:11
ちょっと。イザンプルのジスは、若干ちょっとミトルウェア難しいですけど、まあ、ミトルウェアもライブラリとして提供されれば、もうあんまり気にしなくていいし、とかって思うんですけどね。
@Guest 25:21
そうそうそう、多分多分そのミドルウェアはま、結局あの多分
@Guest 25:27
こういうあのインテグレーション的なものはいくつか、あのオスとして公開されるんじゃないかなって思います。
@Guest 25:37
さてま、今回あの、まあ結構まだ内容はいっぱいありますけど、ま、今回ちらっとしたまとめだけなんですけど、
@Guest 25:47
ま、リットb2を紹介しましたけど、あの、山本さんなんか、最後にあの話したいものとかってあったりします。
@Guest 25:56
そうですね、まあ、繰り返しにはなりますけど、開発者フレンドリーなライブラリーなので、皆さん使いましょうみたいな
@Guest 26:05
v2からでも
@Guest 26:07
いましょうよね。ちょうど今あのままあ、バージョン
@Guest 26:16
ツーのあのプレリリースは出ていて、まあ、プレリースというか、リリースキャンディレートが出てまして、まあ、多分もう使えるような内容なんで
@Guest 26:26
ま。結構皆さんもあの興味が出てきたらぜひぜひ使ってください。
@Guest 26:35
はい、ではま、今回まLINEでも
@Guest 26:40
あの使ってますっていう、あのビットのb2の発表について話しました。
@Guest 26:47
えーと、ま、ラインのプロンテンド開発組織ytでは、えー、このようなプロンテンドに関する議論や、キャッチアップを日々行なっております。
@Guest 26:58
社内の学習企画から始まったコンテンツも多くありますので、今後の配信を見ていただければと思います。
@Guest 27:08
また、この行動活動を通じて、LINEに興味を持っていただいた方は、ぜひぜひカジュアル面なからでも、ご連絡いただければと思います。
@Guest 27:17
小納と下部に、4人のあの連絡が掲載されていますので、お気軽にご連絡ください。
@Guest 27:28
今回は、リットのb2をテーマに話しました。山本さん、
@Guest 27:34
ありがとうございました、ございました。
