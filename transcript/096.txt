@Guest 00:04
こんにちは、UITの玉田です。今回もUIT INSIDEを始めたいと思います。
@Guest 00:10
uytサイドは、ユーザーインターフェースと、テクノロジーを愛する会社のためのポッドキャストです。
@Guest 00:16
uiやxの関することや、開発、エアの変数についてなど、毎週フロントエンドの情報を発信していくことを目的としています。
@Guest 00:25
ハシュタグはシャープ、uyt、アンダースコアインサイド、エピソードのご意見やご感想はいつでもお待ちしております。ぜひ、ツイートしてください。はい
@Guest 00:36
で、今回はですね。え、同じくUITの山本さんをお呼びして、今回はですね。google製のzxというツールについて、えー、取り上げたいと思います。
@Guest 00:49
はい、それではよろしくお願いします
@Guest 00:52
よろしくお願いします。
@Guest 00:58
でですね、このzxというツールについてなんですけれども、ま、これは何かと言いますとですね。ま、
@Guest 01:07
今までこうシェルスクリプトを書いていった時のこうなんていうんですかね。手間みたいなのをこうまるっと。あの、
@Guest 01:16
javascriptの文法を導入して、書いていこうという感じのツになっていてでですね。これ、なぜ今取り上げていくかというと、
@Guest 01:24
最近バージョン3がリリースされて、
@Guest 01:29
そこで、まあ、私も存在はどれぐらい前ですか。数ヶ月前ぐらいに知ったんですけど、まあ、そこからちょっと使ってないうちに、なんか
@Guest 01:39
今見たらスターが2万ぐらい集まってる。おお、すごいなって思った次第で、まあ、ちょっと今回
@Guest 01:45
使っているというところも聞きましたので、まあ、使い心地などについても聞いていこうかなという感じではいやろうと思います。
@Guest 01:55
ではですね、ちょっとどんなものかっていうのを、実際にちょっと紹介してもらいたいんですけれども大丈夫ですか。
@Guest 02:02
はい、tの山本ですよろしくお願いします。僕もちょうどこれを知ったのは、むしろたまさんよりも浅くて、1か月ぐらい
@Guest 02:13
プロダクトのアプリケーションを開発していて、どうしてもこうスクリプトを書く
@Guest 02:18
ある時って、多いと思うんじゃないですか。ただ、僕あんましゃシェルスクリフト好きじゃないんですけど。で、なんか辛いなとかっていう風に思ってたら、たまたま見つけたんですけど、
@Guest 02:27
先ほど玉田さんがおっしゃった通り、このzxは、そのシェルスクリプトのナッパーで、まじゃ、パスクリトを使って、シェルクリプトを実装できるよっていうものです。ま、正確に言うと、そのシェルのコマンドを呼び出すノードジェースのチェルドプロセスの
@Guest 02:42
モジュールにラッパーっていう感じなんですけど、まあ、要するにjavaスクリプトで、シェルスクリプトかけるよっていうんですね。
@Guest 02:47
で、具体的にはそのテンプレートリテラの中にシェルのコマンドを書くと、その通り実行してくれて、
@Guest 02:55
で、そのモリッジですね。標準出力とか、標準エラー出力とかまあ、シルだとちょっとややこしいですけど、そういうものを。javascriptの変数として返してくれる
@Guest 03:05
ので、その辺の変数のやり取りだったり、加工とかをまjpスクリプトで行えて楽だねとまあ、少なくとも僕たちフロントエンドエンジェルにとっては楽だねと
@Guest 03:16
いうようなライプラリーで、最近ちょっと使ってみている次第です。と、はい、zx自体が実行できるファイル形式がちょっとユニークなとこもあって、
@Guest 03:28
いいわゆるjavaスクリプトとタイプスクリプト
@Guest 03:32
なんですけど、それ以外にも標準入力とかマークダウンっていうものがあって、
@Guest 03:38
マークダウンの場合、そのシェルのコードブロックとか、jsのコードブロックの中にあるスクリプトを実行してくれるっていう結構ユニークな機能があって、
@Guest 03:49
僕はそのマークダウンのところがちょっと興味が興味深くて、ちょっと使最近使っているっていう感じですかね。
@Guest 03:58
ま、多分一般的にはそのjavascriptとかタイプスクリプト書いてえ、実行する。
@Guest 04:03
あ、javascript、ファイルタイプ、スクリプトファイルを実行するっていうのは、まあ多分きっと一般的なのかなとは思うんですけど。で、
@Guest 04:13
ジャバスクリプトの場合、そのコモンjsで書くか、esモジュールで書くかみたいのをま選べるというか、選ばなくちゃいけないみたいで、その拡張紙をjsにするか。
@Guest 04:24
mjするか、ま、わざわざmjsで書く機会も。正直、僕の中ではあんまりなかったんですけど、ま、そういう拡張子で、まあ切り替えられるっていうのですね。
@Guest 04:33
で、まあ、ただあのコモンジースだと、トップレベルアウェイトとかが使えないので、こう。あ、シンクファンクションで、こうラップしてあげて、アウェイト使ってみたいな感じで、ちょっとめんどくさいんですよね。
@Guest 04:47
なので、まあ、jpスクリプトで書いて、直接実行するんだったら、esモジュールいったかなみたいな印象でした。
@Guest 04:56
で、そうでなんだろうな。webパックとかそういうの使ってると、あんまりコモンジェースとか、イエモジュールの細かい仕様をこう
@Guest 05:04
気にして書かないことも多いとは思うんですけど。ま、esも今回初めて知ってるか、esモジュールだと、そのリアはもちろんなんですけど、引く引くdrネームとか。はい、そのリアルネームとか
@Guest 05:15
そういうのも使えないんですね。僕、今回初めて知ったんですけど、
@Guest 05:19
ただあのeeモジュールとそういうの使えないんだけど、zx側でポリフィルしてくれてるので、あの、そういうのも特に問題なくて。
@Guest 05:28
なので、じゃあまあイエモジでいいじゃんみたいな感じですね。少なくとも、zxの中では
@Guest 05:33
なるほど、なるほど、あのあれですよ。esモジュールなんで、ノードだと、確かインポートドットメタとかあったりとか。
@Guest 05:41
うん、うん、そうそうそうそうそうそうそうそう、
@Guest 05:43
あ、あの覚えないといけないところがあるでこそこはポリフルされてるんですよね、それはそうですね、あ、
@Guest 05:49
確か今、ポリフィルの段階では、そのリックアイヤーとディアネームとなんだっけ、あとは、
@Guest 05:57
ファイルネームだっけなんだっけな、ぱっと出てこなくなっちゃったとか、限られたものしか
@Guest 06:03
ないんですけど、多分、そのうちインポートとかのやつも出てくるのかなとは思ってます。なるほど、
@Guest 06:10
んで、まあ、トックはそのシェルのコマンドを実行してくれるよっていうのが、まあメインなんですけど、もま一応そのスクリプトを書く上で、その便利なライブラリーとかも、そのグローバルで参照できるようにしてくれていて、
@Guest 06:24
あの、まあよくあるその引数とか、オプションを受け取るところとことか、対話プログラムを使うためにこう
@Guest 06:32
あの、好きな文字列入力してください。みたいな
@Guest 06:35
ものとか、まあ、地味ですけど、ありがたいフェッチとかま、今言ったポリフィルとかま、そういうものも、zテク側であらかじめ用意してくれてるので、まだいぶ書きやすくなるなっていう
@Guest 06:48
印象ですかね。少なくとも、スノーシェルスクはいプトでこうち1ググって書くよりは、スムージが書けるなっていう
@Guest 06:58
感じですかね。なので、個人的な使用感としては、ま、結構ジャパスキート書く人だったら、
@Guest 07:06
あの簡単にシェルスクリップとかけるかなと。そのシェルのコマンドを実行する以外は、ほんとにジャバスクリップのAPIを活用して、ハイレとか、関数とか、プロミスとかも使えるので、
@Guest 07:18
あの、特別な設定もいらないし、使いやすいなという印象ですかね。一応、そのシバンとかもかけるので。
@Guest 07:37
はい、ドット、スラホゲチェイスみたいな感じに。
@Guest 07:40
まあ、ちょっと気持ち悪いかもしれないですけど、拡張子の部分はまあ、一応そのチェルスクリプトを使う側としては、まあ、ほとんどチェルスクリプトと同じような使い方で
@Guest 07:49
かけるのもまあいいかなっていう。
@Guest 07:53
なるほどな。そうですね。そうですね、僕もあの最近のやテックス見て、あの結構進化してるなっていうところとか、うん、なんかこうおもなんすかね、もてなしを感じる、すごい。
@Guest 08:08
あと、あのパイプとかも結構あのいどのバージョンだったか忘れたんですけど、パイプが追加されたの結構でかいなと思ってて、
@Guest 08:18
こう直接使えるんで。例えば、そのシェルスクリフトだと、そういうでっかいファイルとかのなんていうんですかね。プロセスみたいなのが、うん、すごいま
@Guest 08:27
得意っていうところもあって、そういったシェルの良いところも取り入れて、どんどん取り入れているっていうところが、うんうん、個人的にはすごい
@Guest 08:36
あの良いところだなとはい思いましたね。
@Guest 08:40
そうですね、結構そのノードジパスクリフトのAPIを活用して、いい感じにかけるっていうのが分かっていいですよね。
@Guest 08:48
うん、結構使いやすいと個人的には思ってます。
@Guest 08:53
で、まあ、そういったあのすごいあの使い方の良さそうなテックスなんですけれども、あの、まあ、実際にや
@Guest 09:02
おとさんがどうやった活用の仕方をしているのかっていうところを聞いてみたいと思いまして。さっきそのま、普段あのうんをうん、
@Guest 09:10
直接実行するっていうところに惹かれたと思って。と聞かれたんですけど、そこもあの、実際にそのマークダウンで、プロジェクトにこのマークダウンを置いて、
@Guest 09:22
あの実行させるっていう感じに使ってるんですかね。
@Guest 09:26
ああ、そうですね、あの、
@Guest 09:28
いわゆるリポジトリのルートディレクトリーのとこに、スクリップ2っていうフォルダーがあって、まあそこにシェルスクリプトを置くような人も結構いると思うんですけど、
@Guest 09:38
今、僕が開発してるプロダクトと、そのスクリプトフォルダーの中になんとかドットmdっていうのがまあいくつかあるっていうような状態になって
@Guest 09:47
いて、ま。そのまあ、そのマークダウンファイルの中のjsのコードブロックにまあ
@Guest 09:53
えいくつかこう。スクリプトが書いてあって、それをzxに実行させるっていうようなものになってます。まあ、
@Guest 10:00
今んとこ書いてるスクリプトは、ほんと大したことないのが多いんですけど、その自動化した。ちょっと
@Guest 10:05
社内のAPI実行して、その結果をファイルに書き出して、どこそこに設置するみたいなのとか、まあ、多少こう設定値とかが必要なもの。
@Guest 10:15
ちっちゃいスクリップなんですけど、それをちょっとマークダウンで書いているっていう感じですかね。
@Guest 10:21
まあ、マークダウンを実行するっていう、だいぶ気持ち悪い
@Guest 10:27
構成ではあるんですけど、まあ、結構今んとこ気に入っているんですよね。で、その理由としては、その
@Guest 10:36
なんだろ。個人的にシェルスクリプトを見ると、ちょっとうわみたいな感じの気持ちを
@Guest 10:42
持つんですよ。で、まあ、それは僕自身のまあ、シェルスクリプトのレンドも低いからってのはまあると思うんですけど。まあ、角川もシルスクリプトをこうメインでやってる人は、そんなもちろん多くない
@Guest 10:55
ので、ま、その書き方とか、そのシェルスクリプトのお作法みたいなものの連度もみんなバラついてると思うから、読みにくいのかな。なんてちょっと思ったりしていて、
@Guest 11:06
でま。今回zxを使えば、とりあえずavスリフトで書けるので、まあ、その辺の構文っていう意味では。まあ、多少処理の流れは追いやすくなるかなとは思うんですけど。
@Guest 11:17
まあ、追加でそのスリックリプトを読む側の立場からすると、やっぱりどん実装もそうですけど、まあ、大体そういう動かすもんってリードミみたいな
@Guest 11:27
ま欲しいよなっていう風に思っていて、まあつく使い方とか、
@Guest 11:31
そのこれをスクリプトを角に至った経緯とか、3個のページとか、そういうやつですね。
@Guest 11:38
あるんですけど、まあ大体なんとかシェルとなんとかマークダウンみたいなのが綺麗に揃ってるケースなんで、まあ、なかなかないようなみたいな
@Guest 11:47
ま、実際僕も両方準備するのめんどくさいし、まあ作った方がいいけど、
@Guest 11:52
対応するマークダウンどこだっけみたいな。まあ、そういうのってまありがちじゃないですか。うん、なら、まあならそのことをマークダウンの中に、その情報もスクリプトも一緒に入れれば、
@Guest 12:06
まあ書きやすくなるかな。ハードル下がるかなとか、今後、メンテナンスを
@Guest 12:12
するにあたって、ちょっとググった結果のurlもまあ、マークダウンならぴってこう書いといてくれるかな。みたいなのを期待を持って、ちょっと
@Guest 12:21
やっているっていう感じですかね。ま、ちょっと書き始めたばっかりなので、ちょっと実際の効果とか、
@Guest 12:28
まあ、今想像できない新しいつみみたいなものはちょっとわからないんですけど、ちょっと。今のところは、その1つのマークダウンで、その概要とか使い方とかも
@Guest 12:39
書くしで、後半にその実際のコマンドとかも書くっていうのをちょっとやっていますね。
@Guest 12:47
なるほど、なんかいいですね。いや、でもなんか書き始めたばっかりと言いつつ、なんか聞いた感じだと全然便利そう
@Guest 12:56
な感じはしますね。
@Guest 12:59
そうですね、結構そのvさでやったってなったのが、その
@Guest 13:04
じゃます。今までは、そのコードスクリプトだあ、じゃないコードブロックだったら、あの、なんでもかんでも実行するっていう感じだったんですよ。とりあえず、評価してえって投げるみたいな感じでやったんですけど、
@Guest 13:15
あのvさで、あのちゃんとjsとシェルのコードブロックは実行するみたいな。
@Guest 13:21
はいはい、振る前に変わってくれたので、だいぶそのマークダウンのそのさんサンプルコードみたいな。はいはい、これは動かしてほしい、これは動かしてほしいみたいな書き分けもすごくしやすくなったので、めっちゃ書きやすくなったんですよね。
@Guest 13:34
そうだから、ちょっと前のv2の時はそのなんだろう、
@Guest 13:39
使い方みたいな、こういう感じに実行してねみたいなものをコードブロックに書くと、それ実行しちゃうので、
@Guest 13:47
ええみたいな感じだったんですけど、今はその前半の概要パートみたいなとこで、使い方のコードブロック、あのシェルとかjacebook書かないやつ
@Guest 13:57
を書いてで、後半のそのスクリプトパートの方で、そのjsっていうコードブロックにこう色々書くみたいにやってますね、
@Guest 14:07
だいぶv33キって感じです
@Guest 14:09
それはいいですね、なんか、
@Guest 14:13
マークダウンマークダン、そのなんていうかね。そのスクリプトの書き手の情報と、あの使い手の情報が1つのファイルにまとまってるっていうこと自体はすごい
@Guest 14:25
あの良いところだなと思っていて、多分、シェルスクリプトでそれをやろうと思うと、ま、例えばなんて言うんですかね。その
@Guest 14:34
シェルスクリプト実行してみて、例えば有政時みたいな、なんかテス2つ通りますよ。みたいな、そういう情報が簡単な
@Guest 14:44
のがばってて、終わるみたいな。そういう感じのうん、うん、なると思っていて、実行しないとわからないっていう
@Guest 14:52
ああ辛さがあり、ただそれ実行する前にシクリット読んでも、その書き手のための情報しか入ってなくて、
@Guest 15:03
そうそうそういう辛さがありますよね。なので、そうですよね、うん、まあ、そのシェルスクリプトを実行するためのリードミーみたいなのが必要に
@Guest 15:13
なってしまうので、それをまとめてやってもらえるっていうのは、確かにありがたい、
@Guest 15:20
そうままいけてる。cliってのはもちろん、シェルスクリプとかもかけるん
@Guest 15:25
でしょうけど、まあ、大にして複雑になるじゃないですか。いけてるようにすればするほどで、ま、そのコスト考えるんだったら、まあ、ちょっとしたリードミ書いてみたいな話になるし、もちろんそれは、シェルスクリプト内のコメントは書けるから
@Guest 15:40
ま、そういうのでも、まあ、もちろん実現はできるんでしょうけど、まあ、マークダウンみたいな構造の方がその構造的な文章とかも書きやすいし、
@Guest 15:48
リンクとかそういうのでも見やすいし、まあだいぶ印象も変わるんじゃないのかなとは思うんですね。やっぱり、
@Guest 15:55
実装者以外の人が見たタイミングで、こううわってさせないのは大事だと僕は思うので、確かに
@Guest 16:02
それはその通りだと思います。
@Guest 16:05
シェルスクリプトの中にバーって文章書くよりも、マークダウンでこう見出しとか、ちょっとリストが自下げされてるだけでも、だいぶ読みやすいじゃないですか、
@Guest 16:14
と個人的には思ってるんですよね。なので、今書いてるものが数か、月後、
@Guest 16:20
1年後、誰かの人に実際読んでみて、どうなるかなみたいな。ちょっと楽しみなんですけど、いや、これでうわって言われたら
@Guest 16:28
そうシェレスク人、自分でもうわってなってからそうなんです
@Guest 16:32
ね。すそう。数か月頑張って書いても、なんかちょ数か月後にってなるじゃないですか、
@Guest 16:38
そうそう、
@Guest 16:41
なぜここを書いたのかっていうのがすごくわかりにくいのは
@Guest 16:45
そうなんですよね。こうか、関数とか変数とかもやっぱ違うじゃないですか。じゃ、バスクリプトとシェルスクリプトでお作法が違うので、
@Guest 16:54
まそのお作法にのっとってかきゃいいんだと思うんですけど。まあ、その辺のこう脳みその切り替えも辛いし、
@Guest 17:01
とかっていう意味で。そのjavaspotで書けるだけでも、だいぶ価値はあるんですけど、個人的にはそのmacダウンで書いてっていうので、
@Guest 17:09
より価値が出るかなっていうふうに思ってます。
@Guest 17:13
そうなんか、わざわざそういう機能を用意してくれるってことは、そういう用途を想定されているということでもあると思うので、積極的にそうですよね。うん、まあ、普段で過去やっていうのをやってみたいです。僕もそれやってみようと思います、
@Guest 17:27
ありがとうございます、ぜひぜひやってみましょう。
@Guest 17:32
では、次の内容についてなんですけれども、あの、まあ、最近私もあの真面目に読み出したっていうところもあるんですけれども、
@Guest 17:44
あのzx。あの、ちょっと行動を皆さん見てもらいますと、すごくシンプルなんですよね、
@Guest 18:04
2ファイルしかない
@Guest 18:06
しかも、そうですね、
@Guest 18:08
数百秒程度ですかね。そうですよね、両方合わせて50秒ぐらいじゃないですかね。
@Guest 18:14
それぐらいのシンプルな内容で、多分読む、読む側にしてもすごいあのシンプルで良い内容だと思います。
@Guest 18:24
さっきのなんか、javaスクリフトとか、タイプスリフトとか、マークダウンとか、どうやって対応してるんだと思うと思って見てたんですけど、すごいなんて言うんですかね。
@Guest 18:34
ワイルドっていうか、シンプルというか。そうですね、すごいぐ直にマークダウンは、あのコードブロックのあのところを読んでますし、
@Guest 18:44
タイプクリフトも、あの、実行したタイミングでnpxcscってやって、
@Guest 18:52
あ、そのタイミングでインストールするんだみたいな。そういうそう、あの、新鮮さとこう割り切りを感じましたね。
@Guest 19:00
タクスクリプトで実行すると、やっぱちょっとトランスパイル分ちょっと遅いんですよね。
@Guest 19:05
で、あ、やっぱプランスパイブしてるんだな、なんて風に思ってたんですけど、あの依存関係見たら、あれ、タイプスクリプトないじゃんって
@Guest 19:13
待って、あれって思ったんですけど、まさか中でlpx呼んでるとは思わなくて、ちょっと面白か、その手があったかと思っ。
@Guest 19:21
確かになんかまあそこまでタイプスクールは重視してない。まあ、用途的にもそうですよね。あんまりこう
@Guest 19:28
型とか、そんなシレスクリストにかみたいな、そういう
@Guest 19:33
世界観そうなんですよね、
@Guest 19:34
私もあまり求めてなかったんで
@Guest 19:37
か。肩を気にするほどの規模ならば、ちょっとは別の手段の方がいいんじゃね。みたいな
@Guest 19:44
に、タイプスクリット書いた方がいいと思いますね。結構そういう感じで、すごい
@Guest 19:53
なんて言うんすかね、シンプルではありますよね、
@Guest 19:57
そうですね、
@Guest 19:58
マックダウンとかも、はい、先ほどおっしゃったように、そのテキストでご利用しみたいな。結構構文解析とかしてるわけじゃないから、ほんと、バックコートを3つ見つけるみたいな
@Guest 20:08
感じなんですよね。だから、あの構文解析とかしてるわけじゃないから、そのインデントされたコードブロックとかは、あの読めないんですよね。実行できないそっか、
@Guest 20:17
なるほど、はい、
@Guest 20:18
その行の先頭からちょんちょんちょん3つあってjsかな。シカなみたいなので、こう見てるので、こう
@Guest 20:28
マークダウンで、構造的な文章を生かした構造的な文章の下にコードブロックを書くと実行できる。
@Guest 20:37
それはまあまあそうですよね。うん、まあまあまあでもそれそれぐらいそ、どんだけそんなに複雑な行動は書かないという。そうそうそう、あと多分そう
@Guest 20:51
そうですよね、あと、あれもいいですよね。あの、ネットワーク上のスペリプトを実行してくれる、https
@Guest 20:59
する。ああ、うん、うん、うん、うん、うん、
@Guest 21:02
そうですねに結構入力は幅広いですよね。ガイブファイルもいいし、あの、ヒアドキュメントで書いた標準入力とかでもいいし、みたいな。
@Guest 21:10
あ、そうですよね、そうです、共有入力はいいですよね、なんか、これを組み合わせてなんか
@Guest 21:20
ありますかね。
@Guest 21:22
でも、なんかこうヒアドキュメントとか、そのガイブファイルとかも1発で実行できると、なんか、そのいちいちファイルとかもダウンロードしてもらわなくても、
@Guest 21:30
相手の人に実行してもらえるのは、結構便利かもなって、ちょっと思いましたかね。
@Guest 21:38
lpxで実行できるし、ほんとにばっと実行するみたいなパターンもちょっと思いつく
@Guest 21:45
そうですよね。や、すごい使い道は
@Guest 21:50
あの広いのはわかるんですけど、パッと出てこない。なんか、広い使い道あったら、また教えてもらいたいですね。
@Guest 21:58
うん、
@Guest 22:01
はいで、そんなすごいシンプルでし、使い道もいっぱいあって、すごく良い。プロダクトであるzxなんですけれども、まあ、
@Guest 22:10
それぞれのなんかこうzxに対する期待みたいな。どういったことができると嬉しいみたいなのをちょっと
@Guest 22:18
話していこうかなと思います。で、ですね、私がテックスの今後に期待することっていうと、まあ、
@Guest 22:28
色々機能の拡充あると思うんですけれども、1つあるのが、あの実行
@Guest 22:35
環境をなんて言うんですかね。こう、どこでも実行できるようにしてもらいたいなっていうところもありますね。今だと、あの
@Guest 22:44
まあzxをまノードの環境を用意してで、zxをインストールしないといけない。まあ、インストールしなくてもnpx使えばじゃいいんですけれどもまどっちにしても、ノードを用意しないといけない
@Guest 22:57
っていうところがあって、まあ、よくも悪くも、そのフロンタインドインジニアとか、能動の環境がある
@Guest 23:04
のが前提みたいなところが確かにありますよね。ま、シェルって
@Guest 23:10
汁並みたいな、あのする花反省みたいなのを考えると、そういう何か書いた。
@Guest 23:18
うん、マークダンで書いたその絶対向けのコードがうん、どこでも実行できる。それ、あの絵のがなくても、実行できるような状態
@Guest 23:28
やると、なんかもっとこう使い道が広がりそうだなと思いましたね。そうです
@Guest 23:34
ね、確かにz能動の実行環境前提だから、そのフロントエンドエンジニア同士みたいな。
@Guest 23:40
ちょっと限られちゃうんですよね。なんか、ノド環境ないよみたいなjavaしか書いてないんだけど、みたいな人と協業する時は、ちょっと考えないと
@Guest 23:50
そげないかもしれないですよ。
@Guest 23:51
だね、うん、確かに
@Guest 23:53
でこのところであの、まあ多分同じ用途で
@Guest 23:58
やる考える上で、多分1番有力なのは例えば5とかですかね。5で半ばになり、うん、
@Guest 24:05
今回してみたいなところになってくるかなと思うんですけど、まあ、ちょっと調べてみると、ちょっと。あのディノの
@Guest 24:14
コンパイルという機能が。うんうん、1.7で追加
@Guest 24:19
されたみたいで、これ見ると、あのリノコンパイルっていうコマンドが使えて、スをすると、そのタイプスリフトのあのホスコードがそのまま実行環境、可能な
@Guest 24:32
シングルバイナリ売されるっていう謎技術があるんですよ。で、
@Guest 24:39
これあのまど具体的にどういった感じで、じど動作してるかっていうのは、まあ調べてもらいたいんですけど、なんかこういう
@Guest 24:47
のがすごく相性がいいなと思っていますね。で、ああ、うん、なんか
@Guest 24:55
まあ多分どうどうどうやればいいのかちょっとわからないですけど、そのzxが今後ディノに対応したらすごい
@Guest 25:05
なんて言うんすかね。使い道が飛躍的に広がりそうっていう、
@Guest 25:10
もしくは、そのexでjavaスクリプトで書くから、スクリプトも書きやすいし、ディのコンパイルで過半戦もいいから、
@Guest 25:17
あの、フロントエンドエンジンナとか。そういうのも気にしなくても、あのおわのスクリプトがお渡しできるし、っていうのは確かに魅力的ですよね。
@Guest 25:27
なんか、なんか、あんまりジェース関係なくなってきますけど、そういうシェルスクリプトを実行環境なバイナリにコンパするものとして
@Guest 25:36
使われるのかもしれない。でも、それはそれですごく
@Guest 25:40
ありがたい。多分、そのエンジニア以外に渡すとか、そういう使い方も考えられますね。すごいん、
@Guest 25:47
そうですね、うん、確かに確かに
@Guest 25:50
かなと。はい、私は思いましたね。までも、
@Guest 25:55
かなり元々のコードがすごいノードべったりですし、依存のやるんで、
@Guest 26:03
まあ、そのすぐには難しそうですし、まあ、それを目指してるのかどうかすらちょっとわからないんで、まあ、でもあると
@Guest 26:11
嬉しいなっていうのが私の気持ちそうですね。
@Guest 26:14
夢が広がる
@Guest 26:17
じゃ、山本さんはどうですかね。
@Guest 26:19
そうですね、僕はま割と今ので満足してるんですけれど、
@Guest 26:24
まああのどうだろう。いけてる。スクリプトを書くための機能が、まあいくつか追加されると、それはそれで嬉しいかな。なんていう風に思っていて、
@Guest 26:33
あのzでクエスチョンっていうメソットが定義されていて、それはその対話式のプログラム。あははいかけるやつでこう。
@Guest 26:42
クエストの中に色々とそのメッセージを書いたり、その取り得る引き数とかを書くと、あのタブで保管して出てくるみたいなやつですね。なんですけど、
@Guest 26:52
あの入力値のバリエーションは今できないなどで、まあタブで保管できるけど、適当な文字入れても次行っちゃうみたいな。だから、自分でバリデーションしなくちゃいけないとか
@Guest 27:01
あるので、まそのスクリプトを書く上で、まよくあるような機能が
@Guest 27:06
ちょいちょい追加されるといいかなと思いますね。とか、あと、処理中にこう標準出力でなんかくるくるなったり、可愛くなったり、おしゃれになったり、はいはい、最近多いじゃないですか。
@Guest 27:16
そういうのもいちいち自分で調べて、あれこれするのめんどくさいので、そういうのが大盛りしてくれると、ちょっと便利かなとは
@Guest 27:23
思うけれども。まあ、今でも割と十分な機能は備えているので、なんか逆にシンプルぐらいなのも、それはそれでいいのかな、なんてちょっと思ったり、こう規模がでかすぎて、メンテが大変になって、もう無理とかって言われた方が悲しいので。
@Guest 27:38
一応、google配下のリポジトリではあるんですけど、一応オフィシャルなプロダクトではないよっていうコメントもついてるので、まあ、多分その担当の方が
@Guest 27:49
飽きたってなったら終わりって感じなのかなって。ちょっとドキドキもしているので、まあ、これぐらいの規模だったら最悪自分でも見れるし、みたいなところもちょっと気になるかな。
@Guest 28:01
うん、まあでも特にマダみたいにこうずぶずぶに書いてると、あの使えなくなると困るので。
@Guest 28:10
ああ、いやでも、これ
@Guest 28:13
あの、昨日の追加としてはすごい全然ありそうですよね、なんか、あの、そういうなんていうんですかね。こう、リッチにする方向性で言うと、長クとか、ミニミストとか、そういうのを積極的にあの取り入れてるんで、
@Guest 28:28
全然ありえますよね。うん、
@Guest 28:32
なんか、スクリプトを書く上でこう
@Guest 28:35
必要だけど、自分で書くと、ちょっとめんどくさいみたいなやつをまるともしてくれるようなライブラリになってくれると、より便利だな、とは
@Guest 28:43
思いますね。いちいち調べるのもめんどくさいじゃないですか。
@Guest 28:47
確かになんか
@Guest 28:50
うん、なんか全然関係ないですけど、そのクエッションとかあるなら、京プロみたいなのも使えるかもしれないですね。全然
@Guest 28:57
話が飛んでしまった
@Guest 29:01
なんか、そういう標準入力とか、標準出力とかのちょちょっとだけめんどくさいところをやってくれる。
@Guest 29:09
ああ、確かに確かにいや、でも、全然もう
@Guest 29:13
ただの思いつきでしたね。
@Guest 29:16
聞いてるから、
@Guest 29:17
これ聞いてるから
@Guest 29:21
までも、バリレーションぐらいはあってもいいんじゃないですかね。うん、うん、
@Guest 29:26
とは思うんですけれどね、まあ、そこはまあとは言っても、javascriptで書ける分、そ、そんなに辛くもないんですけどね。確かに、
@Guest 29:34
うん、あのスローエラーとかやってしまえばいい話なので、最悪
@Guest 29:40
までもそうですよね。あの、そういうま
@Guest 29:44
割とそういう拡張性、拡張性というか、しょ、将来性がすごいあの、ありそうなプロダクトでもあると思うので、すごい今後も
@Guest 29:53
すごい機能の追加とかは期待したいですね。
@Guest 29:57
そうですね、あ、
@Guest 29:58
あと、あのこちらからプリクエストとかもすごい投げやすい
@Guest 30:03
状態ではあるかもしれない。
@Guest 30:06
そのああ、そうかもしれないです。
@Guest 30:08
言うと、なんでもしかしたら、皆さん、コントリビュートチャンスかもしれませんね。
@Guest 30:17
では、そんな感じですかね。はい
@Guest 30:20
はい
@Guest 30:24
はいというわけでえ、今回はえーzxについて聞いていきました。
@Guest 30:30
ラインのフロントエの組織uytでは、このような技術的なキャッチアップを日々行っております。
@Guest 30:37
urテンサイダー以外にも、毎週の社内勉強会で、フロントインドの情報交換を行っています。今後も、ユテンサイズを通して、このような情報を外部に発信していけたら、と思います。
@Guest 30:48
最後に、現在、lin株式会社では、インターン中途採用とに大募集しています。
@Guest 30:54
このポトキャストを聞いては、人目を持たれましたら、小のと1番下にある9ページから、ぜひアクセスしてください。はい、それでは山本さんありがとうございました、
@Guest 31:04
ありがとうございました。
