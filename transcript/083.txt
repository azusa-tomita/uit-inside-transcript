@Guest 00:02
こんにちは、UITのポテト4dです。
@Guest 00:05
え、ユーザーインターフェースとテクノロジーを愛する、開発のためのビークリー、ポピキャストUIT INSIDE。今週も始めたいと思います。
@Guest 00:14
え、今回はですね、ゲストにUITのえあさんとえ、山本達也さんをお呼びしまして。え、lineのパスキーへのスポンサリングをテーマにえ、話していきたいと思います。
@Guest 00:25
え、お2人とも本日はよろしくお願いいたします、
@Guest 00:28
お願いします
@Guest 00:29
よろしくお願いします。
@Guest 00:34
さてでは、パソコン内に入っていきたいんですけど、えっと、ラインがアスキーにコンサリングしていることを、実は誰も知らないのではという話があるので、ちょっと初めにアサーの方から紹介いただきたいんですけど、よろしいでしょうか。
@Guest 00:48
はい、わかりましたえっと、ラインはですね、えっと、ハスキーのスポンサーリングを、2021年の3月から開始しています。
@Guest 00:57
で、えっと、これはオープンコレクティブのスポンサー枠で、えっと、毎月100ドル行っています。
@Guest 01:04
ありがとうございますこれって、あの、そもそもポンサリングの経緯で言うと、どういう感じでコンサリングすることになったんですかね。
@Guest 01:13
そうですね、元々きっかけとしては、僕の入ってるlineポイントクラブのプロジェクトで、あのコミットする時にま、どういう文脈で対応していたかみたいな話がわからないので、まジラの番号を頭につけるんだみたいなこと
@Guest 01:27
自動でやっていて、ま。これをえっと、お手製のギッドフックを使ってやっていたんですね。
@Guest 01:33
で、えっと、まあ、他のプロジェクトの方が、これをそのコミットログとかを見て、これってどうやってやってるの。みたいな話をまあ聞かれて、その時にま色々ギットfox使ってますよ。みたいな話に
@Guest 01:44
だったんですけど、
@Guest 01:45
まあ、なんか色々。その時に、なんかその方からも色々提案いただいてま。こういうギットテンプレートを使う方法があるんじゃない。とか、ま、色々レフトフックとか、振り込みトとかま、そういう色々なライブラリがありますよね。みたいな話が
@Guest 01:58
あってま、その中でまたタイミングよくハスキーブ5の話が出てきてま、最近出ましたよね。みたいな話で、ま、1回使ってみたいよねみたいな
@Guest 02:07
話とかも上がってて、
@Guest 02:09
で、やっぱりハスキーといえば、リントステージと組み合わせて使うことがやっぱり広く知られているそうですか。なっていう感じなんで、ま、あの、ちょうどリントとかもかけたいよね。みたいな話もあったんですけど、
@Guest 02:20
やっぱりその新しいライセンス形態ですよね。あの、mitライセンスじゃなくなったっていうところで、ま。スポンサリングしないと、うちとしては使いなせんよね。みたいな
@Guest 02:28
話もあったんですけど、ま、じゃあ、それならスポンサリングしてしまえば。では、みたいなことになって、ちょっと提案してみた形ですね。そしたら、結構あのすっと話がとって、スポンサリングしていただけることになったので、
@Guest 02:41
良いかなと思ってます。
@Guest 02:43
してしまえばいいので、は。ってなるのかい。
@Guest 02:50
なるほど、なるほど、あであれば初めはでもあれなんですね、お手製のギフックでやってたんですね、
@Guest 02:55
そうですね、なんでプロジェクトに参加した人がクローンしてきて、なんか
@Guest 03:00
その自分でシルスクリプトか何かを実行して、で、あの、セルスクリプトをギットフックスのフォルダーにコピーしないと使えないっていう。ちょっと1点もあったのがま、結構課題だったんですけど、はい、
@Guest 03:12
この辺が結構多分、ハスキーのv5からは割と楽というか、
@Guest 03:17
なんなんでしょう。ギッドネイティブな感じで使えるようになってるので、結構いやすくなったかなっていう感じがします。
@Guest 03:24
いや、なんか結構ハスキーというか、まあ、プリッコミット系の復旧ツールって、結構どっちかって言うと、あのリントができてない場合にコミットさせないとか、テストができてない場合にコミ
@Guest 03:34
させないために使われるのが多いかなと思うんですけど、ジラの番号を先頭に自動でつける、すごい便利とだなと単純に思いましたね。
@Guest 03:43
そうですね、かなかコード守るためのものっていう印象が良いんですけど、結構利便性を高めるなかなかも。
@Guest 03:52
なるほど、なるほどま、それで、あの無事3月からスポンサリングを開してま現在も続いているっていう状態ですね。そうですね、
@Guest 04:01
ハスキーで言うと、今はもうライセンスがまたあ、mitに戻ったかなと思うんですけど。まあ、それでも引き続きコーサリングはやっていっていいかなって感じの印象ですかね。
@Guest 04:11
そうですね、
@Guest 04:14
ちょっとその辺、あの他も色々ズルもあるかなと思うんで、その辺の話もしていければな思います。
@Guest 04:25
では、少し話変わるんですけど、も、えっとま結構そのハスキーをま、今後も。えっと、基本的にはスポンサリングしていくみたいな方針で、私たちはいるかなと思うんですけど、まあ、一方で。えっと、今回あのアモンさんが調査されていた、その振り込みトや、あのレクト
@Guest 04:40
くみたいなものも色々。他にもオルタニティとのあるツールってのは多いのかなと思っていて、結構以前、あの車内で
@Guest 04:48
イリントのコンフィグのえっと、開発とかのアップデートもあって、結構あの山本さんの方で、えっと、この辺りとか結構しっかり見られていたのかなって印象があるんで、ちょっと聞きたいんですけど、
@Guest 04:58
クリコミット系のツールってなんかどうですかね。他は結構まなんかまあ、みんなハスキーがデファクトだから、とりあえずハスキー使ってるってところはあると思うんですけど、なんか
@Guest 05:09
どんな感じでした。他のツールとの比較っていう観点で言うと、
@Guest 05:12
そうですね。えっと、最終的に僕が比較対象としたのは、ハスキーのv4とv6とシンプルギットfoxっていうライブラリーですね。
@Guest 05:23
でと、先ほど話してたように、ハスキーのミットじゃなくなった問題に際して、えっと、ハスキーとシンプルギットフックを調査したっていう感じです。で
@Guest 05:33
え、ハスキーのv4から6までについて、一応ちょっと確認しておくと、ややこしいんですけど。
@Guest 05:41
えっと、ライセンスがそれぞれv4がミトvgがパリティライセンスv6がミットと
@Guest 05:48
で、vgのパリティアクセスがちょっと。僕もそんなに詳しくはないんですけど、とにかく少り少量利用するときは、えっと、ちょっと考えなくちゃいけないよねっていうやつですね。
@Guest 05:58
でえ、実装方針がこのv4とv5以降で大きく変わってるっていうところがポイントで。
@Guest 06:05
えっと、ハスキーvoの方、こっちはかなりおさらいな感じになるんですけど、
@Guest 06:09
えっと、パッケージェイソンにギットfox用のコマンドを書いておくと、えー。ネイティブのgtfoxが実行される時に、え、呼び出してくれると、
@Guest 06:18
具体的な動きとしては、npmインストールした時に、え、ギッドフックハイカにハスキー用のシェルスクリプトを設置してくれるので、
@Guest 06:28
え、福士にそれ経由でパッケージェソなの。コマンド読んでくれると、
@Guest 06:33
npmインストール時にこう色々と準備してくれるので、まあ、いわゆる自動インストールができて、便利みたいなのが、ハスキーの特徴だと思います。
@Guest 06:42
で、ハスキーがv後でミットじゃなくなったっていう点だけ、結構盛り上がってる印象が僕の中にあるんですけど、
@Guest 06:49
一応voも。えっと、デリケートなったわけではなくて、実際、vgのリリースの後も、voのパッチアップデートがあるあります。
@Guest 06:59
引き続き、メンテナンスされている
@Guest 07:01
そうですね。
@Guest 07:04
で、えっと、ハスキーvgなんですけども、えっと、そのハスキーvgはえ、ハスキーの新しい方針に基づいて、実装されたものってことで、
@Guest 07:15
え、ブヨと五完成が全くないですとで、新しい方針は、その分4の課題を解消するっていうのがポイントで、
@Guest 07:24
え、作者のブログでもいくつか言及がされています。
@Guest 07:29
で、voでは、えっと、さっき言った通り、ドットギトフックハイカーに定義できるフック用のシェルスクリプト
@Guest 07:36
を、えっと、全て設置しているプリコミット以外のものも全て設置してるので、えっと、パフォーマンスが悪いよっていうことが1つ課題でした。と
@Guest 07:46
あと、まあ、さっきもう1つ言った通り、ハスキーといえば、自動インストールで嬉しいっていうとこがあるんですけど、あの、パッケージマネージャーのキャッシュが働く関係で、うまくインストールできないケースが
@Guest 07:57
あるらしいです。ちょっと僕はあんまり遭遇したことないんですけど、結構報報告されてるみたい
@Guest 08:03
で。なので、vg以降では、あのフックごとにシェルスクリプトを作成すること。っていうことと、え、インストール用のコマンドが定義された。
@Guest 08:12
結構変わっている
@Guest 08:15
で、えっと、このこれらの機能を実現するために、ギットギットの機能のコアフックパスっていうのがあるんですけど、それを使っていますと
@Guest 08:24
で、これはえっと、ギットフックのシェルスクリプトって、えー、ドットギットフックハイカーにあるわけですけど、この位置をえっと、ドット、ハスキーハイカーに変更するよとなので、
@Guest 08:36
いうことができるんです。ね。ぎ
@Guest 08:37
とのえっとるルートのディレクトリリポジトリのルートにドットハスキーっていうフォルダができて、そこに色々入れるよっていう形に
@Guest 08:47
なってますとで、まあ、復旧させるコマンドは、そこにセルスクリプトを集を置いて、プリコミットとかを置いて記述すると、なので、
@Guest 08:56
必要なものしか置かないから、早いぜっていう感じですね。で、
@Guest 09:04
ハスキーv6はえっと、まあ、ハスキーv後のミット版っていう認識で、まあほぼ合ってるとは思います。リリースのタイミングで、結構
@Guest 09:14
あのギットのコミットの差分が結構あるんですけど、結構ディレクトリの構造とかを変えただけみたいで、実装上はあんまり変わんないはず
@Guest 09:23
で、えっと、元々
@Guest 09:25
ハスキーがvをリリースした時に、えっと、小用利用の優勝化は一時的なもので、そのうちミットに戻るよみたいなことが書いてあったんですよね。
@Guest 09:34
で、まあ、じゃあいつミットに戻るんだよみたいな話が結構あって、まあ、lineのスポンサーとかの話にも繋がるわけなんですけど、も、
@Guest 09:43
まあの議論やらスポンサーやらの結果。まあ、思ったよりは、早いタイミングで、
@Guest 09:49
商用利用もできるミットに適用されたブログがリリースされたという感じですね。
@Guest 09:56
なので、えっと、ちょっと話長くなっちゃったんですけど。えっと、比較対象としては、ミットで使えるかつか、構造がそれぞれ異なってる
@Guest 10:05
v4とv6が比較対象に上がってましたとで、
@Guest 10:10
えっと、もう1つシンプルgidfoxなんですけど、まあ、ハスキーv5でミットじゃない問題の時に対抗場として、上がったライブラリで、
@Guest 10:19
え、僕はリントステージのリードmで見つけました。で、えっと、リントステージとかを導入する時って、えっと、mrmコマンドとかで
@Guest 10:28
設定する人結構多いと思うんですけど、まあ、コマンド1つでいろんな設定を自動でやってくれる便利コマンドみたい
@Guest 10:37
で、それが今までハスキーだったのが、えっと、シンポログってフックに変わっていたっていうのが、結構大きな話題にもなっていて、
@Guest 10:45
ただまあ現在はちょっとハスキーv6に戻ってるんですけどね。で、このシンプルギットfoxっていうのが
@Guest 10:52
え、こっちは、えっと、さっき言ったコアフックパスっていうのは使わず。えっと、パッケージェイソンに定義したコマンドを
@Guest 11:00
え、シンプルギットfoxのcliを叩いて、え、ドットキットfox配下にコピーするものっていう感じになってますね。
@Guest 11:08
えっと、さっきのハスキーv6の場合は、結局ギットが参照するシェーズルスクリプトの場所を変えるだけなので、
@Guest 11:15
そのシェルスクリプトをいじった後に、サインストールみたいな作業はないわけなんですけど、はい、シンプルキットfoxの場合は、
@Guest 11:23
えっと、そのパッケージェイソンから。えっと、ドキットクックの方にこうコピーする作業が発生するので、そのタイミングで忘れないでこう、
@Guest 11:31
シンプルギット、フックコマンドを叩かなくちゃいけないよっていう感じですね。なので、まあ、ブロも
@Guest 11:39
シンプルgitoxをまかなりシンプルな構造にはなったなという印象ではあるんですけれども、えっと、
@Guest 11:47
なので、一応v4とvロとシンプルギットボックスを比較して色々検討しました。っていう感じですね、
@Guest 11:56
じゃ、結構あれですね、それぞれで、アプローチは違うけれども、まあ、割とどれも簡潔に仕上がってるんで
@Guest 12:04
ま。使う上で、大きな問題はどれもないかなっていう風なところではある
@Guest 12:09
そうですね。
@Guest 12:13
ちなみに、さっき、あのけしさんがあの冒頭でおっしゃってた。あの、他のプロジェクトの方から、えっと、仕組みを聞いたえを聞かれた時に、他のやつも調べました。っていうので、レフトフックっていうのと、
@Guest 12:24
プリコミットっていうのをえ、調べたって話が上がったかなと思うんですけど、こちらはけしはいさんどうですかね。ハスキーエブロや、シンプルギットと比較すると、
@Guest 12:34
なんか作りの違いとかってありそう
@Guest 12:36
でした。そうですね、今挙げた2つレフトフックとプリコミットっていうのは、基本的にロードの環境に限らずま、色んなランゲージで使えるような
@Guest 12:46
ものになっているっていうま認識であって、で、プリコミットの方はもちろん、もうプリコミットだけっていう
@Guest 12:52
ものだとは思うんですが、ま、この辺とそののノードだけかどうかっていうところの違いって結構大きいのかなっていう風に思ってて、
@Guest 13:01
ま。なんか、その他に、例えばブリーでツール入れなきゃいけないとか
@Guest 13:05
ま、そういうものが発生してくると、まあ、若干ちょっと導入が手間なのかなとかっていうのは思ったりとかは
@Guest 13:11
しましたし、ま、あとは、その使っている人の数というか、なんていうんですか。まあ、デファクトであるハスキーがいいよねっていうような、
@Guest 13:19
流れにはなってったかな、という感じですかね。
@Guest 13:23
ああ、なるほど、なるほど、確かにノート以外のっていう観点も確かにありますね。なんか、私たちはどうしてもフロンテンの開発、もし、あのjsの開発っていうので、
@Guest 13:31
基本的にjsの環境が前提として話しちゃいますけど、確かに確かにほんとありがとうございます。
@Guest 13:40
私、昔、ちょっとプリコミット使ってたんですけど、もう今はスキー使っちゃってますね。なるほど、ありがとうございます
@Guest 13:48
ちょっと、あの全部書ノートの方に書いておこうかなと思いますので。えっと、詳しいま中身の構造とか、ぜひぜひ見ていきたいっていう人がいれば、
@Guest 13:55
え、初のとの方からアクセスだければと思います。え、2人とも紹介ありがとうございます
@Guest 14:03
はい、ありがとうございます、
@Guest 14:05
ありがとうございます
@Guest 14:07
ではですね、最後に、ま、今結構いろんなツールの企画とかも話していったかなとは思うんですけれども、
@Guest 14:13
あの、これからもアスキー使っていきますか。っていうのを、ちょっとえっと聞きたいなと思っております。じゃあ、まずは山本さんからお願いしてもいいですか。
@Guest 14:22
はい、
@Guest 14:22
えっと、僕はえ、一般ユーザーとしても、もちろんスポンサー企業所属のエンジニアとしても、はいえ、ハスキーを使っていこうかなっていう風には思っています。
@Guest 14:34
で、えっと、先ほどの比較対象の範囲での判断なんですけど。
@Guest 14:39
えっと、ハスキーvoはまあ、ハスキーが課題を持ってる以上、まあ使えないようなっていう
@Guest 14:46
印象ですかね。一応、いろんな自分自身が直接こう課題とかにまだあんま直面している印象はないんですけど、もま使ってるライブラリがそういう思想である印象を従おうかなという風に思って、
@Guest 14:57
でえ。残りのハスキーブロと、シンプルギットボックスについてなんですけど、
@Guest 15:02
えっと、正直、実走面ライブラリの実走面で言うと、どちらもネイティブのギットfoxの薄いラッパみたいな
@Guest 15:10
感じなので、あまり差はないかなっていう印象も持ってます。
@Guest 15:15
ただ、えっと、ossの認知度とか、コミュニティの規模の差とかを判断すると、えっと、ハスキーv録なのかなっていう
@Guest 15:24
感じの判断ま、実際、あのハスキーの方が皆さん使ってることも多いので、
@Guest 15:30
あの、新しくプロジェクトはとか、チームに入った人がなんだ。シンプルギットクスってってなるよりも、あ、ハスキーなのねの方がまあ
@Guest 15:39
めんどくさい会話もないかなみたいな。まあ、実態として、その人がハスキーブイヨンしか知らなかったら、まあ頑張ってリーと読んでくれよって話なんですけど、まあ、そういう心のあれ的にも、まあブ録を外す理由はないのかなという
@Guest 15:54
判断ですね。
@Guest 15:57
なるほど、ありがとうございます。
@Guest 15:59
そうですね、確かにま、どちらも同じ薄さだうん。例えば、まあこれでハスキーがすごい難解な知識を要求されるとかであれば、知名度があっても、そうそうそうその比較対象になるかもしれないですけど、同じようなシンプルさなら、
@Guest 16:12
より一般的なとか、ディファクトに近いものを使っていきたいってのはありますよね。そうそう、そうそうそう、確かにあのごさんはどうですか。
@Guest 16:22
そうですね、僕も山本さんと同じように、ま、基本的にはハスキーを使っていきたいな、という感じがしてます。
@Guest 16:29
まあ、なんか半分言い出しっぺだからみたいなところもなくはないんですけど、
@Guest 16:32
はいはいはい、
@Guest 16:34
まただなんでしょうね。あのも、もちろん、そのギット、ネイティブ感、その薄いラッパーであるっていうところは、もちろんすごい好印象だったし。あの、そうですね、元々ポイントクラブでやってたこと、その
@Guest 16:44
ジラの番号をですね。あの、プレフィックスにつけるとかま、そういうこともなんか追加しやすい
@Guest 16:50
なんででしょう。あの、今までだとなんでしょう。npmのスクリプトを実行するっていう考え方だったのが、まあ、ほんとになんでセルスクリプトを置いておけば、ま。それを実行してくれるような
@Guest 16:59
イメージに変わっているので、ま、そういうところもなんかメテもしやすいし、新しいメンバー入る時もまここにあるよっていう風に伝えやすい。ま、さっき、山本さんが言ってたことと同じようなことですね。
@Guest 17:10
があるので、ま、結構この辺があの理由で使っていきたいかなと思いました。
@Guest 17:15
なるほど、ありがとうございます。そうですね、確かにそのギットネイティブ感が高まることによってま
@Guest 17:21
なんでしょう。今までってまとはいえ、ちょっとバッキーシーソンに書く都合もあってま、ちょっと
@Guest 17:26
なんでしょう。ハスキーというツール感がありますけど、ま、これからは単純にギットフックま、ドットキットの中ってうまく管理できないんで、それをこううまく管理してくれるツールっていう
@Guest 17:36
だけになっていくっていうのはありそう。なんで、うん、うん、確かによりわかりやすくてよさそうですね、なるほど、ありがとうございます。
@Guest 17:44
私もま、基本的にま、せっかくスポンサー
@Guest 17:48
いうのもありますし、使っていきたいなとは思いますね。いや、でも、やっぱりま共通言語であるみたいなところはなんでしょう。あの、
@Guest 17:57
やっぱりフロントエンドって、ある程度ディファクトなものを使っておく方が。まあ、その
@Guest 18:02
こういうなんでしょう。すごくバリューにま。例えば、デパクトであっても、例えばなんでしょうね。最近で言ったら、モーメントジェースとかあって、デパクトであっても、重くて使えない理由があったりとかはあると思うんですけど、ハスキーとかについては、
@Guest 18:13
リファクトを使っておくことによる。デメリットってのがほとんどないとは思うんで、これからも使っていけるといいかもしれないですね、
@Guest 18:23
そんなところですかね、はい、では、今日のハスキーの話は、このあたりにしたいと思います。
@Guest 18:35
ええということで、今回は
@Guest 18:37
え、ラインがハスキーにスポンサリングする理由というところで、え、2021年3月からスポンサリングを始めたハスキーのラインでの使い方っていうところとま、他のツールとの比較というところについて話していきました。
@Guest 18:50
え、lineのフロントエンド組織UITでは、このようなフロントエンドに関するえ、議論やえー、コミュニケーションをえ、活発に行っております。
@Guest 19:00
え、外部にUITeサイトで公開している内容につきましても、社内勉強会などから始まったものも多くありますので、今後も発信していければと思います。
@Guest 19:10
また、このエピソードを聞いて、ラインに興味を持ってくださった方は、え、ぜひぜひショートの下にある求人からえ、ご連絡をいただければと思います。
@Guest 19:19
え、現在ですね、リモートで、ズームでのカジュアル面談も行っておりますので。まあ、少し話を聞いてみたいっていうだけでも、お気軽に連絡いただければと思います。
@Guest 19:30
え、それでは、本日のエピソードは一応させていただければと思います。え、聞きてくださり、ありがとうございました、
@Guest 19:37
ありがとう、ありがとうございました。
