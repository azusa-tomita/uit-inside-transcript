@Guest 00:04
こんにちは、UITのただです。今回もUIT INSIDEを始めたいと思います。
@Guest 00:10
UIT INSIDEは、ユーザーインターフェースと、テクノロジーを愛する開発者のためのポッドキャストです。最新の標準の動向や、開発、フレームワークの変遷、
@Guest 00:20
uyやuxに関することまで、毎週フロントエンドの情報を発信していくことを目的としています。
@Guest 00:27
ハシュタグはシャープ、uyt、アンダースコアインサイド、エピソードのご意見やご感想はいつでもお待ちしていますぜひ、ツイートしてください。
@Guest 00:37
今回はですね、えっと、今話題のというか、もう結構話題過ぎちゃった感
@Guest 00:43
はあるかもしれないです。けれど、も、ずばりネクストj12の
@Guest 00:47
件についてえ、話していこうと思います。今回は、えっとうえ、おなじみのょさんとえっと、まあ、お久しぶりのセンスさんを今回え、病院して3人で
@Guest 00:58
話していこうと思います。それではよろしくお願いします、
@Guest 01:03
よろしくお願いします
@Guest 01:04
よろしくお願いします。
@Guest 01:10
ええ、今回はですね、えっと、センスさんおいしたんですけれども、ちょっとま久しぶり、はい、半年ぶりぐらいですかね。はい、そうですね、それぐらいはい
@Guest 01:20
なので、また改めてちょっと自己紹介をしていただこうかなと思います。
@Guest 01:25
はいはい、お久しぶりでございますせ、水と申します。え、去年の夏にえっと、LINEでインターン
@Guest 01:33
参加して、今年の3月までLINEでアルバイトとして、LINEnewsの開発と、LINEスケジュールの開発を行ってまいりました。
@Guest 01:44
はい、
@Guest 01:45
あ、はいはい、よろしく、よろしくお願いします。そうですね、先生さんはほんとに色々と大活躍。えっと、
@Guest 01:55
UIT INSIDEのところで言うと、えっと、まあ、まさしく今日取り上げようと思っているアクトサーバー、コンポーネンツのところとかもすごい。えっと、
@Guest 02:05
調べていて、すごいなんて言うんすかね。キャッチアップをしてくれました。で、もちろんあの、
@Guest 02:12
ここの内容については、エピソード76でもすごい話されてるんですけど、じゃあここについても、えっと、今回ネクストjsで
@Guest 02:22
実際にえ使えるようになったというところでま。改めて、あの、これから取り上げていこうと思います。
@Guest 02:31
はい、ではですね、えっと、ネクストジェースについて話していくというところで、実は全然アゼンダを作っていない
@Guest 02:41
です。けれども、今3人で、あの、ネクストジェースのブログを読んでいますで、
@Guest 02:49
どれどれからとえ見ていきますかね。えっと、じゃあ、1番上のトピックのラストコンパイラーのところをちょっと
@Guest 02:59
見ていこうかなと思います。これはですね、えっと、まあ、要約するとすごいビルドが早くなりますよ。っていうところなんですけれども、
@Guest 03:09
まあ、それはなぜかと言います。と、そのラストコンパイラー、イズビルトンswcということで、
@Guest 03:16
あのswcというライブやりをえ採用することで早くなりますよ。というところはあります。
@Guest 03:25
で、えっと、まあここ一応エクスペリメンタルという扱いなんですけれども、ネクストコンフィグジェースにスタブルシミニファイという
@Guest 03:35
ところをゼルーにすると有効になるということです。で、
@Guest 03:40
まあ、ちょっと実際のプロジェクトで、どれぐらい早くなるかっていうところまでは試してないんですけども、どうやらアップト、
@Guest 03:50
スリータイム、ファスター、リフレッシュってことで、なんか3倍早くなったり、ビルドが5倍速くなったりっていうところらしいです。
@Guest 04:00
で、えっと、一瞬取り上げたところが他にも
@Guest 04:06
ありまして、以前uytミートアップでですね。えっと、
@Guest 04:10
開発者目線のフロントエンドツーリングを考えるというイベントを6月頃ですかね。えっと、行いましたで、この時に私も一瞬
@Guest 04:19
swcについて取り上げてで、まあ、esビルドの再考場みたいな感じで紹介したんですけれども、
@Guest 04:29
結構あれですよね。ネクストjで採用されたということで、すごい今までだと、結構esビルド1兆だったっていうところが
@Guest 04:38
だいぶわからなくなってきた感がありますね。うん、なんかここのところとかどうですかね。皆さん試されました。
@Guest 04:48
私は、そのネクストジースのでかいプロジェクトっていうのを持ってないので、実際どれぐらい早くなるのかっていうのは全然
@Guest 04:57
わからないんですけれども、実際に試した人の感想が聞きたいかもしれない。
@Guest 05:05
残念ながら、私は実際に試したことはちょっとまだないですね。これああ、はい。ネクストジェイズでは、
@Guest 05:11
実は僕もまだ
@Guest 05:12
試してないです。そうそう、そうそうなりますよね、気になります。
@Guest 05:18
ブログによると、バレより17倍早いなんて書いてありますね。
@Guest 05:23
うん、うん、うん、
@Guest 05:25
そうそうなんですよ、
@Guest 05:27
ほんとに自分のライブもは早かったら、まあとても嬉しいですけど、
@Guest 05:32
そのswcに関して言うと、ネクストジースでswcのを作った人を雇いました。みたいなことも書いてあって、
@Guest 05:40
あ、はいはいはい、
@Guest 05:41
かなり。まあ、ネクストjsのswcに対する本気度っていうんですかね。は、ちょっと伺えるんじゃないかなと思っています。
@Guest 05:50
確かに確かにそういえばありましたね、えっと、ネクストチェスニッツだったかな
@Guest 05:57
あ、11.1ですね、11.1のブログが上がった時に、その第1歩がありました。ラストベースと、ツーリングに
@Guest 06:06
力を入れます。っていう話があって、はい、そうですよね。その中で、クリエイターオブ、swcの人が
@Guest 06:16
ジョインド2、ネクストデースtて感じで。いや、そうそうなんですよね、まあ、
@Guest 06:24
ちょっとだけ行動を読んだことがあって、一応その特徴として、そのesビルドよりも、バックコンパティビリティといういうか、例えば、
@Guest 06:35
es3のエクスポートに
@Guest 06:39
対応していたりとか。って言って、イスビードって結構なんて言うんですかね。こう機能を注ぎ落として早くするっていう、はいはい、方針かなと思うんですけど、
@Guest 06:49
それとはちょっと違うって感じはしましたね。なんか、もっとこう多目的な感じで使いそうな
@Guest 06:59
うんうん、
@Guest 07:00
雰囲気を感じます。
@Guest 07:02
個人的に今回おうって思ったのはですね、割と真面目に、まあ、ネクストジェースなのかあるが、なのか、swcなのか、あるいは両方がわからないですけど、
@Guest 07:12
結構真面目にバベルっていうものを置き換えようとしてくれてるな、という風に思ったことがありまして。というのも、
@Guest 07:19
なんか、エダシとか、あるいはイビルドもそうなんですけども、なんか、昔あったバベルプラグインっていうんですか。
@Guest 07:26
なんか、あの、カルチャーがすごいおき去りになってるなっていう風に感じてたんですよ。なんか、
@Guest 07:33
なんか、ポストバベルの色々なもっと早いビードツールみたいなのが出てくるために。でも、それバベルプラグインが動かないじゃんって思っていたんですけど、
@Guest 07:42
ま、今回ネクストジェースはなんかスタイルドコンポーネンツこれ元々確かバベルプラグインに依存していた。いや、確かなくても動くのはいかな
@Guest 07:52
けど、まあったらもっと早く動くなるのか、確かシースプロップが使えるみたいな話でしたっけ。
@Guest 08:00
あんまり覚えてないけど、とりあえず、まバベルプラグインの恩恵を受けていたところがあったんですよね。スタイルドコンポーラはスっていうのはい。なんかそういった
@Guest 08:09
もがちゃんと新しいラストコンパイラの時代でも、使えるようになんて言うんですかね、swcプラグインとかになるんですかね。
@Guest 08:18
そういうものも、ちゃんと考えてるよみたいな発表が、今回のネクスト12のブログにありまして。
@Guest 08:25
はいはいはいはい、
@Guest 08:27
あ、これは本当に素晴らしいことだなというふうに、自分としては実は思っているんです。
@Guest 08:34
バベルプラグインでま、結構いろんな。まあ、atをいじるようなものが、エコシステムの中に生まれてきていたという状況の中で、
@Guest 08:45
1回、そのabではsrcが出てきたことで、そういうのがリセットされていた感じがしたんですけども、またはいはい、そのなんていうか、
@Guest 08:53
エコシステムの広がりみたいなのが、swcを中心に取り戻されてくるのかな、という風に、そこのところはすごいそうしています。うん、うん、
@Guest 09:03
確かに
@Guest 09:04
あと
@Guest 09:06
だからこれほんとに。いや、ほんとにフロントエンドエンジニアがラストやる時代来たなって割とこれ見た時、真面目にあ、プラフにかけるならラストやるわっても思いましたね。
@Guest 09:19
ああ、そうか、それはあるか、まじそれそうっすね、
@Guest 09:23
うん、うん、
@Guest 09:24
俄然興味が湧いてきたところあります。
@Guest 09:28
バチ代はラストか
@Guest 09:31
そうですね、ま、swc本体とかはまあ強い人がラスト書いて、まあ上手いことやってくれるんだろうな。みたいに思ってなかったわけでもないんですけど。
@Guest 09:40
ま、プリティアとかの例を見ると、多分そのマインドはあんま良くないなと思いつつねまでも、プロビンかけるとなったら、割と
@Guest 09:48
まあ、人がやってないことできちゃうんですよね。確かにええ。だから、本当に
@Guest 09:54
フロントウインドツーリングとして、ラストをやっていくモチベーションがまた一段階上がったというか、
@Guest 09:59
うん、
@Guest 10:00
はい、そういう風に感じてます。
@Guest 10:02
結構まあ、ほんとにあのいて、ニートアップのお話のあの、押し返しになりますけど、ミルドツールの
@Guest 10:12
最近の流れっていうのは、
@Guest 10:14
ほんとに見張るものがあります。最近だと、ほんとにプラグインの話で言うと、esビルドプラスロールアップみたいな流れはあったんですけども、
@Guest 10:24
ここに来て、sacを採用というところで、バチバチに戦うという
@Guest 10:34
してます。なんかはから見てるように新しいし、ああ、でもそれ戦い戦いの中でこうプラグインをこうどんどん
@Guest 10:44
採用してもらえるチャンスかもしれない。作ればですね。
@Guest 10:49
うん、
@Guest 10:49
そうですなんか、一旦プラゲンベースとか、あるいはupのローラーベースで、ものすごいごちゃごちゃになった。エコシステムを
@Guest 10:56
割と1回。なんか、デファクト、デファクトスタンダードみたいなのが作られてる流れが最近あったと思うんですよね。
@Guest 11:02
例えばは、asモジュールはモジュールcsにするみたいな。手くと、スタンダードがいつの間にかできてたりとか
@Guest 11:10
なので。はい、その流れでこのプラグイン的なものも改めて。まあ、デファクトスタンダードとして、エコシステムに組み込まれると、非常に嬉しいなと
@Guest 11:20
自分としては思ってます。
@Guest 11:24
そうですね、うん、あ、
@Guest 11:27
今今のsはwc版のコンパイラーだとあれなんですね。はい、バベルプラグインを入れると
@Guest 11:36
戻っちゃうんですね、普通のやつにあ
@Guest 11:39
さどどうなんですか。まあまあなんか普通に考えたらそんな感じ
@Guest 11:44
対応しないってことですね。
@Guest 11:46
なんか、バベルの設定をディテクトしたら、バベルにフォールバックするみたいな。そういう感じですね。ああ、なるほど、うんうん。
@Guest 11:54
さすがにちょっとバベルの設定を自動的にラストに変換するのはちょっとのぞみうかなというそ、
@Guest 12:04
ラストで書き直した次世代のプラグインたちみたいな感じなんですね。きっと。はい、
@Guest 12:12
ネクストテスト的には、多分そういう方向性を考えているんじゃないかな。
@Guest 12:18
うん、いいですね、めちゃめちゃ早そう。
@Guest 12:21
なんか、cssの有名どころはあのサポートこれからやりますっていう感じのことは入ってますね。で、
@Guest 12:31
やっぱ先にスタイルドjxはサポ
@Guest 12:35
ここはここはネクストジま、どちらにしても結構まあなんていうんですかね。息の長い
@Guest 12:44
プロジェクトにはなりそうですね、これから作る人には結構1度swcミニファイをオンにして
@Guest 12:54
作ってみるっていうのも、すごいいいことだと思います。それに、まあ、戻す戻すことも、
@Guest 13:00
基本的にそのswcに対応してて、バベルではないっていうことはないと思うので、まあ、1回やってみるのもいいかなと思います。
@Guest 13:11
なんか、見た感じ。swcによるトランスファイルはデフォルトで、オンでswcによるミニファイはこれオプトインなんですね。
@Guest 13:20
あ、なるほど、はいはいはい、
@Guest 13:23
swcミニフェをトにすると、デフォルトのターダーじゃなくて、swcになるっていうことですね。
@Guest 13:30
あ、なるほど、ミニファがポイントお太いになってるって感じですね。うん、
@Guest 13:37
なるほど、でも呼んだ感じ。理由としては、まだプロダクションレディーかどうか定かじゃない。というか、もっとテストする必要があるみたいな感じですね。きっと
@Guest 13:48
うん、うん、うん。
@Guest 13:50
ミニファイでバグって挙動変わりますみたいなのは、確かにちょっと怖いですからね。
@Guest 13:55
はいはいはい、
@Guest 13:57
だから、これ1回プロジェクト始まっちゃったら、後からsrcミニファイをオンにするのは、ちょっと辛い気がしてます。んで、
@Guest 14:05
まあ、ほんとにデフォルトでオンになるくらい成熟するまでに使いたかったら、もうプレシストを開始するときに、こういうのはオプトインしちゃうのが多分
@Guest 14:13
いいかなという感じですね。
@Guest 14:16
そうですね、うん、なんかここら辺はリートと似た感じの流れですね。その、あのデベロップとか、そういったところの環境はそ
@Guest 14:26
あるもののプロだ。あの、ミニファイとか、プロダクションビルドっていうところをどうするかっていうのは、まあ、実際に
@Guest 14:37
使って行ってっていうところですよね。うん、じゃあ、次のところ行きますか。
@Guest 14:46
ま、世間的には多分ミドルウェアが1番ホットな話題かなと思うんですけれども、ミドルウェアでも、
@Guest 14:54
あの、その、もちろん、エファンクションズの話題はあると思うんですけど、あんまり機能的になんかこさ
@Guest 15:04
すごいなんて言うんですかね。こう、注目すべきところっていうところは、どうなんですかね。
@Guest 15:12
ミエアが使えるようになりましたっていうところでも、もちろん、そのエッチファンクションの対応もあると思うんですけど、それを除くと、まあ、
@Guest 15:21
そういったドライドウェアが使えるようになりました。っていうイザンプルがいっぱいいるので、そこのところとかを
@Guest 15:31
違うんですよね、
@Guest 15:33
色々ありますよね、
@Guest 15:35
まあ、普通に嬉しいって人が結構多いんじゃないですかね。まあ、エにデプロイしなくても、まあ使えるものは使えるはずなので。
@Guest 15:45
そうですね。
@Guest 15:46
普通になんか従来めんどくさかったことができなかったことが、まあもっといい感じのま。ネクストジースの枠組みに乗っかって
@Guest 15:55
できるようになりましたよ、という風なことなんですか。はいね、
@Guest 16:00
そうですね、なんかあの別にこれエファンクションズ関係なく、便利便利ではありますよね。
@Guest 16:08
はい、
@Guest 16:10
なんか、バーセルがどうしてもエファンクションズ押したいみたいだから、それで、なんか会話がざわついていたりもしましたけども、
@Guest 16:17
めちゃめちゃ押してますよね。
@Guest 16:19
そうですよね、
@Guest 16:22
でも、それとは無関係に一応使えるものだなっていう認識を自分としてはしてますね。
@Guest 16:30
結構限定的ではありますけども、パーセルと組み合わせたら、ほんとめちゃめちゃ良さそうなうん感じはありますよね。
@Guest 16:38
なんか聞いた話だと、これ、ミドルウェアの中では、フルのノードジェースの機能使えないみたいな話がありませんでしたっけ。あ
@Guest 16:45
らしいっすね、
@Guest 16:46
あ、そうなんですね、
@Guest 16:48
なんか制限されたvmの中で動くみたいな
@Guest 16:52
へえvハvハなんじゃかみたいな
@Guest 17:00
と、サンドボックス的な環境で動くようになっていて、ああまあそれは結構なんか。多分そのままエにでプロリできることを保証するために、みたいな思惑も
@Guest 17:11
あるんじゃないかとは思いつつ。うん、
@Guest 17:14
確かになんかあのあんなんて言うんですかね。サンドボックスっていう話で言うと、確かurlインポーツの
@Guest 17:24
なんか似たような話題があったんで、
@Guest 17:27
あ、その昨日内側としては同じかもしれないですね。言われるインポーズをすると、えっと、まあ、そのセキュリティ的によろしくないので。っていうところで、そういった
@Guest 17:37
ところをあの全然憶測で言ってます。けれども、もしかしたらそういったサンドボックスの仕組みとかは、
@Guest 17:45
浦和で共通になってるのかもしれない。
@Guest 17:51
はい、確かに、ちょっとちらっとそんなことが。まあ、リリースノートにも書いてありますね。
@Guest 17:59
じゃあ、次はリアクト18のサポートについてきますか。
@Guest 18:08
えっと、ここはまあ、もう皆さんご存じの通り、えっと、おしさんがエピソードので言うと90、
@Guest 18:18
いや、89ですね89で、えっと、イヤと18のアルファが出たタイミングで、えっと、しっかりえ紹介されてますので、
@Guest 18:26
まあ、そちらもぜひ聞いてみてください。で、ま、ここの中の紹介されていたり、あと、リアと18のアップデートにえ
@Guest 18:35
対応したというところですね。サマリーで見ていくと、サーバーサイドストレーニングであったり、リアとサーバーコンポーネンツであったりっていうところ
@Guest 18:45
が、えっと、トピックになります。で、え、ここ私もちょっとだけ試しました。で、えっと、リアクトのま、
@Guest 18:56
エクスペリメンタルのえ、フラグのとこに、コンカレントフィーチャーズと、サーバーコンポーネンツっていうところをえ、それぞれトゥルーにすると、
@Guest 19:05
逆とサーバーコンポリが使えるようになります。で、実際に動いてるのは
@Guest 19:11
一応確認しました。動いたっていうと、それまでなんですけれども、1番あの、注意しなければならない点で言うと、えっと、これを有効にした場合
@Guest 19:23
基本的にそのネクストジェイスが持ってるサーバーサイドリンダリングというか、まあ、そういった
@Guest 19:31
機能は使えません。具体的に言うと、そうそうそうなんです、そうなんだ、えっと、ゲットスタティプロップスとか、ゲットスタティック、パス
@Guest 19:40
ゲット、イニシャルプロップスはアンサポーテットです。
@Guest 19:43
うん、うん、
@Guest 19:44
なので、ま要するに、そのネクストジースがこれまで提供してきたサーバーサイドレンダリングの
@Guest 19:54
機能ではなくて、略と18がこれからて提示しようとしている略と、サーバーコンポーネンツに
@Guest 20:03
乗せ替えるかっていう選択肢ができたっていうイメージですね。
@Guest 20:10
いいですよけ
@Guest 20:11
こう、マジっすか、
@Guest 20:13
どど、どうなんですかね。いや、これはこれで私はなんか
@Guest 20:18
そういう方針なんだろうな、いらんと一応いらんすまじでそ、そうなんですよ、あの、機能的にはかってるんですよ、うん、うん
@Guest 20:29
で、しかも難しそうですよね、これ、両方対応しても、そんなに
@Guest 20:37
両方使いたい人いるかなって感じですね。今ん確かにそうですね、
@Guest 20:43
あれですね、ゲトイニ、シャルプロップスとか、その辺って、なんか割とパスに紐づいてた。なんか、ファンクショナリティじゃないですか。
@Guest 20:52
サーバーコンポーネンツって、割とリアクトのジェネリックな概念だと思っていて、本当にネクストジェイスのゲットニシャルプロキスとか、あの辺を
@Guest 21:01
サーバーコンポーネンツで大体できるのかな。ってのは、ちょっと怪しい気がしなくもないですね。個人的なしか
@Guest 21:10
そうですね。一応、あのサポテ、ネクストジースピアズっていうところに、ダイナミックルーティングっていうところがあげられているので、
@Guest 21:20
ルーティングは見てくれる気がします。ちょっとここ
@Guest 21:25
まだ試してなかったんですけど、うん、なんかおそらくそのページの中にまあ、サーバードェイかtsc
@Guest 21:35
書いておけばどうなんですかね。ど、どこで取れるようになるのかな、なんか、多分
@Guest 21:44
そんなどこかで取れると思うよ。ああ、でも単純に
@Guest 21:48
あのあのルーティングだけしてくれるっていうだけで、別に渡されるわけではなくて、そこは自分でやらないといけないかもしれないですね。あの、
@Guest 21:58
パスとしてなので、
@Guest 22:03
スタティックプロップス対応してないので、もしかしたらスタティック、ジェネレートは基本的に
@Guest 22:14
あまり考えないのかもしれないですね。
@Guest 22:18
この辺ってまだアルファだからってことだったりしますかね。
@Guest 22:22
ああ、そっか、それは
@Guest 22:24
そうそうそうと眠たいですよね。
@Guest 22:27
あ、アルファなの
@Guest 22:28
これなんか一応アンサポーティドネクストjAPIってところに、ワイルアsシアのssスリーミング、インステリンディアルファステージって書いてあるから。はいああ、
@Guest 22:37
もしかしたら、ちゃんとプロダッションリリになる頃には、ちゃんとサポートされているかも、という希望が
@Guest 22:43
確かに
@Guest 22:45
あるのかな。
@Guest 22:47
そうですね、あの、ゲットサブプロップスは確かに被ってるんですけど、スタティックポップスは。でも、両方
@Guest 22:57
欲しい時は確かにありますね。うん、そうですね、
@Guest 23:01
個人的にはその辺ちょっと残ってほしいというか、続投してほしいですね。
@Guest 23:06
うん、
@Guest 23:08
そうですね、他にサーバーコンポニーズで、
@Guest 23:15
なんか面白そうだったのは、あのはい。カンファレンスの中でデモで、
@Guest 23:22
あのはい、コンポーネントレベルのキャッシュを実現したいみたいな話があ、
@Guest 23:29
ちょっとそのデモが見つからなかったんで、試してではないんですけど、あれ、結構待ち望んでた。
@Guest 23:36
サーバーコンポーネントのネクストジェイズ版みたいなところあるなって思って、
@Guest 23:42
うん、うん、うん
@Guest 23:43
ああ、コンポーネントタイ
@Guest 23:47
ほんとにそれこそ今回実装されたミドルウェアと組み合わせて、もうミドルウェア上で、サーバーコンポネット
@Guest 23:55
のキャッシュのってたら、もう返却しちゃったみたいな
@Guest 23:59
と言ったら、もうあ、
@Guest 24:00
超爆速になりそうな予感がすごい
@Guest 24:04
すごいですね。うん、確かに
@Guest 24:07
結構キーノートの人嬉しそうに話してたんですけど、
@Guest 24:10
まだまだある。
@Guest 24:12
ちょっとほんと結構探したんですけど、全然情報なくて、
@Guest 24:19
逆薬とサはほそ、そっか、そういうことですか。本放ネトキャッシュっていうのは、それこそ
@Guest 24:28
ここでいうキャッシュってのは、一致でのキャッシュということなので、いや、なんか使いこなせるかな
@Guest 24:38
ね。なんか、このレアルトサーワーコンポネに関して言えば、なんかしばらくネクストジェースが一気になりそうだなって予感が1番してるんですよね。
@Guest 24:49
なんか、はいはい、結構プロトコルとかなんかめんどくさそうだったというか、大変そうだった印象がありました。このリアクトサーバーコンポーネントのために、
@Guest 24:57
確かに
@Guest 24:58
そうそうですね、
@Guest 24:59
ネクストジースから力がないと、プロダクションレーダーもなかなか作れないんじゃないかな、みたいなそう。今でしたら、割と
@Guest 25:08
リアクトでssrやりたいって言ったら、とりあえずネクストジエーションになるじゃないですか。はいはい、一応ネクストジース使わなくて、リアクトでssrもできるけど、
@Guest 25:18
結構大変だみたいな。リアクトサーバー、コンポーネンツは、さらにそれの上を行く。難しさなんじゃないか、という気持ちがすごいしてるんです。
@Guest 25:27
そうそうなんですよ、単純に理とサーバーコンポンレンズをごす隠す環境ができるというだけでも、めちゃくちゃ
@Guest 25:36
強いですね。
@Guest 25:37
そうなんですよ、ま、ますます。ネクストジェースの強さというか、が加速していくな、という印象を受けました。
@Guest 25:47
いや、それはそうですよね。のサーバーリアとサーバーコンポリンス。単純にその環境環境というか、
@Guest 25:57
サーバーを用意するっていうところがまず大変な気がしますね。自分自慢で実装塗らないと
@Guest 26:04
無理っすね、あの、プロトコル喋るの絶対無理っす
@Guest 26:12
で。確かに、手元で動かしてみると、フライトというクりが
@Guest 26:23
言われるについてるところはそうですね。ここが一応リアクトサーバー、コンポーネンツの
@Guest 26:30
実際に返されるところって、
@Guest 26:34
なんかこれはジェイソンが帰ってきてるっていう感じですね。
@Guest 26:39
いや、これはジェイソンではなくて、あのリアクトサバーコンポのあの詳しくは、そのリアクトサーバー、コンポーレンスの会を
@Guest 26:48
ぜひ聞いてください。こここがジェイソンで、それがあの、これ今1つだけしか帰ってないんですけど、複数帰ってきたりします。
@Guest 26:57
このj0ってのが、あのミニファイされたコンポイントの名前です。
@Guest 27:03
あ、なるほど、なるほど、あち走よりも複雑なプロトコルで帰ってくるそうですね、そう
@Guest 27:09
そうです。いや、これ全然伝わらない
@Guest 27:13
ないと、
@Guest 27:15
ジゼとかm0とかなんか色々ありましたよね。ああ、m0だと、クライアントコンポーネント読み込みたいな
@Guest 27:23
命令でした。ああ、なるほど、そこでも区別があるんです。
@Guest 27:29
うん、
@Guest 27:32
すいません、この部分は皆さんぜひ焼くと、サーバー、コンポーネントソーマとか見ながら
@Guest 27:38
聞いてください。
@Guest 27:40
久々に見ておうみたいな、
@Guest 27:47
すごい。なんか、普通に逆トサーバーコンポーレンスでググったら2番目ぐらい出てきたそうなんすよ。
@Guest 27:59
コードスプリッティングの自動化っていうセクションですね、これ、多分見れると思います
@Guest 28:07
で、これがコンポーネント単位でキャッシュされるっていうことですよね。多分ほんとにそうっすね、
@Guest 28:17
いや、まあ、それは確かにできそうな感じがしますね。なんか、あの隊員としては、すごいコポイントっていうところで区切られてるので、
@Guest 28:27
デモーズだと、サスペンス単位で区切られてるっぽくて、サスペンスするところで、キーをあげて。
@Guest 28:36
はい、その一致してるキーもあったら、それを即返しちゃうみたいな。
@Guest 28:40
あ、何時っぽかったですね。
@Guest 28:42
で、さらに今あるネクストジーのisrインクリメンタルは、いさえ、サバーレンダリングがそのこん、
@Guest 28:51
コンポーネントのサスペンス単位で聞いてくるみたいなみたいなデモがありました。
@Guest 28:57
へええ、確かにサスペンス単位でキャスされるってのはすごい自然ですね。まあ、設計としてというか、
@Guest 29:06
そうですね、
@Guest 29:08
そう、サーバーコンポーレスてことは、まあ、サーバーでレンダリングされるものなんで、まある意味で。まあ、サーバーコンポーネントが多分サスペンドするみたいな
@Guest 29:18
扱いになってるんですかね、
@Guest 29:20
確か、そんな感じだったと思いますもう、ほんとにさらにこう段階を踏まれていくみたいな感じですかね。
@Guest 29:32
あ、あと1個。あの、これが流行って嬉しいなって思ったところで言うと、
@Guest 29:38
あのし、なんか知り合図を考えなくていいのが、個人的にはちょっと嬉しいかもしれないですね。あの、つまり、
@Guest 29:47
なんて言うんですかね。そのサーバーで取ってくるそのものって、1回ゲットサーバープロップスで
@Guest 29:53
ジェイソンとして吐き出せる形にしないといけないんじゃないですかね。それ、それの手間が1つ省ける。
@Guest 30:01
確かに確かにっていう
@Guest 30:03
っていうところはま、これは実装面では確かに嬉しいかなって思いますね。
@Guest 30:09
まないままそんなに困るっていうわけではないですけれども、その1個通されるところは考えなくて済むっていうところは、
@Guest 30:19
確かにいいかもしれない。あ、まあでもその代わりさ、サーバージェースを使うべきところとかは考えないといけないんで、あんまり
@Guest 30:27
どうですかね。
@Guest 30:29
個人的には、それ結構大きいメリットだなっていう風に思います。特にタイプ、スクリッシュ、ネクストジー使ってると、
@Guest 30:36
とりあえずなんかゲットサーバープロップスでしたっけ。6回を方にああして定義します。みたいなことやって、うん、実際のコンポーネントの側では、
@Guest 30:47
なんかとりあえず、そのプロップスに型をつけてるわけですけど、なんか、そこのその両者の方、
@Guest 30:56
ゲットサワープロップサー返している方と、同じページからエクスポートされたコンポーネントが受け取る方ってのは、同じっていうことは、
@Guest 31:04
ま、なんか、ネクストジェースのランタイムが暗黙になんか保証されしてくれてるみたいな感じになっていて、ちょっと
@Guest 31:11
一流じゃないなというか、完璧じゃないなみたいなことは思っていたので。
@Guest 31:16
まあ、サーバーコンポーネンツになると、まあ、タイプスクリートの行動の上では、そこはより明確になったりするのかなという。
@Guest 31:24
確かに確かにそうですね。そこ
@Guest 31:29
なんなんか1個挟んでる感じはしてたんですよね、ま
@Guest 31:33
からそうなんすよ。
@Guest 31:34
そうですね、ゲットゲットスタティックロップスをサポートしつつ、それが使えるようになるのが
@Guest 31:42
そうですね。今のところ理想ですね。それ以上最適化すべき余地は素人にはちょっと思いつかないです。
@Guest 31:52
うん、他にエトjs12なんかありましたっけ。urlインポーツははちょっと話しましたね。
@Guest 32:02
そのサンドボックスかっていうところは、気になる。
@Guest 32:08
1回ダウンロードしたら、ローカルにキャッシュしてくれるんですね。これ、urインポーズしたものって、
@Guest 32:13
あ、そうなんすか、
@Guest 32:15
なんかそれなんかネクストロックファイルを作って、それでキャッシュしてくれるんですよ。みたいな
@Guest 32:23
ネクストロなんかデロにもあったなと思って、最近ロックファイル作るのが流行りなのかな、みたい。
@Guest 32:28
確か、スノーバックもありましたね。あ、ありましたけど確かあのノートモジュールズ以下だった気がします。はいはいネクストロック。
@Guest 32:38
そうなんですね、ノードモジュールに入るわけではないんですね。それはそうか、
@Guest 32:45
確かにの文字に入るのはなんか違う気がしますね。urlからインポートします。って言われたら
@Guest 32:53
うん、うん。
@Guest 32:54
それも確かに
@Guest 32:55
のみたいな仕組みで。ネクストロックファイルっていうのを作るようになったんですね。
@Guest 33:00
これも試したいですね。ああ、画像のインポートとかもできるんですね。おお、
@Guest 33:07
これすごいっすね。インラインで入るんですかね。はいはいはいはいこれめっちゃいいっすねええ、
@Guest 33:12
すごい。なんかクローラとか作れそう
@Guest 33:21
までもそうですね。ま、基本的には安全なurlからダウンロードしないといけないので。
@Guest 33:30
えっと、urlインポーズでえっと、urlのえっと、ドメインとかは指定しないといけないんですね。他他は
@Guest 33:39
どうですかね。大丈夫ですか。イメージとか。
@Guest 33:43
これは地味に嬉しいっすね。
@Guest 33:46
avrのサポートされたっていうことですね。
@Guest 33:49
はいはいベッピーよりもいいんでしたっけ。エアあ、ラジオパース小さい
@Guest 33:56
おおあやれば小さくできるんだなと思いますよね。こういうの見ると
@Guest 34:00
なんかすごいそうですよね。なんか技術の進歩って感じがします。
@Guest 34:08
uvifcromeとfirefoxは、実は使えるんですね
@Guest 34:16
他は
@Guest 34:18
実はあともう1個ちょっと面白そう
@Guest 34:20
そうなのはい、どうぞ。どうぞおりまして。
@Guest 34:22
あの、ゲットサーバーサイドプロップスがはいを、えっと、ストリーミングしようみたいな
@Guest 34:31
みたいな。あの、セッションがあありまして、
@Guest 34:35
そこで、cromのcromのえっと、オーロラっていうチームの人が喋ってたんですが、
@Guest 34:43
うん、そこはいで
@Guest 34:44
ゲットサーバーサイド。まだこれあのrfc段階なんすけど、えっと、今までssr
@Guest 34:53
ssrしなければならない系のサイト、ssgはできない系のサイトで、lcpをもっと改善したいみたいなところで、
@Guest 35:04
ゲットサーバーサイドプロップスを実行するときにかかる時間、
@Guest 35:13
あの時間、つまりゲットサーバーサイはいわかりますいゲットサーバーサイドプロプスをこうストリーミングしちゃって、え、シンクにして、
@Guest 35:22
このページコンポーネントに渡すプロップもエイシンクにして、先に送れるとこだけストリーミングで送ろうみたい
@Guest 35:32
ていうrfがありまして、そこで結局できるのは、ヘッドの中だけ先に送って、
@Guest 35:42
とにあるスタイルとか、フォント系とかを先に読み込みしてもらって、ェースも配信しても、パースまで済ませておいて、
@Guest 35:53
で、
@Guest 35:53
サーバー側でゲットサーバーサイドプロップスの実行が完了したら、その連打結果を返して、ハイドレーションするみたいな。
@Guest 36:04
することによって、そのちょっとちょっとだけですけど、あの、lcpとfcpの
@Guest 36:11
タイミングをもっと前にずらせるっていう機能が新しく発表されてましたね。
@Guest 36:18
うん、うん、
@Guest 36:19
あ、なんかそれは多分、リアクト18のアルファの発表の時から、多分続いてる文脈な気がしてまして。そのリアクト18のアルファで、
@Guest 36:28
これ、なんかssrのストリーミングみたいな
@Guest 36:31
サポートするよってのが発表されてたんですよね。うん、なんかそこでまずに先になんかヘッドだけまずレンダリングして送って
@Guest 36:40
ま。その間、サーバー側でこうサスペンドしてるんですけど、で、そのヘッドヘッド以外の部分も終わったら徐々にこう。
@Guest 36:50
なんか、サーバー側で結果が得られたものから、順番にま。ストリーミングで、htmlをクラウント側に送っていって、徐々に
@Guest 36:58
レンダリングされるみたいな。はいはいはいは確かアと18のアルファの中で、まえ、ssrのストリーミングとして、そういう構想を上げられてまして、
@Guest 37:08
なんで、多分。それをネクストジェースで活用する方法として、ゲットさせるプロプス。じゃあ、シンクにすればいいじゃんみたいな、そういう流れになったなと思いま。
@Guest 37:18
なるほど、確かに、アサーバーコンポーネントが来るまでは、まだゲットサーバー、サイドロップスだと思うんで、
@Guest 37:27
そこに適応でき焼きで結構すごいですよね。
@Guest 37:31
そうっすね、ネクストjイスのリアクト18サポートの一環として、確かssrのストリーミングっていうのも来るんですよね。
@Guest 37:40
なので、それに加える形で、ゲットサーバー、サイドプロプスの変身かかっていうのがあると、かなり恩恵はありそうですね。確かに、
@Guest 37:49
それはえっとつか使えるものなんですかね、すでに
@Guest 37:55
どうなんすかね
@Guest 37:56
ど、どうなんですかね、あ、いや、でも確かにそこで切り分けるっていうのは、
@Guest 38:03
なんか全然まだプロダクションベリーじゃないから、フラグつけたらいけるんですかね。かなりには、あるみたいなノリなんですかね、
@Guest 38:11
なんか、今すぐネクスト順位でできることは多分ますでに、コンポーネントをちゃんと
@Guest 38:17
いい感じにサスペンドするようにして、このコンカレントフィーチャーズっていうフラグをオンにすれば、
@Guest 38:23
多分いい感じにストリーミングされると思います。ssrでも、ただそれと
@Guest 38:29
ゲットサーバーセルプロスの連携はままだrfc段階な。なるほど、
@Guest 38:35
なるほど、そういうそうっぽいですね、あ、もうあるんですね。ssrの1tpストリーミング。あ、
@Guest 38:43
ええそう。それはネクスト12で、はい、エクスペリメンタルですけど、出たんですよ。
@Guest 38:49
ここに、そのゲットサーバーサイドプロップスのタイミングでのえっと、ストリーグが始まるようにするっていうイメージですかね。
@Guest 38:58
ていうか、レッドサーバーサルプロクトの内容をまその実際のコンポネトたちがまフロミスとして受け取るようにすれば、あとは既存のサスペンスの
@Guest 39:13
確かにそれもそうですね。今でもできると言ったらできる。
@Guest 39:17
ゲットサブセルプロプスって、今、ノードジェイソンサーバーの中で計算されてま。ロードェースの中で直接受け渡されるから、プロミスとかも渡せるんでしたっけ。じゃあ、
@Guest 39:28
ページポンポーネントにあえあれどうなのかなあ、でも、クラウンドサイド
@Guest 39:35
でもペジコン、ポネトレンダリングさいからそれは無理か。
@Guest 39:39
そうですね。
@Guest 39:45
あ、じゃあ、ページコンポーネントにプロミス渡すには、やっぱりネクストジース側で、もうちょっとそういったサポートがじゃあ必要なんですかね。
@Guest 39:56
うん、うん、うん、うん、なんかそう
@Guest 40:00
なんかこ言葉で聞く限りだと簡単そうではあるけれど、かん単ではないですよね。そ、それがどのタイミングで送られてくるかっていう。
@Guest 40:11
いや、ちょっと。あの、これはこの件はあのrfcのリンクを後で送ります。っていうか、私も見ます。はい、
@Guest 40:26
ありがとうございます。
@Guest 40:28
私はまだああ、このrfcは読んだことがなかった
@Guest 40:34
ま。これはわかるんですけど、これはこれはわかるんですけれども、サスペンスというわけではないんです。
@Guest 40:45
ぽいですね、サスペンス使わなくても、ページレベルで似たようなことができるなどなんですかね。
@Guest 40:55
うんうん、逆にサスペンスだとは、
@Guest 40:57
プロプス全体が1つのプロミスでドンと来たら、なんかあんまりできることが少ないような。
@Guest 41:07
確かにあのもっとあれですよね。ク包に、その中、中身でページピップスを参照するイメージですよ。
@Guest 41:15
その方が細かい制御は効くと思うんですけどね、
@Guest 41:20
すいません、多分これは聞いていて、何のことrfcを見ながら話してます。
@Guest 41:30
すいません、ここはじゃあリンクをはい、貼りますので、あのぜひあのサーバーゲット、サーバーサイドプロップスの進化も
@Guest 41:40
注目していきたいと思います。はい、すいません、なんなの結論も出てないというところですね。はい
@Guest 41:55
はい、今回はですねえっと、ネクストj12について、だいぶグダグダになってしまいましたけど、も、えっと、3人で話していきました。
@Guest 42:06
LINEのフロントエンド組織UITでは、このような技術的なキャッチアップを日々行っております。
@Guest 42:12
UITインサイト以外にも、毎週の社内勉強会で、フロントイの情報交換を行っています。
@Guest 42:19
今後も、UIT INSIDEを通して、このような情報を外部に発信していけたらと思います。
@Guest 42:25
最後に、現在、第2株式会社では、インターン中途採用ともに大募集しています。
@Guest 42:31
ロボットキャストを聞いて、ラインに興味を持たれましたら、小のと1番下にある巨人ページから、ぜひアクセスしてください。
@Guest 42:40
それでは、おさん、せんしさん、ありがとうございました、
@Guest 42:42
ありがとうございました、
@Guest 42:44
ありがとうございました。
