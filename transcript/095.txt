@Guest 00:08
ユーザーインターフェイスと、テクノロジーを愛する開発者のためのウィークリーポート、ギスト、テインサイド。今週もやっていきたいと思います。
@Guest 00:16
今回はですね。私とえた田さんえ、スプリングレーニングさんのえ、2人ですねえ、ウェブパのチューニングについて話していきたいと思います。
@Guest 00:26
えた田さんよろしくお願いいたします
@Guest 00:28
よろしくお願いします。
@Guest 00:34
はい
@Guest 00:35
ええというわけで、最近結構テンサイドはなんか何かを紹介して、最近やった仕事を1つまとめて紹介するって話がまあ多かったかなと思うんですけど、ちょっと今回は経路を変えて、最近やってる仕事の話をしようかなと
@Guest 00:48
思っておりまして。
@Guest 00:50
はい、
@Guest 00:50
その一環として、ちょっと。最近あの前にUITミートアップ、えっと、6月ですかね。あえにやったitミートアップで、フロントエンドツーリングの話を結構していたかなと思うんですけど、
@Guest 01:03
あれから
@Guest 01:04
まあ1か月半ほど経って、はい、最近なんか、た田さんがウェブパックのチューニングを色々やってるっていうことで、なんかちょっと話聞きたいなと思って、今日はお時間いただきました。はい、
@Guest 01:15
で、ちょっとお聞かせいただければと思います。はい、
@Guest 01:19
そうですね、これはあの、まあ元々ちょうど7月末ぐらいからちょっと時間が空き始めたので、
@Guest 01:28
まあこうなんですかね。か、開発環境の改善とかやっていこうかなということで、まあ
@Guest 01:34
またまたまではあったんですけれども、そういうフロントエンドツーリングの分野のマイラップのチューニングができそうっていうところがあったので、そこに取り組んだっていう話ですね。
@Guest 01:45
で、まあ前提で言うとまeブバック4でえっと、ミードする。まあ、あの伝統的な
@Guest 01:53
ウェブアプリケーションがありましてですね。これがあの、まあ元々私が
@Guest 01:59
結構な関わってはいたんですけれどもま、最近そのプロジェクトが関わることなくて、最近、あの久しぶりにそういう関わりが
@Guest 02:08
できるっていうことになって、で、あのこう開発環境を立ち上げよう。久しぶりにやったら、尋常じゃないぐらい遅いっていう
@Guest 02:19
そうですね。そのバックデブサーバーを立ち上げ、大体6分から78分な
@Guest 02:27
ブレがあるんですけど、それそれぐらいかかるっていうちょっとやばかったですね。
@Guest 02:34
なんか、前こんな遅くなかったんですけど、知らないうちに、あの、もちろん私以外の会社がいっぱいいるので、かい。それ、色々こう
@Guest 02:44
増えていったのかなっていう気はするんですけど、それにしても遅すぎだろうっていうことで、まあこれを大体
@Guest 02:53
いいし、この1週間ぐらい取り組んでましたね。うん
@Guest 02:57
ま、ちょっと時間空いたからせっかくだし、
@Guest 03:00
改善している、はいっていう感じですね。なるほど、
@Guest 03:06
なんかどういうことやってたんですか、
@Guest 03:09
ええって書いてます。そうですね、はい、あのまあ、もちろん何かをビルをする、
@Guest 03:17
何に時間がかかっているのかなというところで、ちょっと。まあ、最初のなんて言うか、1歩がほんとはなんて言うんすかね。計測
@Guest 03:26
した方がいい。よかったんですけれども、なんかすごいなんて言うんですかね。その、例えば、esbドローラーとか。最近あの早くなりそうみたいな話も
@Guest 03:36
やりましたし、なんか、手取りバイクはしくなりそうなところがいくつかあったので、それをまあ、手当たり次第にやっていったっていうのが最初ですね。
@Guest 03:46
ああ、はい、
@Guest 03:47
そうそうなんですよで、結構
@Guest 03:51
あのまあさっき言ってたesbトローダーとかも。まあ、とりあえず導入してみようっていうことで導入してみたら、
@Guest 03:58
まあ、ちょっと早くなったってぐらいですね。で、ただ
@Guest 04:03
まあ1分ぐらい体育館として短くなって、確かに早くなるなとは感じたんですけど、まあ、そんなに1分って6分に対して
@Guest 04:12
対してそんなに体感として
@Guest 04:15
変わらないなっていう。まあ、あの、もちろんこれも導入しても良いとは思うんですけれども、まあ、もっと別のところが原因があるんじゃないかとか。
@Guest 04:24
あとは、まあ大体こういう時のセオリーというか、上等手段としてこう並列化とか。あと、
@Guest 04:33
なんかこうキャッシュとか、そういったところがあると思うので。はい、それをこう順番に試していった感じですね。あとは
@Guest 04:40
で、例えばまあ、あのスレットローダーっていう、その並列化のためのえっと、ローダーがあるんですけれども、それを使ってみたら、
@Guest 04:51
そんなに変わらないな、みたいな。スレットローダーを導入してみて、あんまりあの感じなかったっていうところなんですけれども、まあ、これ
@Guest 05:01
はまやる前からちょっと薄うは感じていたんですけれども、あんまりそのウェブファックの平でって、
@Guest 05:09
結構あの限定されてるかなと思うんですよ。その依存が依存をこう、あの、最初に見つけないといけないっていうところがあって
@Guest 05:19
っていうところで、そのスレットローダーっていうのは、その複数こう。あの、ローダーを
@Guest 05:25
があった時に、それをあのワーカーで別のワーカーに逃がすっていう感じの動きだったんですけど、そもそもあの、そんなにあの手の込んだあの、バックの設定とか入ってなかったですし、まだ単純に
@Guest 05:38
数が多いからっていうところで、多分そのオーバーヘッドの方が、
@Guest 05:44
そのそれとをアーを立ち上げるためのオーバーヘッドがあったりとかして、全然あんまり効果なかった。ああ、なるほどね、はいっていう
@Guest 05:52
単純に1つのローダーがま閉めている時間がそうあ、そのコはコードが増えるにあたって線形に増加してて、そこが重かった
@Guest 06:00
というとこです。
@Guest 06:03
あ、そうですね、まあの規模間で言うとですね大体そのページ数単位で言うと10数十ぐらいあって
@Guest 06:12
で、まあファイル数もあとそうです。で、ペンデンシーもちらっと見たら2万5000とか、ページ数ほうほう
@Guest 06:21
ていう感じだったんで、まあ、単純に数が多いから遅いんだろうなっていう予感ははしていたので、多分難しいだろうなっていうとこでした。
@Guest 06:31
で、あとキャッシュですねキャッシュははい、もう最初ビルド遅いのは諦めて、まあ、それを
@Guest 06:40
あの基本的にウェブバックって、そのキャッシュしない方針だと思うので、それをあのキャッシュする方針に、
@Guest 06:47
あのデベロップ環境ではやろうっていうところ、はいはいはい、あとはこれは
@Guest 06:54
まああのキャッシュキャッシュウェブパックで検索して、出てきたキャッシュオーダーを導入したり。っていうところで、ま、これもあんまり
@Guest 07:02
差はちょっと感じなかったですね。ちょっと原因までは調べてないんですけれど、
@Guest 07:06
あ、初回だけじゃなくて、差分も結構そんなに有意な差はキャッシュでは。
@Guest 07:10
そうそうですね。はいすね、うんていうところで、まあ、あとはその
@Guest 07:19
キャッシュがあんまりその聞いてないんじゃないかなっていう。そのキャッシュローダーの導入したところでは、はいてい
@Guest 07:29
ま。これもあんまりよくないんですけど、そのそうそういう想像をして、で、あの、そのさ、あの
@Guest 07:38
こう手動でキャッシュをするっていうのを、はいはいはいいのだしました。で、これはどういうものかと言いますと、そのまページの中がその
@Guest 07:48
ダイナミックインポートで、このあのコンポーネント単位で分かれてるんですけれども、例えば、その
@Guest 07:55
開発中って、その複数のコンポーネントを同時に開発するってことはなくて、
@Guest 08:00
まあ、ある1つの梱包についてこう、フィーチャーをあるフィーチャーを追加するっていう。はい、流れになっているので、ま、それ以外のあの
@Guest 08:10
フィーチャーのコンポーネントは、もうあらかじめそのビルドしておくっていう形
@Guest 08:16
をやっていて、ま、それをあの手でやあの、そのコンポーネントだけをビルトするっていう、あの、ウェブパックの設定をもう1つ用意して、で、
@Guest 08:26
その後にえっとまリゾルブのエリアですね。エリアで、あの、はい、そのリードした先のえっと、バンドのバンドラーをお読みこえー指すように設定するっていう
@Guest 08:37
のをやってみてま。これが大体2分ぐらいになりましたね。はい、なんで、
@Guest 08:45
まあ、やっぱり単純に数が多いので、1度ビルドしたものを、あの残しておくっていう方針がやっぱり良いっていうところは、ここでわかりました。
@Guest 08:55
で、そうですね、ま、なかなか
@Guest 08:59
今今まで結構なんて言うんですか。推測でこう色々あのあてずっぽにやってきたんですけれども、多分ほんとは良くなくて、
@Guest 09:08
はいはいはい、
@Guest 09:09
そうですよね、あの、このこの時に結局計測をしようというところになりましたね。
@Guest 09:16
割と今時系列で話してるんですけれどもで、え
@Guest 09:22
と、あ、でもなんかあれですね。あの、結構初めから計測しようって思うと、多分1週間で終わらないとすぐになっちゃったりするんで、そういう意味では、
@Guest 09:31
とりあえず試行錯誤してみてま。有意な戦略があるとわかってから、ちゃんと継続して戦略的に
@Guest 09:37
やり出すっていうのは、はい、全然なし、あの、なんでしょう。理想ではないかもしれないけど、実際仕事上でこういう
@Guest 09:43
開発環境の改善ってできる時間。はい、限界があると思うんで、そん中だと割と
@Guest 09:48
妥当な戦略かもしれないですよね。あの、もちろん最後まで計測しなかったらダメなんですけど、まずは計測せずに。はいはい、思い当たりそうな手法はやってみて、うまくいくのであれば、そこから
@Guest 09:59
論理的に潰していくみたいなのは、結構全然業務だ、悪くないかもしれん。そう
@Guest 10:06
ですよね、今回とかだと、特にその1回の思考が6分っていうことになってしまうので、
@Guest 10:14
単純になんか試せるものを試した方が早いんじゃないかなっていう。
@Guest 10:19
そうですね、うん、
@Guest 10:21
感じにはなってたんですけど、まあでも今思い返すと、やっぱり最初に計測した方がよかったな
@Guest 10:31
ところですね。うんで、これあのま計測、結局やることになってですね。
@Guest 10:40
で、えっと、ま計測
@Guest 10:44
で、例えばそのウェブパック計測でググったら大体そのバンドルサイズに関する計測う情報
@Guest 10:53
がメインなんですよ。で、まあ、もちろんそのバンドルサイズを減らすっていうなると、多分、皆さん最初にバンドローナライザー入れて、
@Guest 11:01
あの計測すると思うんですよ。ただ、ビルド時間の計測って、実際どうすればいいんだっていうのは、
@Guest 11:08
これも割と時間かけて調べたんですけれども
@Guest 11:12
さい
@Guest 11:12
ま、結局あの、そのノードのインスペクター、あのレバッカーをこうタッチして
@Guest 11:20
やるっていう。そのノートのはいはいはい、機能を使う形になってで、えっと、
@Guest 11:27
ノードインスペクトでぶパッと立ち上げて、で、クログのデブツールをアタッチしてみたいなっていうところまでは
@Guest 11:36
やったんですけれども、これ、あの、ちょっと
@Guest 11:40
これもまだ原因に掴めてないんですけど、そのノードのあのけ、あのビルドまで、あの、そのレコーディングはできるんですけど、レコーディングを保存するタイミングで、黒が必ず落ちるっていうも。
@Guest 11:52
なるほど、
@Guest 11:54
ちょっとよくわからなかったんですけど、cromは負荷に耐えられなかったのか、
@Guest 12:00
なかなか面白い現象ですね。
@Guest 12:02
そ、そういう感じですね、結構辛い状態になってますね、
@Guest 12:06
辛いっすね、もう私なんかバンドル系の時間とか、ビルドル系の時間とか、あと、テストの時間とか測るとき、なんか結構めんどくさくて、あの、
@Guest 12:15
実行結果として出てくる時間をなんかもう10回ぐらい10回ぐらいずつ実行したら平均取れるだろう。はいはい、はいちゃいがちで、サボっちゃいがちなんで、なんか、ちゃんと
@Guest 12:25
ノードインスペクト使うだけでも、すごい
@Guest 12:28
ちゃんとして。いやいや、これはほんとにあのが、あの、頑張って調べようと思ったから、そうしてるだけかも。
@Guest 12:36
そうなんだかんだで、最近のツールって時間表示してくれるんで、なんかそれでサボりがちになっちゃうんですよね。
@Guest 12:43
ま、でも、それがそれが有効な場面とかもあるかもしれないですね、例えば、例えばそうですよ、その定期、定期的に計測するとかだと。
@Guest 12:53
ああ、そうですね、
@Guest 12:55
なんて言うんですかね、こう、実際の環境に寄せた方がいいみたいな。うん、うん、うん、うん
@Guest 13:00
こともありますし、そのインスペクトをアタッチすることによって、遅くなる時間とかもあるかもしれない。ま
@Guest 13:07
あまあまあそうですね、
@Guest 13:08
そこなんで
@Guest 13:09
まこん。今回みたいに、そのほんとに原因を追求するみたいなケースだと、まあ、ちゃんと認識とやった方がいいっていうとこですね。うん、
@Guest 13:19
いや、でも、ちょっとcomのインスペクターが死んじゃうのはちょっと厳しいので、こっちは対処していきたいですよね。
@Guest 13:25
そうですね、これはちょっとまだけ結論出ないんで、もうこの話は
@Guest 13:33
了解です。まあ、なんかまた続報あったら、はい、
@Guest 13:36
聞かせてください。はい、了解です。はい、
@Guest 13:38
いや、でも1回10個あたり6分かかるって考えると、やっぱりそのイデレーション回しづらいっていうのがあるんで、こう継続じゃ継続してたら、1日とか2日終わりました。っていうのになると、やっぱり厳しいよなってなっちゃうんで、
@Guest 13:50
なんかまあまず思い当たる会双方があるなら、試してみるってのは全然あれかもしれないですね。
@Guest 14:01
それにしても結構あれなんですね、あの、1回ビルドしようと思うと、自分が触るところ以外もなんかは多分
@Guest 14:09
そのここしか触らないってことは、いわゆる。あの、なんかマイクロサービスみたいなとか、モノレポみたいな。1個1個の機能が独立してる状態のはいになってるのかなと思うんですけど、それでも結構全部ビルドするように。今なってるんですね。
@Guest 14:22
あ、そうですね、これはあのなんていうんですかね。そのまもりぽみたいな感じにはなってるんですけども、最終的のは、ビルドはその
@Guest 14:30
こうセントラルな感じになってきて、はい
@Guest 14:34
はいはいはいはい、なるほどなるほど、なんでビルトだけま。コードベースジョンは結構モレポで分かれて綺麗だけど、ウィルトが結構重いって感じだったんですね。うん、
@Guest 14:43
そうですね、あ、
@Guest 14:45
なんか初めからうまく分割する前提で決めるといいかもしれないですよね。
@Guest 14:50
そうなんですよね、それもやりたい
@Guest 14:52
なんか。でも、あの、ウェブパック使ってるプロジェクトってことですし、なんか、ウェイパックファイブで入る。なんか、モジュルフェデレーションとか、うまく使えると、
@Guest 15:01
ビルドを切り分け、はいはい、うまくこう取り扱えるみたいなのが出てきそうですし、なんか1回そういうのもチャレンジしてみてもいいかもしれないですよね。そういう
@Guest 15:10
状態だったらなるほど、なるほど、あ、そうですねあ、あともう1つあの試したのがあります。えっと、ルファック5にああげるっていう方針ですね。これ、
@Guest 15:20
あの、最初にwebpをあの導入しているっていう話をしたと思うんですけれども、
@Guest 15:28
まあ、エファック5にあげたら早くなるんだろうな。というのは、最初から頭の片にはあったんですけれども、あんまりはいはいはい、
@Guest 15:36
それをやるための時間がどれぐらい必要なのか、ちょっとわからなかったんで、こう避けてたっていう。
@Guest 15:44
まあ、ちょっとコストかかりますもんね。体感的はい
@Guest 15:48
という感覚があって、で、あの、これはほんとに昨日とか、
@Guest 15:55
昨日の夕方とかで試したことなんですけど、ほんとにウェバック5にあげるっていうのもこれも試しました。で、これあの
@Guest 16:05
結構あの効果があってですね。多分ほんとにウェルパックファイブのり載せ替えるだけで、2分半ぐらいには。はい、
@Guest 16:14
縮まりましてですね。なんだかんだ試したんですけども、やっぱりウェブファイブあげた方がいいんじゃないかっていう
@Guest 16:23
のは、それも思いつつありますね。なんで、ウパックファイブを採用してそうですね、ウパックファイブキャッシュも、デフォルトでフォルトというか、その
@Guest 16:33
あの公式に適応しているはずですよね。
@Guest 16:37
そうですね、確か提供してる
@Guest 16:39
はずです。はい、あ、そうですね、パーシステントキャッシングとビルトした情報を、まあ、そのキャッシュファイルシステムに
@Guest 16:47
キャッシュするっていうところはあったはずなので、ま、これをやれば、さっきのそのキャッシュ戦略とかも合わせて早くなるんじゃないかな、という
@Guest 16:57
ところははいあります。これは現在進行形ですけど、これでなんとか終わらせたい
@Guest 17:09
までもなんかあれですね。こう結構やっぱりみんなイエス、ベルドローダーとか。ああいうのを入れると、なんかこう早くな
@Guest 17:17
なると思ってるとか、早くなってほしいと思ってるじゃないですか、やっぱり、あのパッケージを入れたら、解決するなら、したいっていう気持ちにすがっちゃいますけど、なんだかんだで
@Guest 17:27
そういうわけではないし、ただ、一方でちゃんと技術をアップグレードしたら、ちゃんと技術の進化、我々の現場に
@Guest 17:35
コフィットするように。そうそうなんですよ、
@Guest 17:37
進化してくれるんですね、
@Guest 17:40
難しいのが
@Guest 17:42
これだ。あの、まあ遅いのはこういう理由だからっていうのが全然、そのあの環境によって全然違うっていうところがあって、あ、
@Guest 17:51
あですよね。
@Guest 17:52
今回の例だと、ほんとにその数が多いので、複合的なあの作戦をとるっていうところに
@Guest 18:00
なってくると思うし、まあ、もちろん、そのesウィルドローダーを導入したら、めちゃくちゃ早くなるっていう環境もあるので、
@Guest 18:10
なかなか一概にその回答ができないっていう辛さがある
@Guest 18:16
そうですね。なんか
@Guest 18:18
ととることができる戦略を列挙することはできても、どれが効くかっていうのは、現場により切りなんで、どれが効くような課題感なのかっていうのを
@Guest 18:26
正しそうそうそうに対する必要がありそうですよね。あの、まだいぶ
@Guest 18:33
こうは飛躍した話かもしれないんですけど、この大学、私が大学院の時のなんか、このdプラーニングのハイパーパラメーターの調整とかも、なんか
@Guest 18:43
そのなんていうかね。そう、色んなこうパラメーターがあって、で、それをこうオンにしたり、オフにしたり、これぐらいの数字にするみたいな。そういう調整みたいなの
@Guest 18:52
をちょっと思い出しましたね。なんか、これをやったら早くなる、これをやったら遅くなるってのがわから。まあ、それはわかるんですけれども、
@Guest 19:02
いったいどれぐらい試せばいいのか、みたいな。でも、やっぱりこれをそこの戦略を取るためには計測するしかないですね。
@Guest 19:11
ていうことだと思いますね。
@Guest 19:17
なので、できるだけたくさんの引き出しを用意しつつ、まあ、それに合った戦略を取れるように計測していって、
@Guest 19:24
はい、
@Guest 19:25
実践していくっていうのが
@Guest 19:27
1番な気はしますね。すごい地味な感じ、結論になってしまったんです。
@Guest 19:33
なっちゃいましたけど、まあまあでも多分みんな仕事は
@Guest 19:38
こう
@Guest 19:39
こうなるかなっていうのはあると思いますね。うん、まあ、でもなんか最近ちょっと話飛んじゃい
@Guest 19:46
ちゃう感じもしますけど、最近、フロントエンドってなんかアクセシビリティとかもそうですけど、
@Guest 19:51
なんか、こうちゃんとやるものは、まあちゃんとやりましょう。っていう話が増えてきてると思うんで、なんか、こういう足回りとかもちゃんと継続して、ちゃんとアットスリューションを使いましょう。っていうのは、
@Guest 20:01
まあ、最近みんなが思っている仕事のやり方になってきてるのかなと思いますね。なんか、フレームワークの話みたいなん
@Guest 20:10
ま、そういうこうキャッチーなものは減ってきてますけど、なんかみんなこう。白しにタイリングとか、アクシビティとかに取り組んでる感じがあるんで。
@Guest 20:19
そ、そうなんですよ、うん、
@Guest 20:21
なんか大切なま地味だけど、大切なことな気はしますね。
@Guest 20:26
多分、フロンフロントエンドツーリングとかの話も、多分、ほんとに興味ない人が興味ないんだろうなとはなかなか思うんですよね。そういうキャッチーな
@Guest 20:38
新しいフレームワークとか、そういうのを求めがちかもしれないんですけれども、
@Guest 20:45
そうっすね。なんか、それで解決する方が楽しいかもしれないし、それが解決で解決してほしいという。やっぱり祈りもあるとは思うんで。
@Guest 20:55
ですけど、まあ、なんだかんだ地味なものがうまくいくっていうのはありますよね。
@Guest 21:02
そうですね、これは
@Guest 21:04
なんか永遠の辛いな
@Guest 21:14
えーではえ、というわけでえ、今回はですねえ、ウェバックチューニングについて、たださんに詳しく話を聞いていきました。
@Guest 21:22
ラインのフロントエンド組織UITではえ、このようなフロントエンドに関するえ、意見交換や、えっと、え議論など日々行っております。
@Guest 21:31
社内でえ行われている議論や、えっと、企画から生まれたものをえ、イテンサイトで公開していることもありますので、え、これからもぜひぜひ聞いていただければと思います。
@Guest 21:42
またえ、この意外にサイドを聞いて、ラインに興味を持っていただいた方は、えぜひぜひカジュアル面談からでもえ、やりましょう。え、シノートの再花の方
@Guest 21:51
ですね、球人の方のリンクを貼っておりますので、えぜひ、そちらからご連絡いただければと思います。
@Guest 21:57
今ですとえズムによるカジュアル面談を行っておりますので、え、時間や場所問わずえできるかなと思います。
@Guest 22:06
というわけで、今回はえ、玉田さんとともにルバックのシーリングについて話していきました。え、今回はありがとうございました、
@Guest 22:14
ありがとうございました。
