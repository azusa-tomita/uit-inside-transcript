@Guest 00:04
皆さん、こんにちは、UITのpotato4dです。ユーザーインターフェースと、テクノロジーアする、開発のためのウィークリーポッド、キャストUIT INSIDE。
@Guest 00:13
今週も始めていきたいと思います。
@Guest 00:16
今回はですねえービーのデファイン、カスタムエレメントについてえ、収録していきたいと思っております。今回はバリバリ使われているというえや本さんにお話しいただこうと思っております。えやさん本日はお願いいたします
@Guest 00:29
はい、よろしくお願いします。
@Guest 00:33
では、今日は早速なんですけどえ、今回山本さんの方からですね。結構ビのリファインカムエレメント。使ってみたんで、ぜひやサイトで紹介
@Guest 00:43
したいっていう話でえ来ていただいたんですけど、まあ、せっかくなんでまずはえ。ディファイン、カスタムエレメントについての概要から教えていただいてもよろしいでしょうか。
@Guest 00:53
はい、わかりました。ディファインカスタメルメントは、ビーのv3.2でリリースされた機能で、
@Guest 01:01
ビューのコンポーネントから、ウェブコンポーネンツを出力するためのAPIです。
@Guest 01:10
で、元々えービーv2でも、同等の機能を提供するための外部パッケージがあったんですけれども、
@Guest 01:20
今回v3にあたって、コアAPIとして提供されるようになったっていう構造になってます。
@Guest 01:28
で、使い方としては、シンプルな関数が1個提供されていて、それがディファインカスタムエレメントなんですけれど、
@Guest 01:38
そのディファインカスタムエレメント関数に、
@Guest 01:42
えービーコンポーネントを渡して帰ってきたhtmエレメントはいを
@Guest 01:48
まあ、普通にwebコンポーネンツ用の定義と同じように、カスタムエレメンツディファインに渡して使うっていうような
@Guest 01:57
感じですね。
@Guest 01:58
なるほどな、
@Guest 02:01
基本的にあれなんですね。あの、もうこの関数を通すことによって、普通のカスタムエレメントと同じように、あの取り回せるようになるような。
@Guest 02:11
そうですね。で、あの、いわゆるwebコンポーネンツの場合、そのアトリビューとかま色々あるわけですけど、それをあのこの関数で、その
@Guest 02:19
ビューコンポーネント側のプロップスとか、エミットとかにいい感じに変換をして使って使えるようになるっていう感じですね。
@Guest 02:29
で、結構インターフェースもまあ、ビーのミイティブなというか、ビジの機で書くだけでまうまくあのカスタムエレメントらしい立ち振る舞いというか、挙動に
@Guest 02:38
そうそうそうそうそうですね、まあ、えっとま後で話そうかと思ったんですけど、まあ、色々ちょっと気にしなくちゃいけないポイントもいくつかある。
@Guest 02:46
ですけれど、まあ、基本的にそう。あのビーで作ったコンポーネントを、ビューの外側でも使い回せるっていう機能ですね。
@Guest 02:56
じゃ、結構あれですね、あのビー以外の技術を共存させたい場合とか、まな何かを切り出したりとか、そういう時にかなり使える
@Guest 03:03
そうですね。感じですかね、
@Guest 03:07
あ、ありがとうございます。なんか、この機能って、結構
@Guest 03:10
こう使うケースがそんなにめちゃめちゃ多いわけじゃないかなと思うんですけど、なんかこれを調べたり、使ってみようと思ったのって、なんかどういうきっかけがあったりしたんですかね。
@Guest 03:20
あ、あ、元々のきっかけは、今回僕が紹介しようと思ってたプロダクトの事例というか、
@Guest 03:29
はい、きっかけなんですけれど、あの、僕が今担当しているのがLINE公式アカウントっていうプロダクトで、
@Guest 03:37
そのそのうちのクーポンに関する機能を開発するところなんですね。はいはいで、
@Guest 03:44
このクーポンっていうのは、そのお店がクーポンを発行して、ユーザーに配布することができるっていう公式アカウントの位置機能なんですけれども、はい、あのお店
@Guest 03:54
のお客様がクーポンを作ってで、LINEアプリのユーザーがそのクーポンを見るっていう構造になっていて、フロントエンドは
@Guest 04:04
そのお店側が使うプレビューと、あのお店のお客様
@Guest 04:11
がはい、使う。そのクーポン自体の画面っていうので、2つあるような構造になってるんですね。はい、で、今回そのクーポンのuiをリニューアルするっていうことが
@Guest 04:23
要件があって、開発することになったんですけれども、
@Guest 04:29
さっき言った通り。そのプレビュー画面と、LINEアプリ内で開くクーポンの画面って2つあって、元々がそれぞれあのプレビューなので、同じ見た目をしてるはずなんですけれども、それぞれ独自で実装してあたんです。
@Guest 04:44
はいはい
@Guest 04:45
で、まあえ、それはそれで、もちろん昔にそういう背景があったわけなんですけど、今回ちょっと
@Guest 04:51
できればちょっと開発工数というか、メンバーの都合等等で、ちょっとコンポネットの使い回しとかをしたいよねっていう
@Guest 04:59
話が出て、初めて、ここでこの機能に見つけてやってみようかなっていう話になりました。でっと、
@Guest 05:08
cエプレビューを表示しているお店がうcmsはビ2で実装されている。結構おっきいプロダクトなんですけど、
@Guest 05:18
今回oエクーポン、新しいプロダクト。あ、uiリニューアルするっていうことで、ま、p3でやりたいよねっていう話になって、
@Guest 05:27
じゃあ、ビーのコンポーネントをそのまま出力するんじゃなくて、webコンポーネンツで出力して、プレビューとして組み込もうかっていうところで、
@Guest 05:36
どんどん調査を調べて進めていったっていう感じですね。
@Guest 05:41
なるほど、なるほど、じゃあ、あの、ほんとに画面のパーツっていうのをまい、コンポーネントうまく共通化したいっていう時に、あのウェブコンポーネントが
@Guest 05:51
として定義できるんじゃないかっていうので、ま、ちょっとやってみることにしたっていう風な。
@Guest 05:55
そうですね。で、結構これリリースタンが3.2いつだったかな。
@Guest 06:00
夏頃ぐらいだったと思うんですけれど、はい、あの、それまではできなかったんですよね。元々外部のwebコンポネを出力するため用のガイブのライブラリがあったんですけど、それはv2用で、
@Guest 06:15
あのv2だからv2にあるAPIを使ってこうウェブコンポーネント内にビーをマウントして、レンダリングしてるので、
@Guest 06:24
あのv2だv3だとできなかったんですよ。あ、
@Guest 06:29
なので、えとは言っても、ウェブコンポーネントで出力したいし、どうしようかなって言って、コントリビュートしようかどうしようかとかま色々やってたんですけど、はいまあ、都合のいいタイミングで、
@Guest 06:39
あの正式リリースがされたので、よしこっち使ったでっていう感じですね。なるほど、なるほど、
@Guest 06:46
こうなかなか悩んでいたところに、ちょうどu3サポートも来て、タイミングとしてはベストだった。
@Guest 06:52
ああ、そうそうそうそうそうだから、結構前のv2用のライブに実装を読んだりして、ああ、これじゃあ3で5感動しようとか、
@Guest 06:59
なるほどな
@Guest 07:01
あ、めんどくさいな、どうしようかな、みたいなコントビートしようかな、みたいなことを色々やってましたね。
@Guest 07:05
ちなみに、結構UIT INSIDEだと、ビーの話を色々してるんで、結構聞いてくださってる方も詳しい方多いのかなと思うんですけど、なんか、ビューのそのビュー2版のえ、実装とビュー3版の実装って、そのどういった違いが
@Guest 07:20
あるんですかね。ディファインガスのエレメントについては、
@Guest 07:22
あ、そうですね、v2に関しては、はい、結構シンプルで、そのウェブコンポーネンツのシャドールート
@Guest 07:32
に対して、普通にニュービューしてマウントするっていう感じ。普通のに、ビューアプリをシャドールート内で描画する
@Guest 07:42
ていう感じになってます。はいはいはい
@Guest 07:45
なので、そのv2版のディファインカスタメレメントだと、ビューのオブジェクトと、ビューのコンポーネント両方渡して、普通に動画してねみたいな。あ
@Guest 07:56
ことになってですね。んで、今回のv3の方にあたって、結構あの子はAPIらしいなっておも
@Guest 08:05
たんですけど、あの、いわゆるクリエイトアップをして、新しいビーのアプリを描画するっていう感じではなくて、はい、あの、
@Guest 08:13
内部のAPIなんですけど、そのランタイムコアパッケージのレンダラメソッドに渡して、
@Guest 08:20
vノードを描画、あvノードをャドルートに描画するみたいな構造にあ
@Guest 08:28
なってるんですね。なので、ちょっとクレートアップをせずに、そういう内部のAPIを使って描画すると、この糸とかちょっとわかんなかったんですけど、
@Guest 08:37
まあよりコアAPIを直接呼んで、こう動かすみたいな風になってるので、まあ、内部パッケージコアAPIの1つらしい構造になったなと。
@Guest 08:47
確かに確かに
@Guest 08:50
そういう作りに変わったんですね。うん、あ、でもこれは確かにこれまでと違ってかなりあのビーチのランタイムの方が、コアとドム用の実装で、パッケージとして分かれたりとかがあったんで、うん、うん、こういうこうなんでしょう。中小
@Guest 09:04
化した上で使いやすくなったっていうのがこう、なんか、ビース自体が進化してるからこそできることって感じ。
@Guest 09:10
そうですね。うん、ちゃんとパッケージで分かれてるから、あの、そういうレンダラみたいなインターナのpも呼びやなってるんだな、
@Guest 09:17
ありがとうございますなんか、そう考えるとあれですね、ちょっと自分で実装しようかなと悩んだって話もありましたけど、なんかすごくこうスマートに実装されてるんで、
@Guest 09:26
いいタイミングで来てもらってよかったかは
@Guest 09:28
ちょっとあります。うそうそうそうですね、うん、
@Guest 09:32
あとあ、ありがとうございます。
@Guest 09:36
じゃあ、せっかくなんで今え少し話してもらいましたけど、なんか詳しくこのAPIをえ、どういった事例で使ってどうだったみたいな話を聞いていこうかなと思うんで。
@Guest 09:45
さっきのプレビューの話の詳細を教えていただいてもよろしいでしょうか。
@Guest 09:51
はい、ちょっとプレビューの説明の内容が重複してしまうかもしれないんですけれども、
@Guest 10:00
私が担当しているのが、LINE公式アカウントというプロダクトで、そのうちのクーポンに関する
@Guest 10:09
ものが、今回の事例です。と
@Guest 10:12
で、LINE公式アカウントは、え、お店とか、企業とか、自治体とかのお客様が。自身のLINEアカウントを開設して、LINEユーザーとコミュニケーションを取ることができるっていうものなんです
@Guest 10:23
けれども、そのうちのお客様と、ユーザーのコミュニケーションする手段の1つとして、クーポンというものがあります。
@Guest 10:30
で、僕はそのうちLINEアプリを使っているお客様が使用するクーポン
@Guest 10:38
の画面。リフアプリを開発しているものです。
@Guest 10:44
でえ、クーポンはフロントエンドが2種類ありますと
@Guest 10:49
で、1つがその私が担当しているLINEアプリユーザーが使ってるクーポン画面でえ、もう1つがお店
@Guest 10:58
の人がクーポンを編集するためのプレビュー画面、cmsの機能があります。
@Guest 11:05
で、今回このプレビュー画面を構築するにあたって、私が担当しているクーポン画面
@Guest 11:13
のビーアプリから出力したwebコンポーネントを使いました
@Guest 11:19
なので、えでクーポンには、クーポンの情報とか、クーポンコととか
@Guest 11:25
ま、様々なクーポンを構成するためのパラメーターがあるわけなんですけど、
@Guest 11:30
そのパラメーターを受け取って、実際のクーポン画面を描画するようなウェブコンポーネンツはなってます。
@Guest 11:38
じゃあ、アトリビューとかで受け取ってみたいな、そうそうそうそう
@Guest 11:42
そうです。なので、ビーコンポーネント側からすると、結構な数のプロプスが
@Guest 11:48
はい、定義されていて、あまり状態を持たないようなクーポンコンポーネントがあって、
@Guest 11:54
で、それをビーアプリ側でそのプロプスに値を渡すような構造になっています。なので、あんまり状態を
@Guest 12:02
持っていないビーコンポーネントをプレビュー用に、ウェブコンポーネントとしても、出力して、cms側に組み込んでもらうっていう感じですね。
@Guest 12:12
で、元々。今これ2つフロントエンドがあるって話をしたんですけど、元々それぞれで実装をしていたので、まそれぞれで開発してて、大変っていう構造だったんですけれども、
@Guest 12:24
今回リリースにあたって、片っぽ。僕が担当してる方
@Guest 12:29
で、ビーのアプリをあ、ビューのコンポネットを実装して、それを使います。っていうことができたので、結構効率よくできたなと
@Guest 12:38
思って、今回ちょっと共有させてもらいました、
@Guest 12:40
ありがとうございます
@Guest 12:42
あ、ちなみにそれ共通か片方で、カスタムエレベントとして用意して共通化するっていう形でじ無事。今、プロダクションに乗ってるみたいな状態なのかなと思うんですけど、はい、あのです
@Guest 12:53
結構あれですか。なんか、共通化するにあたって、デファイン、カスタムエレメントしたものを使うにあたって、何かハマりどころとかは
@Guest 13:01
あんまり多くはなかった感じですかね。
@Guest 13:05
そうですね、まあ、いわゆる使い回しをする上で
@Guest 13:10
まよくあるのが、そのバンドルサイズみたいな。ああ、そうですね、ところと、まあ、単純にそのディファイン、カスタムエレメントのAPI上のハマりどころみたいな
@Guest 13:20
ところはありました。まあ、単純にまあ再利用する上での、まあ、トレードオフみたいなとこもあるわけなんです。
@Guest 13:27
えで、ディファイン、カスタムエレメントのAPIに関して、ちょっと困ったなっていうところが2点ほどあって、はい、
@Guest 13:36
それがそのプロプスビービー側のプロプスの扱いと、そのビューポンポビーのシングルファイル、コンポネットが持ってるスタイルの扱いがちょっと個人的にうんってなってしまった
@Guest 13:49
ところなんですね。で、このAPIを使い始めるにあたって、ちょっと期待していたのが、
@Guest 13:56
ビューテプロプスをこうjsで表現をするので、はい、
@Guest 14:01
リアクトと違って、そうやってjsで表現をするから、そのwebコンポーネンツにこう変換バインドするにあたって、そのプロプスのタイプ
@Guest 14:10
を見て、こういい感じに変換してくれるのかな。みたいなものをちょっと期待していたんですけど、い、
@Guest 14:16
ちょっとそういう感じでは、今のところなさそうで、うんっていうことがありました。でっと具体的に言うと、ウェブコンポーネンツhtmlの世界でのアトリビューって値は基本文字列なので、
@Guest 14:30
その文字列を数字とかブリーとかま、そういうのに変換しないと、いわゆるビーのアプリ側のプロプスにはならないです。
@Guest 14:39
で、あのなので、ディファインカスタムエレメントの方で、その変換の実装があるんですけれど、
@Guest 14:46
はい、
@Guest 14:47
その変換の実装がパースフロートを使って、あのナンバーで扱えそうなら、ナンバーでナンバーじゃなさそうなら、まあそのままでみたいな
@Guest 14:56
返還になってるんですよ。
@Guest 14:58
はい
@Guest 14:59
で、そのパースフロートが使ってる構文解析って、ちょっと厳密じゃなくて、はいはい、あの、先頭の文字が数字だったらいいんですけど、途中で数字じゃないものが入ってくると、その
@Guest 15:10
途中までを数字として解釈して帰ってきちゃうんですね。はい。
@Guest 15:15
なので、ちょうど僕がやってたクーポンの場合、クーポンコードみたいなのがあって、そのクーポンコードが例えば
@Guest 15:23
あの23、ハイフン4はいいはいはい、ハイフンみたいなまあ、よくある行動があるんですよ。はい
@Guest 15:30
で、その場合、パースフロット使うと、その最初の数字だけで帰ってきちゃうので、困る
@Guest 15:36
っていうことがありました。で、あるべき姿としては、あの厳密に解析してくれるナンバーナンバーかっこ
@Guest 15:45
の形式で書いてほしかったんですけど、まあ、ちょっとそうなってないので、ギャーってなったことがありました。なので、結構その辺の
@Guest 15:54
え変換で、アトリビュートからプロプスへの変換で、他にももしかしたら困ったケースあるんじゃないかなって思ったりしてますね。で、
@Guest 16:04
応援クーポン側では、あのパッチパッケージ使ってま。とりあえずパッチを当てて、今回はリリースをしたんですね。
@Guest 16:14
はい
@Guest 16:14
で、一応あるべき姿としては、その辺の改善なのかなと思って、ちょっとプロリとかシューズとかちょっと見てたんですけれど、
@Guest 16:24
そのトゥーナンバーっていう、そのナンバーとして使えるかどうかを
@Guest 16:29
確認する。はい、共通モジュールがそのビーの中にあるんですけど、
@Guest 16:35
それをいじってしまえばいいわけなんですけれども、そのモジュールの参照先が多くて、結構ちょっとマイグレーションとか、コンパチビリティ的に厳しいみたいなんですよ。
@Guest 16:44
はい、
@Guest 16:45
なので、今のところパースフロートのままになりそうみたいな雰囲気になってて、マジかっていう感じですね。
@Guest 16:55
しかに、なかなかこう受け取ってるプロップスがなんか何の方なのかっていうのを変換するのは難というか、まあ難しい。どこまで
@Guest 17:05
ライブラリでこうサポートするのかってのは難しいところではありますけど、これなら要するに一層のこと。一旦全部文字上げて受け取ってしまって、自分でキャストするとか。でも、
@Guest 17:14
ああ、そうそうそうそうそうなと思うところではありますよね。最悪文字、文字列のままビの世界。あ、自分で書いたビの方に持ってってもらって、
@Guest 17:24
そのウェブコンポーネンツビールドの時は、自前でこう変換したとか入れられればいいんですけど、あの
@Guest 17:31
吉なにやってくれちゃうので、おおっていう
@Guest 17:34
なかなかこう。親切なのは嬉しいけれども、制度がちょっと
@Guest 17:39
そうなんですよね、
@Guest 17:42
かといって、ちょっと修正も時間かかり修正できるのかな。結構その辺の議論も古いので、もしかしたらこのままなのかもしれないんですけど、
@Guest 17:51
もし、使うケースがあったら、ちょっとこの辺を気にしといた方がいいかもしれないです。
@Guest 17:56
確かに、なかなかこれは、ブレーキングチェンジに、なんか、バグフィックスのつもりが、ウレイキングチェンスになり得るところなんで、なかなかこうコンテレビュートするにしても、ハードルが高い。
@Guest 18:05
そうそうなんですよね、
@Guest 18:07
しますええね、なんかかって他のこれまで今プロダクションで動いてる何かのコードが動かなくなる可能性がありそうな変更になってしまいますね。
@Guest 18:15
そうそう、そうなんでうん、ちょっと今後のプルリク動向をよち
@Guest 18:21
くという感じですね。
@Guest 18:25
はい、で、もう1個がこれもちょっと困ったのが、スタイルの扱いで。
@Guest 18:29
はい、
@Guest 18:30
これがビーのv2とv3で結構違うところなんですけれど、
@Guest 18:34
あの雇用素。あ、ウェブコンポーネンツを出力するためのビーコンポーネント。
@Guest 18:42
はい、
@Guest 18:42
ビューコンポーネントが、ネットしている構造の場合、その雇用素の
@Guest 18:48
コンポーネントが持っているスタイルをはい、成功法だと、シャドルートに挿入できないっていうことがあるんです。
@Guest 18:57
例えば、プレービーのコンポリント今回作っている場合、その中に例えばボタンみたいなコンポ。
@Guest 19:02
あ、そうそうそうそうそう
@Guest 19:03
はい、ボタンのスタイルが入ってこない。
@Guest 19:05
そうそうそうそうそうなんですね、で、元々のv2だと、その辺再帰的に取得して挿入してくれてたと思うんですけど。はい、
@Guest 19:14
あの分散だとそれができないので、うん、ちょっと困ったなっていう構造になってます。
@Guest 19:21
で、webコンポーネンツビルドをするにあたって、ビューのローダーとか、バイトのプラグインで、
@Guest 19:28
その元々はスタイルをヘッドの要素のところにこう勝手に挿入してくれるじゃないですか。はいで、それをウェブコンポーネンツ用にシャドルートに挿入するように、
@Guest 19:38
よしなにやってくれるんですけど、その対象が。vさんの場合は、ルートのコンポーネントのみになって、い
@Guest 19:47
で、何もその辺知らなかったタイミングでポチって出力をしてみたら、あの1番側の
@Guest 19:54
cssしか当たってなくて、あれ、レレレっていう感じになったことがあって、ちょっと困っちゃいましたね。
@Guest 20:01
でv。産用に、そのローダーとか、バイトのプラグインとかが、そのスタイルを取得してくれてて、
@Guest 20:08
で、ディファイン、カスタムエレメント側も。シャドルートに挿入をするっていう機能は、もうちゃんと実装されてるんですね。はい、
@Guest 20:17
されてるんですけど、こう再帰的に取るっていうと、このプロジェクトもそもそも入ってないので、ちょっとこういうのが起きちゃっていたっていうのなんですよ。
@Guest 20:25
で、ちょっとこれ困ったので、プロリとか出してやってみたりしてたんですけれど、基本的に
@Guest 20:35
ココンポーネントもウェブコンポーネンツにして使ってほしいみたいなんですね。少なくとも今は
@Guest 20:43
なので、ちょっとここはハックが必要な部分です。
@Guest 20:48
応援クーポンは、そのクーポンポンポーネントがあるんですけど、結構大きい1つのコンポンとしては、かなり大きいコンポーネントなので、結構細かく分割をされているので。今更それを1つのおっきいのになんてとんでもないっていうことなので、
@Guest 21:02
自分でそのスタイル文字列を再帰的に取得して、
@Guest 21:08
自分でしゃシャドルートに挿入するっていう実装を追加
@Guest 21:14
ていうのが対策ですね。で、一応ディファイン、カスタムエレメントにも、そのスタイルを受け取る口はあるんですね。はい、
@Guest 21:23
スタイルの受け取る口はあるので、自分で全部取得をしてえ、渡すっていう
@Guest 21:30
ことをする必要があったので、これもAPI側でやってくれると嬉しいなとちょっと思ってます。
@Guest 21:39
で、まあ、ちょっとatがでやってほしいなと思って投げてみたけれども、ま、今の方針的にはなかなか
@Guest 21:45
うん、
@Guest 21:46
難しいなって
@Guest 21:47
そうですね。あの、
@Guest 21:49
スタイルを取得するために、そのあるコンポーネントが持ってる雇用素のコンポーネントを取得して、で、どんどんやってかなくちゃいけないんですけど、
@Guest 22:01
その雇用素のコンポーネントを取得できるコンビの書き方はいが限られてるので。
@Guest 22:08
ああ、なるほど、
@Guest 22:10
ちょうどプロリクの話で出てきたのはなんだっけ。スクリプトにセットっていうのをつけて、あの、簡易的に
@Guest 22:18
コンポーネント記述できるケースがあると思うんですけど、
@Guest 22:22
そういうので書いちゃうとインポートはするんだけど、雇用、そのコンポーネンツを表現しないので、取れんとなので、再帰的に取れないっていうのが
@Guest 22:33
ありましたね。なので、ダメなケースがある以上、このままだとダメだねみたいな話にな
@Guest 22:40
てましたね。なんか、結構ビューって結構いろんな書き方があるので、ちゃんとそれを全部どのケースでも大丈夫なようになんないとダメだねっていう方針があるみたいで、
@Guest 22:51
ちょっとこのままだとダメかもなって思いましたね。結構プロプスもそうですけどね、あの、プロプスも、タイプを定義するパターンと、配列で入っちゃうパターンもあると思うので、さっきのそのプロプスの変換の都合とかも、これに
@Guest 23:06
近いのかなって、ちょっと思ったりもしましたね。こう、色んな書き方ができる分、こういうところで辛いんだなと。
@Guest 23:16
ま、そのbgs側が色々な書き方を容認してくださっているのは、結構基盤の苦労があってこそなんだなとええいて、改めて実感できるというか、
@Guest 23:26
そう結構ちょっと面白かったですね。こう、色々と
@Guest 23:29
書きや書き、いろんな人にとって書きやすいケースにすると、こういうところに影響が出るんだっていういい勉強になりました。
@Guest 23:39
あ、なかなか難しいですね、なんか使ってみて、コントレビートしようと思ってわかる、
@Guest 23:44
そのこの方の体調の難しさみたいな。
@Guest 23:47
そうそうそうそうそうそうなんですよね、で、うん、まあほんほんとは。多分、ドキュメントを隅々まで見てから、コントリーピートするべきだったと思うんですけど、まあ、ちょっとそれには限界があるんで、僕のわかる範囲で読んで、あ、でもこれは確かに
@Guest 23:59
機能としてないなと思って出すと、あ、こういうケースがあるのかわからんみたいな
@Guest 24:07
感じですね。うん、うん
@Guest 24:09
で終わりましたね。
@Guest 24:10
そうなので、結構この辺困ってる人結構多いみたいで、うん、多分何かしら動きはあるとは思うんだけど、止まっちゃってるんで、
@Guest 24:20
うんっていう感じですね。
@Guest 24:23
あるいは、ポンテリビュートチャンスかも
@Guest 24:25
しれないですよ。そうそう、このトリビュートチャンス。
@Guest 24:30
そうなんですね、だから、もっといい手段とかあるといいのかもしれないですね。
@Guest 24:35
結構びなんだろうな。ビューで作ったものを、わざわざウェブコンポーネンツにしたい時って
@Guest 24:43
なんだろうな。結構大きいコンポネントだから、出力したいケースがあると思うしい。使います。ってことは、ある程度大きいものだと思うから、
@Guest 24:51
こうネスとしたビーコンポーネントもあった方れた方がいいんじゃないかなとは思うんですが、という感じですね。
@Guest 25:00
なんかあれですもんね。小さいものだったら、それこそそれぞれで作ってしまった方が都合がいい。
@Guest 25:04
あ、そうそうそうそうそうそうそうそう
@Guest 25:06
別々にメンテナンスするのが難しいものこそ、ウェブコンポーネント化したいし、
@Guest 25:12
なんかするだけの価値があるっていう風なええもある気がしますから、ちょっと対応は期待したいところでは
@Guest 25:18
そうですね。で、一応成功法としては、その古コンポーネントも
@Guest 25:23
ネストされたコンポーネントもウェブコンポーネンツ化してね。はいはい、とは言われてるんですけど、それはそれで
@Guest 25:28
違う気がする
@Guest 25:29
っていう。
@Guest 25:31
いや、どうなんだろうな。なんかたい試してないから、もしかしたら怒られちゃうかもしれないですけど、多分そのウェブコンポネしちゃうと、その親とこの繋がりが、そのいわゆる
@Guest 25:41
ウェブコンポーネント同士の繋がりになるんで、ビューとしてやりたい機能とかできるのかな。みたいな、
@Guest 25:49
親と子の関係がびの世界でなくなると、なんか色々不都合ありそうな気がするんだけど、どうだろうなとかってちょっと思ったりしてます。
@Guest 25:58
あと、バンドルが分かれるのか大丈夫かとか、ちょっと気になるところもそうそうそう
@Guest 26:03
あ、それで言うと、なんかさっき少し話にあってましたけど、そのウェブコンポーネンツにする場合の、ビルドサイズとかも気になる。課題としてあると思うんですけど。
@Guest 26:11
ああ、そうですね、けど、
@Guest 26:12
その気になるウィルドサイズはどうでした。やってみて、
@Guest 26:16
あ、やっぱランタイム分入っちゃうので、そこは許容するしかないなっていう感じですね。あの、
@Guest 26:25
さっき言ったかもしれないんですけど、その組み込む先のcmsはビュー2で書かれていて、今回のえっと使います。クーポン側はビュー3で書いたので、
@Guest 26:35
ランタイムの共存みたいのはできないので。
@Guest 26:39
ウェブコンポーネンツ側で、v3のえー団体も持ってないと動かせないので、その分ちょっとバンドルが
@Guest 26:47
大きくなっちゃうっていうのは、まあ、しょうがないよねっていう範囲には
@Guest 26:52
なってますかね。で、結構使い回す前提なので、あんまりライブラリーも入れたくないなっていうのでは。いさい、最初ちょっとこう脳みそ止めて、色々入れてたものを結果外すみたいなのは、まあまあ当たり前のように出てきましたね。
@Guest 27:09
あとはいえ、ランタイムだけってそんなに重いもんでもないですかね。
@Guest 27:14
嘘ですねでも、3、3、4割ぐらいがランタイムになったか
@Guest 27:22
そうで、あのエバーさんとか言ってましたけど、これあの、結局ランタイムもたくさんコンポーネントがある分、あの1コンポーネント。
@Guest 27:30
あのランタイムのサイズが小さくなるので、
@Guest 27:33
まあ、うん。そういう今後どんどんその辺の気になるとこも減るかなとかは思ったりもしますかね。まあ、
@Guest 27:41
今回に関して結構その歴史のあるcms側、cmsアプリ側にこう新しいコンポイントを組み込んでる
@Guest 27:49
ので、なんか、そういうランタイムはちゃんと完全に分けちゃうと、それはそれで素結合でいいのかな、なんて、ちょっと思っちゃったりも
@Guest 27:57
するんですよね。そのランターによってこう意外とええってなったりすることないかなとか、ちょっと思ったりもしつつ
@Guest 28:11
あればできるかなとは思いますね。あとは、cmsの中でもcms内もかなり機能がたくさんあって、
@Guest 28:18
クーポン以外にもものすごくたくさん機能があるので、みんながみんな必ず高頻度に開く画面ではないんですね。はいはいはい
@Guest 28:26
で、そういうところもあって、許容できるかなっていう背景もありますね。必ず、トップで出てくるとかになると、ちょっと色々考えなくちゃいけないんですけど、確かにか、
@Guest 28:37
今回はプレビューっていうま、ある程度アクションを起こした先にあるから、まあ、一旦許容しても良いか。
@Guest 28:42
そうそうそうそうですね、
@Guest 28:48
じゃ結構まああれですかね。こう投下的にってか、あんまりフレイマークを意識せずにこう。カスタムエレメントとして使えるのは嬉しいけど、まあ、全体としてはまだ
@Guest 28:58
気になるところもあって、うん、ま、あとはいえ、今回のケースターとマッチしていたと言えるんじゃないかなって、そうそうそう
@Guest 29:05
そうですね、なので、なんか、ウェブコンポレンツを作りたいなっていうモチベーションで、
@Guest 29:11
じゃあ、ちょっと複雑だし、病使っちゃおうかみたいなのだと、ちょっと苦しみを覚えるか。はいはいはいしれないですね。だったら、せめてプリアクトとかの方がいいんじゃない
@Guest 29:20
かな。みたいな
@Guest 29:21
とこはありますが、
@Guest 29:24
ですが、あって、そっから切り出すってなった。
@Guest 29:26
そうそうそうそうそうあの、かなり強力な選択肢になるんじゃないかな、とは思いますね。うん、
@Guest 29:35
やっぱり結構アトリビュートとプロプスの変換とか、あの、なんだっけ。イベントはいの変換とか、スロットとか。やっぱめんどくさいので、
@Guest 29:44
その辺を。やっぱコアAPIでちゃんと持ってくれるっていう構造はやっぱり助かるので、
@Guest 29:50
もし、ビーアプリので作ってたものが、一部のコンポーネントを外に出したいって話であれば、結構選択肢にしてもいいんじゃないかな。
@Guest 29:58
そうですね、確かになんかそっちの切り出したいが、ベースであれば、全然今の段階でも、こう選択肢として活用できそうなところはありますね。
@Guest 30:09
今回はその私、結構ビブコンポーネントで共通ってから、フレームワーク全く印象でしたけど、今回みたいに、ビュー2とビースみたいなバージョンをまたぐケースでも使えますし、
@Guest 30:19
振り回しは結構よさそうな気がしますね。
@Guest 30:22
そうですね、今回、僕はあの、その団体も自分で持っちゃいましたけど、別に共通で使ったって別にいいことなので、
@Guest 30:30
その辺は結構柔軟にできるから、そういうのができれば、多分バトルサイズとかもだいぶ気にならなくなると思うので、
@Guest 30:37
もしぜひ今後またよりこう色々切り出すところも増えてきて、なんかそれに立って課題感を感じたり、逆に
@Guest 30:44
なんかあの、今よりもっとほんとは使い勝手いいじゃん。みたいなところが増えてきたりしたら、ぜひまたちょっとインサイドきたいところでは、はい
@Guest 30:51
はい、わかりました
@Guest 30:52
じゃあ、ひがマージされたらまた出ます
@Guest 30:55
それは是非お願いいたします。
@Guest 31:03
はいえ、今回は山本さんをゲストにLINEオフィシャルアカウントでのえークーポンアプリにて使った。えーと、ディファインタムエレメントについて話を聞いていきました。
@Guest 31:14
ライン株式会社のフロントエンド組織UITでは、このようなフロントエンドに関する議論や、意見交換を日々行っております。
@Guest 31:21
UIT INSIDEでえ、公開しているコンテンツの中には、市内の勉強会や交流会の中で得られたえ、知識等々もありますので、今後も積極的にえー、ポッドキャスト内で紹介していければと考えております。
@Guest 31:34
このポートキャストについてのえ、ご意見やご感想については、え。ハッシュタグ
@Guest 31:41
シャープ、UIT、アンダースコアインサイドにてつぶやいていただきますと、スタッフの方で拾わせていただきますので、ぜひぜひ
@Guest 31:50
ついていただければと思います。
@Guest 31:52
また、このコントキャストを通じて、ラインに興味を持ってくださった方は、湘南とサカ部にあります。求人のリンクより、ご連絡いただければと思います。
@Guest 32:02
現在新卒採用、中途採用とに行っておりますし、えズムにてカジュアル面談を行っておりますので、気軽にご連絡いただければと思います。
@Guest 32:11
名前をつけると、例えば山本さんと話したいです。とかってつけると、多分やさんさんカジュアルメダに出てきてくれるんで、ぜひぜひお気軽にえ、ご連絡いただければ
@Guest 32:19
思います。はい、
@Guest 32:20
ぜひ一緒に公式アカウントを開発しましょう。
@Guest 32:24
というわけで、今回は山本さんとともに、ラインカスタムエルメントについて話していきました。本さんありがとうございました
@Guest 32:31
はい、ありがとうございました。
