@Guest 00:04
こんにちは、UITのpotato4dです。
@Guest 00:07
ユーザーインターフェイスと、テクノロジーを愛する開発者のためのウィークリーポッド、キャストUIT INSIDE。今週も始めたいと思います。
@Guest 00:15
今回はですね、前回に引き続き、ゲストにUITのきょうさんとあのさんをお呼びしてえ、LINEポイントクラブのえ、タイプスクリプト、えー以降のえ、続編からえ、さらに続いてですね。
@Guest 00:26
今週はえ、タイプスクリプトのコストとか似合うのかのメリットなどの話をしていければと思っております。先週に引き続きとなりますが、きさもんさんよろしくお願いいたします
@Guest 00:36
よろしくよろしくお願いします。
@Guest 00:41
さてではえ、ひとまず、選手からの続きの話となってしまうので、簡単にえ、前回の振り返りをきょさんの方にお願いしてもよろしいでしょうか。
@Guest 00:50
はい、わかりました。そうですね、前回はLINEポイントクラブのタイプ、スクリプトへのマイグレーションの進捗ということで、ちょっと色々報告させてもらった形です。
@Guest 01:00
で、ま、計画の詳細だったりとか、あとは目標値だったり、あとは実際にその目標を掲げて、やった結果、どういう実績値が出たかっていうのを紹介させていただきました。
@Guest 01:13
ま、ちょっと振り返りっていうことなので、一応数値情報だけちょっと振り返っていこうかなと思います。
@Guest 01:18
はい、お願いします。はい
@Guest 01:20
で、前回喋った内容。全部で3点なんですけど、ちょっと順に説明しますね。
@Guest 01:25
まず、スケジュールの話を最初にさせてもらいました。まあ、作業日数と完了予定日の話ですね。
@Guest 01:32
で、当初えーと、タイプスクールやる前の目標値としては、2年で、マイグレーション完了するっていうことで、目標値を立てています。
@Guest 01:41
で、ま、それに関しては、1日平均3時間ぐらいの稼働想定ってことで、えっと出していました。
@Guest 01:47
で、実際に今70パーセントぐらい進んだ状況でどうなってるかというと、
@Guest 01:54
ま、現在ちょうど1年経ってから70パーセントほど完了していて、で、あとは最終段階に入っているっていう状態になってますね。
@Guest 02:02
で、早くて当初2年よ予定だったんですが、まあ1年半ぐらいで、マイグレーション完了できるっていう。見込みが立っていて、
@Guest 02:11
実績値で言うと、1日の平均稼働時間というのが、ま月によって変わるんですけど、2から3時間程度の稼働ということで、
@Guest 02:19
目標値よりもちょっといい数値っていうのがえっと出てきています。
@Guest 02:23
はい、
@Guest 02:24
で、続いて話したのが、学習コストの話ですね。学習コストの話で、初めてタイプスクールトを対応した方がどのぐらいで。普通の稼働時間
@Guest 02:36
でえ。作業できるように、戻るかっていうのを計測した期間っていうのになっています。
@Guest 02:42
で、想定目標としては、最初11年から2年かけて、タイプスクープトで、慣れるまで
@Guest 02:48
の時間が戻って戻っていくっていうのをえ立てていたんですが、で、実際に実績値としては、えっと半年ぐらいで終わったっていう話をえっと前回させてもらいました。
@Guest 02:57
で、まあ、結論としては、フロントエンド専門ジョブの。初タイプスクリプト対応で
@Guest 03:04
ま半年ぐらいで、学習が終わって、普通の作業時間に戻れるっていう。結果が出ています。
@Guest 03:12
ええ、今回はその続きでえ、前回ちょっとギリギリでえ、最後に話しましたけれども、きょうさんが実はタイプスクトについてのすえ、移行については、中立派というところで、そこについて、今日はお伺いできればと思います。
@Guest 03:26
今回なんですけど、まずは中立派というところについて深掘りしていきたいんですけれども、ちょっと早速聞いていってもよろしいでしょうか。
@Guest 03:34
わかりましたあ、で、ちょっと前回喋ってて、1点ちょっと訂正したいことあるんで、
@Guest 03:40
ちょっとお話だけちょっとここを取らせてもらいたいんですけど、で前回。結構数値系のお話をしていて、やっぱ説明責任もあるんで、通帳で準備しないといけないっていう話をすごいさせてもらったと思うんですけど。
@Guest 03:54
で、前回の話聞いた方の中に。いや、LINEってこんなに数値で重武装して提案しないと、タイプスクープト入れられないんだ。って思われた方、もしかしたらいいらっしゃるかもしれないんですけど、ここちょっとちゃんと訂正させてもらいます。
@Guest 04:08
まあ、もちろん、自分がまそういうなんだろう。考え方を持ってるっていうのもあるんで、じゅじ重武装して、
@Guest 04:16
望んだんですけど、提案の方はで、いざ提案してみたところ、
@Guest 04:22
その数値情報を話す前におおいいじゃないすか、やっちゃいましょうよ。ということで、エンジニアさんとか、あと、企画のメンバーがめちゃくちゃ後押ししてくれて
@Guest 04:33
ま。なので、うちまLINE社ま、プロジェクトにも、もちろんよるところはあるんですけど。
@Guest 04:39
基本的にはタイプスクリとか入れたいって言った時に、他の情報の方もすごい後押ししてくれるんで。多分、LINEってタイプスクリプトの実施、すっげえしやすい会社かなって、私個人としては思っています。はい、そうですね、
@Guest 04:51
結構どこでもちゃんとタイプソフト入れていきたいって言ったら、話が通るようなイメージはありますよね。
@Guest 04:56
あ、そうですね、だから、他の暗記もすごい増えてきてますよね。最近
@Guest 05:00
そうですね、ここ1、2年で一気にあの移行案件増えた気がしますね。うん、
@Guest 05:05
うん、すね、ま、なんかそういうこともあるんで、ちょっと。タイムスクルと簡単に入れられますよ。ってことで、えっと思っていただければと思います。はい、
@Guest 05:13
そうっすね、そうですね、という感じで、まだ全然意向も増えてますし。ちょうどえ。LINEポイントクラブのレイもエピソード55で話しましたけど、
@Guest 05:21
社内的にあのリフ以降という。プロジェクトが走っているっていうところもあって、なんか技術的な基盤の入れ替えとかが入ってるんで、そこに合わせたスクプと移行してしまうじゃないか、みたいなのも増えてるんで、ま。全然この
@Guest 05:33
あのすごい準備しないと、タイプセルト以降に踏み切れないってわけではないかなとは思います。
@Guest 05:39
というわけで、その体育スクープトエコ、おすすめ派、中立派の話をえ、前回したかなと思うんですけど、その中立の意図をちょっときょうさんにお伺いできればなと思います。あ、
@Guest 05:49
はい、まこの中立の話なんですが、ちょうど。前回も話した通り、タイプスクリプトの導入にあたって
@Guest 05:59
考慮すべき。メリットとコストっていう記事が。LINEのエンジニアブログで、公開されたと思うんですよ。記事見てて、おお、なるほど、って思いながらも、そのあとtwitterを見たんですよ。
@Guest 06:09
はい、そしたら、やっぱいろんな意見分かれてるなっていうのが、すごいあって、え、
@Guest 06:15
なんかすごいちょっと感動しちゃったんすよね。ま、例えば、もちろん、タイプスクリプトをま推進してる方も多かったの
@Guest 06:22
もあるんですけど。身長差もすごい重要だよねっていう話をされてる方も多くて、あとは、ちょっとえあれなんですが、
@Guest 06:31
一体何があったのだって、ちょっと心配してくれる。声をかけてくれてる方。twitterでちらほらいらっしゃったんですよね。
@Guest 06:37
そうですね、
@Guest 06:39
お、ありがとうございます。みたいな感じだったけ
@Guest 06:41
で、まあ、なんかそれ見た時にこう色んな考え方を持っている方がいてま。やっぱ考え方ってやっぱ偏り絶対できると思うんで、やっぱ推進派と身重派ってことで分かれるんですけど、自分どっちだろうとちょっと考えた時に、
@Guest 06:56
はい、両方とも分かるなとか、意見理解できるなって思ったところがあって、
@Guest 07:02
で、あと、自分自身が結構推奨したいんすよね。このタイプスクリプト自体を
@Guest 07:08
はいはいはい、
@Guest 07:09
そういうのもあるんで、あ、これ何派って例えるんだったら、自分中立派がいいなって思
@Guest 07:14
ていて、中立派で、ちょっとお互いの気持ちを分かった上で、こう。タイプスクードの導入を説得したり、進められるような立場がいいなっていうことで、ちょっと中立派っていう言葉をあえて、前回出させてもらった感じですね。
@Guest 07:26
はいはいはいはい、なるほどなるほど
@Guest 07:29
ま、確かに
@Guest 07:30
あのかなりえブログに対しての意見っていうのも、賛否両論あったかなと思うんですけれども、
@Guest 07:36
確かにその中であのま言いたいこともわかるし、実際うちらの現場でも、タイプスクープとが多分合致しないケースも出てくるかもしれないんですけれども。
@Guest 07:44
まあ、ただ一方でどんどん移行していきたいっていうのは、全体の流れとしてはあるかなと思うんで、
@Guest 07:49
確かに、割と社内的には中立派というか、ま、場合に応じてっていうケースも多いかもしれないですよね。うん、うん、うん、うん、うん、なるほどなるほど、
@Guest 07:58
確かにまあえ。社内的にはタイプスクリプトのえこっていうのが全体的なトレンドとしてはあるかなとは思うんです
@Guest 08:03
けれど、もま、やっぱり移行しづらいプロジェクトがあるっていうところも事実かなと思うので、まあ、社内的にも基本はタイプスクリプト以降したいけれど、も、まちょっとできない。読んどのない事情がある場合は、仕方ない、みたいな考えの人も多いかなとは
@Guest 08:16
思いますね。あ、今あもんさんが聞いてる限りはどうですか。どういう風に思いましたかね。
@Guest 08:21
そうですね、僕はバックグラウンドとしては、元々全職でアンゲラを触ってたっていうこともあっては。いま、タイプスクリプト
@Guest 08:29
がないとかあり得ないと。まあ、正直思ってた部分もあったんですけど、
@Guest 08:33
ま、ただちょっと今、今回のポイントクラブの移行とかしていくとかにあたってま。タイプストを書いただけで、ま。絶対に安全になるっていうわけではないってことをまあ実感しているものもあるので、
@Guest 08:46
まそこはある程度柔軟性、例えば肩が合わないとかだったらある程度まあ、ちょっと
@Guest 08:50
柔軟性を持たせつつまテストとかま、別の方面から。でも、ちゃんと品質保証していくことの方が大事なのかなって、個人的には思ってますね。
@Guest 09:00
ま、確かに、全色アンギュラーがメインってなると、やっぱりタイプスクープとか、デフォルトというか、まあ、基本的にtsの世界だったかなと思うんで
@Guest 09:08
ま。ちょっと。ただ、やっていく中で、別の視点もあり得るかなっていう風な
@Guest 09:12
考えてきたって感じですかね。
@Guest 09:13
そうですね、うん、うん、
@Guest 09:15
なるほど、なるほど、きょうさんも基本的には中立といっても、導入していきたい派ではありますよね。
@Guest 09:20
あ、そうですね、はい、もちろんその通りですね。ま、た、だ、やっぱ人の思いを知りたいとか、やっぱそこら辺の感覚があったりはするんで、やっぱ中立。
@Guest 09:30
あ、もう。ほんとは推奨でいいんですけど、あえて中立みたいな。
@Guest 09:34
そうですね、はいま
@Guest 09:36
結構難しいですよね。そこのほんとに推進したいからこそ、どういうスタンスをとるかっていうのは、うん、
@Guest 09:43
うん、そうなんですよね、で、あとはあれなんですよね。
@Guest 09:47
ま、自分もちょうど2020年ぐらいから、まあ、しっかりタイプスクールとやっていきましょう。っていう声をあげてるんですけど、実は2019年の時って、多分、今の身長派の方々と同じように、すっごい悩んでた時期あったんですよ。
@Guest 10:01
はいはいはいはいえ、
@Guest 10:02
えっとで、2019年の後半ぐらいから。もううちの社内でも、どんどんどんどん浸透し始めて、タイプスクリットの方がいいよね。って話が出ていて、
@Guest 10:11
もう
@Guest 10:11
殺じて入れたいってすげえ思ってたんですよ。
@Guest 10:14
あ、はいはいはい、トロ段階で、
@Guest 10:15
ただまなんかこの性格なんで、色んな計画立ててやったんですけど、
@Guest 10:19
まあ、なんかぽっかりあの相手のなみたいな、自分自身を納得させられる理論、立てられないなとかがあって、
@Guest 10:28
すごい葛藤したんですけど、一応2020年に色々ヒントをもらいながら、やっと自分なりの答えが出たっていうことで、まあ、なんかすごい前から精神を話してると思うんですけど、まあ、その精神をっていうのは、その時に見つけたものにはなった
@Guest 10:42
ますね。はい、うん、なんで、どちらの気持ちも自分わかっているんで、まあ、中立派っていうのも結構楽しくっていうところでいますね。はい、うん、
@Guest 10:50
うん、なるほど、なるほど、
@Guest 10:52
そうだったんですよね。なんか、その空いた穴がなかなかこう生まりきらないから、これまでは結構慎重派みたいなところがあったけど、そこが自分の中で腹落ちする部分があったから、
@Guest 11:01
推進派に変わってまそこの変遷は自分が辿ってきたからこそ、中立で見ていこうと思ってるみたいな感じなんすね。
@Guest 11:08
そうなんすよね、はい、なるほど、なるほど
@Guest 11:10
はいです
@Guest 11:14
ということで、あれですかね。えと、ま今慎重派の方々結構多いとは思うんですけど、ちょっとこういう考え方を持つと、タイプスクルと入れやすくなりますよ。みたいな話をちょっとしていこうかなって、えっと思ってはいます。
@Guest 11:26
で、その身長派の方々が気になってるのって何かって言うと、多分コストパフォーマンスなんですよね。
@Guest 11:33
あ、はいはいはい、コスト
@Guest 11:34
パフォーマンスという言葉だと思っていて、まあ、慎重なタイプの方って、タイプスクリットは、想像よりコストがかかるのではないかっていう疑問だったり、
@Guest 11:43
コストを回収できるパフォーマンスを本当に出せるのかっていう不安だったり。また、分この2つで不安だと思うんですけど、そういう不安を持っていて、
@Guest 11:51
まふ不安が拭えていないのが、なんだろうこう踏み出せないっていうのに、繋がってると自分としては思ってるんですよ。
@Guest 11:58
はい、
@Guest 12:00
で、コストパフォーマンスっていう。まあ、話でちょっと話をさせてもらうんですけど、まあ、キーワードとしては、コストとパフォーマンスにちょっとこれこの単語で分けられると思っていて、まあ、最初にコストの話からちょっとさせていただこうと思います。
@Guest 12:15
はいはい、お願いします。
@Guest 12:17
そうっすね、まずタイプスクリットはコストがかかるんではないかって話なんですが、はい、結構どういう視点で見てるかによって、だいぶ変わるところがあって、
@Guest 12:27
この問題って、タイプスクリップとかコストかかる云々の話ではなくて、正直な話。これ、バイグレーションなんですよね。マイレーションがコストかかるかどうかっていう話がに対象になるんですよ。このこのはいはいはい、
@Guest 12:40
そうですね、はいで、確かに
@Guest 12:43
これ多分エピソード55でも、話した内容の繰り返しになっちゃうんですけど、ちょっとここの場でもう1回ちょっと話させてもらいますね。はいはい
@Guest 12:53
で、タイプスクリプトで、コストがかかるパターンていうのは、まめ明確に分かれてますかかるパターンとかからないパターンでと
@Guest 13:02
まず、タイプスクルトで。ゼロベースで新規アプリ作成する場合って、コストが低いんですよ。
@Guest 13:08
そうですね、ほとんどメンバーの学習コストだけでは、アプリケーション自体のコストはほぼないみたいな状態になりますもんね。
@Guest 13:15
そうですね、はい、そうなんですよね、で、逆にコストかかるパタ何かっていうと、既存のアプリのマイグレーションですね。ま、ちょうどポイントとかが多分それに付随してるところだと思うんですけど。
@Guest 13:24
はいで、これ、ちょっと。LINEポイントクラブの事例に当てはめて説明すると、0ベースの新規アプリ作成っていうのは、まず導入消費0なんですよね。学習コストくらい
@Guest 13:34
多分必要。はいはいはいはい、
@Guest 13:36
それに対して、
@Guest 13:38
バイグレーションの場合っていうのは、まその導入消費って呼ばれているものがすごい多くてま、ちょっとこれ、ざっくり換算の話になるんですけど、はい、ポイントの場合って、jその対象ファイルが500ファイルありました。
@Guest 13:50
はいはいはいはい
@Guest 13:52
で
@Guest 13:52
しかも、古いアプリなんで、2014年頃に作られたもので。やっぱちょっとその古いっていうのもま経緯もありあるので、肩の意識がなかったり、あとは、yutilgで。
@Guest 14:04
なんか方がいろんな方返すような。youはいはいはいてるとかま、そういった処理がほんとに多かったんですよ。
@Guest 14:11
LINEポイントクラブはいはいで、ま大げさになるんですけど、1ファイルあたり導入障壁を1と換算した場合ま500障壁あります。って話になります。
@Guest 14:21
はいはいで、例えばに2個、1ファイルに2個障壁があるって考えた場合、戦勝壁となります。
@Guest 14:27
そうですね、うん、
@Guest 14:28
うん、まあちょっとこれあくまでもざっくり霊にはなるんですが、で
@Guest 14:32
ま正直なし。ゼロベースの新規アプリ作成は導入、消費0です。マイグレーションの場合は、え、導入商品500から1000です。って言われたら、この時点でコスト大幅に違うのはまあ見えてくると思うんですよね。はい、
@Guest 14:44
そうですね、ち、
@Guest 14:46
ちょっと大袈裟な気もしますけど、実際はもうちょっと少なかったかなっていう。まあ、体感としてはそうですね。はい、
@Guest 14:52
あ、その辺りは結構プロジェクトによりますね。まあまあまあ
@Guest 14:57
そうですね、これちょっとちゃんと数えてなかったんで、
@Guest 15:02
ままそれこそ導入消費4だった場合、2000とかになりますもんね。はいで、ちょっと大げさなんで、もうちょっと細かく説明すると、
@Guest 15:11
まこの導入障、壁ま障壁数ですね。
@Guest 15:15
えーは、自分の観点で言うと、既存の行動の年代とか、あとは、まあ、実際に作られてるものの制度で、左右されることが多いってちょっと自分としては思っています。
@Guest 15:25
で、
@Guest 15:26
ちょうどさっき2014年って話をさせてもらったんですが、はいと、2014年の段階だと、まだ肩を意識するような開発っていうのが、まあ、フロントエンドに今と比べると全然浸透しきれてなかった時期だったんですよね。
@Guest 15:41
はい、傾向として
@Guest 15:42
ままただまあこう言っちゃったんですけど、まあ、もちろん業務環境によっては。タイプスクリとないけど、か、ちゃんと意識しようぜって開発されてた方もいたとは思います。し
@Guest 15:51
ま、ちょうどタイプスクリットが1番最初にされたのだって、ちょうど2014年の中盤ぐらいだったと思うんで、もしかしたら、早めにチャレンジした人もえっといたかもしれないんですけど、やっぱ今に比べると、その
@Guest 16:02
方を意識する。開発法っていうのが、浸透しなかった時期だと、私個人としては思っています。はい、
@Guest 16:08
で、あとは長年このサービス1位付けてる。まあ、LINEポイントクラブなんですけど、リファクター自体が結構ちょこちょこやっていて、
@Guest 16:16
はい。なので。逆に言うと、古い時代のコードと新しい時代のコードごちゃマみたいな。なんか、ルール混ざってる状態ではいってたってこともあって、
@Guest 16:25
なんですかね。その導入する上での、まあ課題ですね、消費が結構多かったっていうのがあったりします。
@Guest 16:31
で、まあ、そういった意味で言うと、LINEポイントクラブ自体はちょっと。なんか、自分の反省ではもちろんあるんですけど、現在の観点でいう。やっぱ、間違った書き方、よくない書き方をしてる箇所っていうのは、非常に多くありました。と
@Guest 16:42
はいはいはいまとはいえ、それは時代によるものだから、仕方ないとは言えって感じですよね。ま
@Guest 16:47
とはいえですね。うんま、やっぱそこはまあ、その担当者のメンテナンス力っていうのも多分見られてると思いますし。はいま、そこがちゃんとちゃんとできてから、ちょっとか。反省点ではもちろんあります。
@Guest 16:58
で、
@Guest 16:58
ま、機能開発の。まあ、家庭でやっぱりよくあるのが複数の方に
@Guest 17:03
却する。はいはいはいま受け取ったデータに応じて、まいろんなデータ構造が返ってくるみたいなやつですよね。
@Guest 17:09
入れて何が書いてくるか、ぱっとみわかんないとか、やっぱそういうのはやっぱ多かったですし。まあ、挙動は問題ないんですけど、なんか潜在的な問題が
@Guest 17:18
で、はいはいはいは
@Guest 17:19
アイプスクのコンパイルーラー。なぜか起きるみたいなケースもなんかめちゃくちゃありましたね。
@Guest 17:23
ま、実際は使わないケースだけれども、そこで問題があるみたいな。
@Guest 17:27
うん、そうなんですよね。はいうん、うん、うん、うんま、ちょっとブラウザ上では正常に動いてるけども、タイプだとあ通らねえなみたいなのもやっぱあったりはしたんで
@Guest 17:35
まなので、えとま、ちょっと結論から言うと、ま。年月が長いサービスほど根本修正が必要になるような。課題だったり、障壁っていうのが
@Guest 17:44
すごい出てきていて、えでまあ
@Guest 17:47
ま。それこそ梱包修正となると、コスト自体も結構かかってきちゃうんで。まあななおかつ。実際のサービスに影響出ないように、作り直さないといけないっていうのもあったりするんで、まあ、慎重な対応というのが、まあ、今回求められましたね。
@Guest 18:01
まなので、ほんとに年月の長いサービスだと、そのマイグレーションにかかるコストっていうのは、もう高めになるって思っていただければ良いかなと思っています。
@Guest 18:09
そうですね、うん、
@Guest 18:10
逆に近年作られた。もうそれこそ、イマスクープと2015以上でま書かれた行動であれば、
@Guest 18:17
ま、その頃って作り方として、方は意識しないといけないみたいな。作り方って、結構浸透してきてた時期だと思うんで。
@Guest 18:24
ま、処理自体の根本修正っていうのは、そんなに少なくて済むんじゃないかなと思われています。
@Guest 18:30
まなので、ほんとにこの年代とか年ですよね。サービスのサービスの年によって、このマイグレーションにおける。障壁っていうのは変わってきて、それでコストも。
@Guest 18:41
その度合いによってかんでいくっていう感じかなって思っています。はい、
@Guest 18:46
そう
@Guest 18:46
そうですね、なかなかまとめるとっていう感じじゃないかもしれないですけど、既存のコードがまあ、そもそもどういう書かれ方をしていたかっていうま、視点が1個と、
@Guest 18:57
あとは、その自分たちがタイプ、スクリプトを入れるに対してゴールドする位置ですかね。うん、例えば、ガチガチに型で固めていかなきゃダメっていう人もいれば、まあ、とりあえずタイプスクリプトっていう環境があればいいよね。っていうチームもちろんあるだろうし、まあ、その2つ
@Guest 19:11
のま視点を見て、適切なマイグレーションコストって、まざっくり出せるんじゃないかなって僕も思いますね。
@Guest 19:18
た、確かにま、結構多分、タイプスクループと慎重派の人と、そうじゃない人の差って、
@Guest 19:23
あのゴールドするタイプスクリプトのコードがま、結構タイプスクリプトって、あの歴が長い人ほどガチガチに書くことをどうしてもあの、許容するって言ったらあれですけど、ガチガチじゃないとダメだよね。っていう風な人もいると思うんですけど、言ってしまえば。
@Guest 19:37
ただ、ストリクトとかがフォールスであっても、プリミティブ型レベルでのエラー
@Guest 19:42
の検地ぐらいはしてくれるわけですし、まあ、tsとして動くjsの行動を書くところからスタートすることも多分できると思うんで、多分そういったことのをま、これまで
@Guest 19:52
そのタイプスクプと書いてきてる人が伝えきれてなかった部分とか、まそこがり届ききってない部分も多分あって、そういうところで、適切なマイグレーションコストみたいなのを、身長派の人に伝えきれてないっていうところはあるかもしれないですよね。
@Guest 20:09
そうっすね、マイグレーションコストって考えると、あれっすね、
@Guest 20:14
ちょっと今回、実はこのマイグレーションコストって割とざっくり。このファイルがこんぐらいあるか、こんぐらいだろうみたいな計算でざっくり出しちゃってて、はいはい、細かい部分はもう作業者の採用で考えてねみたいな感じで、やっちゃってるんですよ、実は
@Guest 20:28
うんでま、それがあって、ざっくりコストになっちゃってるっていうのがちょっとあったりはするんですけど、
@Guest 20:33
まあ、ほんとに多分ま、こういう場とかで発表したりま、今後発表するっていう。なんか目標みたいのを立ててるんであれば、多分この段階で超細かく、その
@Guest 20:44
どういった問題があるかっていうのをディスト化した方が良かったかなって思っていて、今になってのちょっと反省点ですね。ちょっと勢いで始めちゃったっていうところ、
@Guest 20:53
確かに実際今さっきみたいな、その複数の方を返しうる、言うてるとかを考えると、多分500ファイルあったら鳴らすと、それこそい。1ファイル1個とか500個とかっていうのは全然え、古いサービスだとありそうですし、
@Guest 21:06
なんかコストとしては結構かかってくるかなと思いますし、特に今回の場合、最終的にステップ1から5をえー、全部満たして、ある程度タイプスプトらしい行動っていうのを目指し
@Guest 21:16
っていうところだったと思うんで、結構コストとしてはかかる。ええところはあありそうですもんね。
@Guest 21:21
そうですね、ま、ちょっとコストすればまま結局ちょっと想定値は割とあってはいたので、ま、そうですね。前回話した通り、一応2年まあ1年半計画が2年に同して、また1年半に戻ってくる
@Guest 21:34
みたいなこともあったんで、ま。ちょっと大体は合ってるかなって気はするんですけど、やっぱちょっとあれなんですよね。ディフ
@Guest 21:41
うへのマイグレーションの時期が結構ドタバタしてて、もう超大掛かりなマイグレーション対応だったってこともあって、その細かい導入障兵器部分。
@Guest 21:51
調査でにガンガン進めちゃったのはちょっと。今としても後悔してますし。まあ、例えばま1番大きいのはあれなんですよね。
@Guest 21:58
ビューのストアだったり、ビューファイルあるじゃないですか。はい、まあ正直導入消えと数える余地ないなって、もうそもそも直さないとなって感じになっちゃう。
@Guest 22:07
で、はいはいはい、
@Guest 22:08
見た瞬間にあ、これフルリファクター確定でみたいな感じ
@Guest 22:14
なんで、まあまあそういうのもあるんで、今となっては。まあ、性別なデータを算出できなかったことには、自分としては後悔しているんで、ま。ちょっとこれからやる方に伝えたいことを1点あって、
@Guest 22:25
多分ちゃんと発表するんであれば、多分この導入障壁数、マイグレーションでどのぐらいの。課題があるかっていうのは、
@Guest 22:33
1回出して、ちょっと高数換算。多分してもらった方がめちゃくちゃためになるデータになると思うんで、ちょっとみ、皆さんにそれをちょっと期待しております。
@Guest 22:45
まあ、でもちょっと今回の場合は、ポイントクラブって、前、あのあもんさんがあの外部のイベントで発表されてましたけど、ビルド周りの修正とか、ビュー自体のアップグレードとかも入っていたはずなんで、見積もり切れないレベルではあったと思うんで。
@Guest 22:59
そうですね、実際やりながらやっていくと、なんかどんどんどんどんあ、これもやなきゃ、あれもやんなきゃって。出てくるボタンって結構多いので、
@Guest 23:07
で、確かあれですよねb2.5のtsを入れる前のビーだったんで、それあげないといけなくて、
@Guest 23:13
あと、あの、ウェイパックとかの環境も整備しないといけないとこかなみたいな。あ、そうですね、はい、
@Guest 23:18
現実的になかなか見積もりづらそうなケースであったかなと思うんで、ちょっと。もしかしたら、ビルト環境とかは整ってるけど、コードがめちゃめちゃ古いみたいな。例があったら、是非導入商品考えてみみてもらえると、いろんな人の
@Guest 23:31
いい情報になるかもしれないんで、これ聞いてる人で、もしこれからタイプスルプス以降したいっていう人がいたら、ぜひちょっと寄与してほしいところですよね。そうですね、
@Guest 23:45
で、そうです。あ、なんかめちゃくちゃえっと喋っちゃったんですけど、まあ、とりあえずなんかマイグレーションはコストかかります。っていう話をさせてもらったんですが、
@Guest 23:53
そうですね、ちょっとちょうどコストパフォーマンスのコストの話でしたね。はい、ちょっと話戻して、えっと
@Guest 24:00
でまあ、パターンが2つあって、マイグレーションはコストかかります。って話はしたんですけど、
@Guest 24:06
これってタイプスクリプトが、コストかかるっていうよりは、正直な話。これ、マイグレーションだからコストかかるっていう話ではあるんで、
@Guest 24:13
これ逆に。タイプスクリプトっていうのは、一旦置いといて、バイグレーションっていう視点で見ると、すごい考え方変わってくるんですよね。うん、うん、はいで、
@Guest 24:23
普通のマイグレーションってかえ観点で見た場合って、javascriptからタイプスクリプトへの移行は。
@Guest 24:31
まあ、コストとあと作業服か実は低めで行けるんですよ。ほと比べた場合の話なんですけど、
@Guest 24:37
で、まちょっと事例で出すと、ちょうど。今LINEポイントクラブでは。サーバ側もマイグレーション実はやってるんですよ。
@Guest 24:44
ああ、そうなんですね、はい。
@Guest 24:45
マイグレーションを進めていて、どんなマイグレーションやってるかって言うと、今までパールで作られたアプリケーションをずっと使っていたんですよ。
@Guest 24:54
はいはい
@Guest 24:55
ま一部まアプリションもたくさんあるんで、その一部なんですけど、で、それを今回ことりにマイグレーションする対応っていうのを、今、サーバーサイドのメンバーで進めています。ああほほほうはい
@Guest 25:05
で、進めていてま。実際にどういう内容かって言うと、ま、どういう風にやったかって言うと、まず人員を約2倍に増やしてます。
@Guest 25:14
おお、面白い、
@Guest 25:15
めちゃくちゃ大状態です。なんで、まずえっとやったこととしては、全員を2倍に増やしました。はい、で、
@Guest 25:22
それから一応目標としては1年計画っていうことで目標されていますね。はい、でま、もちろん、フェイズって形で分けていて、
@Guest 25:31
ま、最初の半年で、そのパールのメインで動いているアプリケーションを、マイグレーション完了させるっていうのをはい、目標出していて、残りの半年で、
@Guest 25:40
サブの役割をしてるマイクロサービスが結構あったりするんで。はいはいはい、それのマイグレーションをか終わらせて、1年でマイグレーション完了させるっていうことで、今動いてます。
@Guest 25:49
はい、ああ、今ちょうどなうで動いてるとこなんですね。
@Guest 25:52
そうですね、今ちょうどなうで動いてますね。で、まやり方としては、ちょっと。皆さん、お分かりの通り、えっと
@Guest 25:58
まパールからコトに乗りこなんで。まず、パール側のアプリを一旦破棄して、はい、ゼロベースでほぼ同じ仕様で、ことりのアプリの構築っていうのは、今進めてる状態なんですよ。
@Guest 26:09
はいはいはいはいはいはい
@Guest 26:11
なんで、資産の休養できないんですよね。
@Guest 26:15
うん、まあ、そうですよね、
@Guest 26:16
ことりんには。なので、使用を見ながら、こう1回紙砕いて、ことりんの形で入れていくみたいな。作業をやっていて、
@Guest 26:25
で、今ちょっとほぼ同じ仕様って書いてあったんですけど、まあ、せっかくマイグレーションをやるっていうこともあるんで、
@Guest 26:31
ちょっと今、利用頻度の少ない機能だったりとか、メンテナンス性を高めるために、色々使用変更。ちょこっと入れてたりするんで、ほぼ同じ動きなんですけど、ま一部ちょっと
@Guest 26:43
なんだろう。運用改善のために入れてるっていう
@Guest 26:45
んま改善しつつ、大体同じようなアプリケーション今作ってるって感じなんですね。
@Guest 26:49
という感じですね。はい、なるほどなるほど
@Guest 26:51
で、まあ、今回のパールと小鳥の事例お聞きして、お分かりの通り。まあ、パールで作ってきた資産の流用ができない状態ってなってるのがはいと。まあ、今回のサーバーサイドやってるも一般的な。マイグレーションですね。は話です。はい
@Guest 27:06
で、それに対して、じゃあタイプスクリプトどうなの。っていう比較の話なんですけど、まず、javascriptから、タイプスクリプトへのマイグレーションに関しては、
@Guest 27:15
既存アプリ維持したまま並行で移行、作業行うことができます。なので、jsとts共存して、作ることが可能っていうのが1番大きいところとしてあります。
@Guest 27:26
まなので、
@Guest 27:28
なんすかね、期間はまあボリュームにもよるんですよ。期間は中長期になってしまうけれども、今普通のマイグレーションは、もう稼働コストフルで突っ込んでるんですよ。
@Guest 27:38
はいはいはい、そうですよね、うん、
@Guest 27:40
フルで突っ込んで、
@Guest 27:42
まあ、あの何よりも早く移行終わらせないと、フィーチャーの開発ができないですもんね、新機能
@Guest 27:47
もうその通りでま、そういうのもあるんで。フル稼働人員増加でバンってやってるのに対して、
@Guest 27:53
タイプスクリプトは。今どうやってるかっていうと、ほんと。1日フルとかじゃなくて、1日のスーパーセントを利用して、タイプスクリプトへのマイグレーションを行っているっていう感じですね。
@Guest 28:03
ま、時期に関しては、まあ、ポイントとかだったら2年とかで、中長期計画でやってるって感じですね。なんで、言い方あるかもしれないですけど、まったりできます。
@Guest 28:12
ま、そうですね、そうですね、間違いないですね、
@Guest 28:14
そうすね、まったりできるような感じで、ま、あとは、並行して進められるんで、ま、アプリを破壊してしまう危険性っていうのが非常に少なくて、あとは、スケジュールとかも。結構柔軟に調整しやすいんですよ。
@Guest 28:26
ま、なぜかって言うと、この日にリリースしないときは、開発が進められないみたいな。ポイントがないんで。
@Guest 28:33
そうですよね。うん、うん、うんで、
@Guest 28:36
そういった意味で言うと、まあ、マイグレーションという観点で言うと、もうほんとにタイプスクリプトっていうのは、ま、そのコスト面のさだったり、あとは、人員負担を最小限に抑えて進められるっていうのが、最大のメリットかなって、私個人としては思ってます。
@Guest 28:50
確かに確かにまあそのなんでしょう。フィーチャー開発を止めないでいいですし、まあ、もちろん人も大量に投入しないといけないってわけでもないですし、
@Guest 28:58
まあとあれですかね。特にあの1から書くってなったら、例えば9aとかにももう1回アプリケーション全部見てもらわないといけないとかってなるかなと思うんですけど、
@Guest 29:06
ts以降とかであったら、ま関係する。フィーチャーの部分から、どんどん移行していくとかによって、少しずつ見ていってもらったりもできると思うんで。
@Guest 29:13
まあ、全体的にコストを減らせるっていうのは、まかなりタイプスといいとこですかね。
@Guest 29:18
そうですね、もう最大の魅力かなって自分は思ってますね。はい、まなので、今、コストパフォーマンスのコストの部分で悩んでる方いらっしゃいましたら、
@Guest 29:26
1回タイプスクリプトがコストかかるっていう見方ではなくって、もうマイグレーションだから、コストはかかるで、マイグレションでもタイプスクルトは。コスト安いし、人に優しいっていうのを、1回ちょっと
@Guest 29:37
発想を切り替えてもらうといいかなって。私個人としては思っています。はい、
@Guest 29:42
確かに確かにちなみに今の話聞いてて、あもんさん的には大体アグリーって感じですか。
@Guest 29:47
そうですね、基本的にはあのまあありかなって感じではあるんですけど、はいま1点だけちょっとあの抑えておかなきゃいけないのが。はいまあ、パールからコトリンっていうことでま。若干なんでしょうね。
@Guest 29:58
まあ、本来であれば、jvからコトリンっていう。まあ、あの似たようなところでの移行っていうのが、まあ、ポピュラーかなって風には思うので、ちょっとそこの
@Guest 30:05
なんでしょう。プライントポイントクラブ内では、サーバーとフロントで、まあ、こういう大きな違いが出ましたよ。っていうところぐらいの比較で行ってみてもらえるといいかなと思います。ああ、確かにそ、
@Guest 30:15
確かにそうですね、まあ、そういった意味ではまあ、jvm言語も同じような良さがありますよね。逆に言うと、
@Guest 30:22
うんうん、例えばなんでしょう。5個とかま、そういった言語とかって、それま5にしろ、ルビにしろ、パイソンにしろ、一般的にバックエンドで使われる言語って、それぞれで5完成はないかなと思うんですけど、ジャバコトリンとかはあれですよね。jvmに載ってるんで、お互いに
@Guest 30:36
マイグレーションしやすいみたいなのは、フロントのjstsの関係と近いかもしれないですね。
@Guest 30:42
そうですね、なんでそこは結構あの理解してもらいやすいポイントでもあるかなと思ったりはしましたね。
@Guest 30:48
これ、ちょっとイメージしやすい方は、すごいイメージしやすいかも。
@Guest 30:50
そうですね、バックエンドの人からすると、javactrnとかと同じようなまjvm言語間でのえ、移行とか、まあと、javakrskaraにえ、移行したえ、事例とかもよく聞くかなと思うんですけど、ああいうケースと同じ
@Guest 31:03
くらいのコスト感でできるっていう風にイメージしてもらえるといいかもしれないですね。
@Guest 31:10
まあ、あとはちょっとコストの話長くなっちゃったんですけど、コストパフォーマンスでいうちょっとパフォーマンスの受けられる恩恵の話、ちょっとしていこうかなと思っています。はい
@Guest 31:22
ま、コストかけるんだったら、やっぱパフォーマンス出したいっていう思いは、やっぱ強い方って結構多くてま。それが実際に出せるのかどうかっていう部分
@Guest 31:29
が結構不安に思ってる方いると思うんですけど。はい、まあ、LINEポイントクラブでは、タイプスクリートのまあ、恩恵を使って、エンジェルのパフォーマンスを出すために、正直し工夫。結構色々やってます。
@Guest 31:41
はい、だから前回話していた。プルリクエストでのコス。一気に減ったっていう
@Guest 31:46
話とかもあったと思うんですけど。はい、あれに関しては、まあ、エンジニアリング概念はちょっとなっちゃうかもしれないですけど、プルリクエストの運用方法を一気に全部改善してとか、そういったことで結構やってたんですよね。はい、
@Guest 31:57
そういった形でちょっと常にやっている業務で、工夫できるポイントがあってのは、もうバンバンバンバン工夫していってまより効果を高めていくっていうのを結構やってたりはします。
@Guest 32:07
で、まあこれちょっとこれ完全に持論的なお話にはなっちゃうんですけど、自分、個人的にはタイプスクールトを使いこなせれば恩恵がありますという考え方持っています。
@Guest 32:16
タイプスクートにはもちろん、優秀な機能すごい多く入っていてすごいす。自分も助けられてるんですけど。ただ、そこだけに依存する考え方を持ってしまうと、
@Guest 32:25
実はタイプスクのおかげで、パフォーマンスは出てるパフォーマンスは出ているけど、なんか体感とか実感味わえないなみたいな。そういう問題が結構起きうると、自分としては考えています。
@Guest 32:35
なので、その目標値の設定だったり、まあ人がやるべき。えっともですね、目標値の設定とか工夫ですね。それをちょっと行った際に、その体感できる恩恵っていうのはやっぱ最小化してきますし、
@Guest 32:47
工夫という努力があるからこそ、それを徹底的に行うことによって体感できる恩恵も得られると私個人として思ってます。
@Guest 32:55
ま、体会以外にも実際の恩恵自体も多分だ。前後はしてくるとは思うんですけどね。
@Guest 33:00
はい、
@Guest 33:00
なので、うん、個人的には、そのタイプスクリプトだけに依存せずに、自分たちの工夫っていうのをちゃんと持つことによって、
@Guest 33:09
体感として、その恩恵がえっと味わえたり、まあとは実際にその恩恵自体も。パフォーマンス最大化できると思っています。はい、
@Guest 33:18
あとはまあそれに加えて結構重要なのが
@Guest 33:21
目線かなと思っていて、体感を味わう上では、長期的な成果を求めるか、短期的な成果を求めるかっていう。まあ、目線があると思うんですけど、
@Guest 33:31
タイプスクリートの場合って、まあ前者で話した。ま、長期的な成果に含まれると思うんですよね。なので、うん。
@Guest 33:39
なのであれ、長期的な成果を求める思考を持たなければ、恩恵が体感しにくいのが一応タイプスクルトの特徴としてあるんじゃないかなって。私個人としては思っているので。
@Guest 33:47
なので、今体感薄い方とか多分いらっしゃると思うんですよ。
@Guest 33:51
ま、薄い方がいらっしゃる場合は、ちょっと短期的な。目線っていうのをちょっとやめてみて、長期的に数年後を見据えて、数年後に
@Guest 34:01
その体感を味わうみたいな。形のスタンスにえっとしていくと、その体幹値っていうのがすごい変わってくるかなって思っています。
@Guest 34:08
はいま、実際に自分もそういう考え方を切り替えたことによって、
@Guest 34:13
実際に恩恵がもらってるっていう体感自体だいぶ得られているんで、多分そこの考え方変えるだけでもだいぶ変わってくるかなって気はしてますね。
@Guest 34:21
確かに確かにま結構使い慣れていたりとか、普段からタイプスクープトを書いてる人っていう感じだと、その短期的にも、例えばコード書く時の保管が便利だとか、まあなんでしょう。
@Guest 34:31
その場で開発効率が単純に上がっているっていう風に、短期的にもえ実感できるケースも多いかなと思うんですけど、ま、そういう場合じゃないケースではまひとまず長期的に考えて、
@Guest 34:41
まあ、よくもう1ヶ月後の行動は自分の行動じゃないと思いますし、そういった時に困ったりするっていうところがま、それがいい。1か月じゃなくて、1年とか数年て単位になってくると、どんどん多分わからない行動も増えてくるって考えると、そういう長期的な恩恵とかを考えると
@Guest 34:56
いいかもしれないですよね。
@Guest 34:58
あ、そうっすよね、では、谷さんってあれ
@Guest 35:03
割となんか短期的にも成果とか体感感じるタイプですか。
@Guest 35:08
あ、あまそうですね、短期的にも、コードが書くときの生産性自体は結構高まるかなっていう風な印象はありますかね。
@Guest 35:15
ま、特にAPIとの繋ぎ込みとかだと、かなりデータ構造と開発中でも変わりやすいところではありますし。ああいうところってタイプとかしてたら、気づきづらいとかもあると思うんで、そういう細かなところでも結構
@Guest 35:26
え恩恵感じると思いますね。やっぱり結構アーキテクチャー的な恩恵っていう長期的な恩恵がメインではあるとは思うん
@Guest 35:32
ですけど、一方でそういうケアレスミスみたいなのが防げるんで、単純な生産性も上がるかな、とも気を体感はできますね。
@Guest 35:39
あれ、アモンさんとかのタイプあれま、アンギラ時代からずっとやってたじゃないですか、はい、結構体感感じる方ではあります。
@Guest 35:47
そうですね、まあ基本的にはそうですね、ま、ドキュメントを見なくても、まタイプ自体にな。まあ、ドキュメントみたいなところもあるので、
@Guest 35:57
なんかなんとなくその保管のあれを見てやって、なんかうまく行くみたいな、そのまあなんでしょうね。とりあえず、触ってみるのに、すごい楽だなって感じるようにはなりましたね。そのライブラリーを使うにしろな、なんか、そのタイプスクリプトできたものを使う時は
@Guest 36:12
結構そうですね。もう、元々方がビルトインに入っているので、うん、うん、扱う際には結構楽だなって思ってることは
@Guest 36:20
確かになんか結構ガブライブラリを使うのが楽になるのはありますよね。なんかこう。私って元々
@Guest 36:26
あの一時期ルビー書いてた時があったんですけど、ルビーとかって、やっぱりジェムのコード見に行ったり、ドキュメント見に行かないと、何のAPIが生えてるかわからないみたいなのが結構よくあったんですけど、
@Guest 36:37
tsとかだと、
@Guest 36:38
ある程度使ったことがある。ライブラリであったら、ま細かいAPIの順番を覚えていたりしなくても、全部保管が聞いてくれたりとか、方で分かっていたりするんで、書きやすくなったりとかは
@Guest 36:48
あるかなと思いますね。単純に、ライブラリのドキュメント参照にしに行く時間が減るというか。
@Guest 36:53
そうです。そうです、
@Guest 36:54
はい、ありますよね、うん、うん、そうですね、
@Guest 36:58
なるほどっすねあちょさ参考になった
@Guest 37:04
まそうですね、まあ、なんでまあ自分はすごいなんすかね。半年ぐらい。コストはどうなんだろうって悩み続けた人でもあるんで、
@Guest 37:14
まあ、。長期的な成果
@Guest 37:16
ていう目線に変えたことによって、一応そのなんかね。体感を得られたっていう形にはなってるんですけど、まあ、やっぱちょっとは谷さんだったり、アモンさんの場合って、やっぱタイプスクートの経験もすごい多く積んでて、
@Guest 37:28
あと、恩恵に関しても、多分相当自問自答してますよね。で、消化して
@Guest 37:32
やってるイメージもやっぱあったりはするんで、やっぱなんか、そういった形でちゃんとコミットしてる方とかだと、やっぱ短期的な成果も超実感できるんだなっていうのを、なんか今の話聞いててすごい思いましたね。はい
@Guest 37:44
まけど、うん、そうですね、ちょっと喋りすぎましたけど、ま、コスト、ファーマンスの話、こんなところですね。
@Guest 37:49
うん、うん、うん、うん、うん、
@Guest 37:50
なるほどなるほど、ま全体の主張としてはあれですかね。まあ、そのタイプスクリプトって、やっぱりタイプスクリプトっていうものに対して、
@Guest 37:57
やっぱり新しい概念であったりだとか、ま、その性的片付けとかの印象とかによって、結構コストがかかっちゃうって印象がありますけど、それって、どっちかっていうタイプ。スクリプトの問題っていうよりは、
@Guest 38:06
既存のコートとかがある時のマイグレーションコストの話であって、ま。そこが技術によってちょっと変わるっていう部分であって、まただし、まあそのマギレーションってか、観点で言うと、まあ結構あれですかね。その
@Guest 38:19
jsのコードを残しながら移行していけるっていうところでえ、観点で見ると、全然タイプスクープとのコスコストっていうのは、まあ、コストは多少かかるかもしれないけれども、それ以上のパフォーマンスが
@Guest 38:29
帰ってくるっていうところですかね。特に今、最後にきょうさんがおっしゃって、えいたように、その長期的なえ、成果とかま、短期的な成果とか、どういったところか
@Guest 38:38
がえ、自分たちが求めてるんだっけっていうのを考えながらやることによって、まあ結構どんどんパフォーマンスをえーいい形に保ちつつま考え続けることによって、
@Guest 38:48
体感していけるっていうところですかね。
@Guest 38:51
そうっすね、一応話まとめだとま、そういう内容になりますね。はい、
@Guest 38:57
ちょっと最後にえ、私の方からきさんに質問させていただければなと思うんですけど、今回LINEポイントクラブの例だとま、数値目標を出しながら、2年え半かけてペイするっていう前提で、えかつ、マイグレション期間を1年半と
@Guest 39:10
しいて、まあコスパ的に十分だろうっていうところで、タイプスクープとのマイグレーションを行うことができたかなと思う。
@Guest 39:16
ですけど、まあ、実際そういう風に事前リサーチみたいなのをした結果、まこういったけ
@Guest 39:21
エスだとかま、こんなえ数値が出たりした場合は、まtsの導入。え、ちょっと慎重になった方がいいかな。みたいなケースは逆にあるのかなっていうのが、私の中で気になったんで、ちょっと教えていただいてもよろしいでしょうか。
@Guest 39:31
あ、なるほどすね、はい、ちょっとこれ完全に自分の観点にはなっちゃうんですが、はい、1ケースだけちょっとシミュレーションしてありましたね
@Guest 39:40
ああ、はいはいはい、お願いしますぜひ、
@Guest 39:43
この内容ってエピソード55でも、軽く触れてた内容だったと思うんですけど、はいはい、今から説明する条件3つが完全一致した場合は、
@Guest 39:53
ちょっとさすがに自分でも入れるとためらうなっていうのが、あったりしますんで、その条件ちょっとお伝えします。はい、
@Guest 39:59
まず1つ目がタイプスクリプトが新規アプリケーション作成ではなく、マイグレーション案件である場合、
@Guest 40:06
はいはいはい、移行後のコストがかかる場合。
@Guest 40:08
そうですねマイグレーションの場合ですね、はい
@Guest 40:10
までまなおかつ。そっからのさ。判断としては、大型アプリで、歴史も長いって場合はそれなりにコストが見込まれるんで、まず、そのコストをちゃんと出した方がいいっていう。
@Guest 40:20
はいはいはいはいはい
@Guest 40:21
で。まず、マイグレーション案件で大型である。で、2つ目の条件。これが多分1番でかいんですけど、はい、チームではなく、1人で担当している。
@Guest 40:29
はいはいはい
@Guest 40:30
ま、そうですね。LINEポイントの場合って、チームでやるためっていう理由のも、タイプスクリプトを入れていきましょう。っていうことでも、チームに
@Guest 40:39
なんすかね。貢献するために、やっぱタイプスを入れるっていう形があるんですけど、1人だと多分その考え方は成り立たないんですよね。はいはいはい
@Guest 40:47
な、なんで、1人でサービス担当してて、人員増加の計画は全くない。あと、プラス引き続き予定も全くないっていう状態での場合だと、ちょっと考えた方がいいかなと思ってます。なんで、チームではなく、1人である場合ですね。2つ
@Guest 41:02
1人であっても、もし引き継ぎ予定とかがある場合は、引き継ぎ先のえー人のコストをへの負担を減らすって意味。でも、まあギリギリありかなみたいなところは
@Guest 41:11
あ、もう全然そうですね、はいまひ
@Guest 41:14
まあそうですね、なんで引き継ぎ全くないはやばいですけど、まあるんであれば、もうその時点でタイプスクド入れた方がいいとは自分は思ってます。ああ、なるほどなるほど、はい、もちろん
@Guest 41:23
で、まあ1人だとあとコスト回収期間長くなるんですよね。あれ、ポイントクラブが2年2か月回収でやってたんですけど、これ1人に計算すると、4年4か月かかるんですよ。
@Guest 41:33
まあまあそうですよねや倍単純に単純に倍ぐらいはかかるって話になりますもんね。
@Guest 41:38
単純に人数増えると、もっと3分の1とか4分の1で見たりするんですけど、まあ、なんで一応そういった面で見てもちょっと1人で担当してる場合は、ちょっと。1回計算してみた方がいいかもしんないですね。
@Guest 41:49
はいはい、はい、確かにで
@Guest 41:50
でかで、あと3つの条件これも勝つなんですけど、かつ。サービスの未来が大
@Guest 41:55
ちょっと言い方が悪、
@Guest 41:56
まあまあ、もうクズが確定しているとか
@Guest 41:59
あ、当たりですね。もうちょっとはかとか、まあ、ちょっとやっぱ見てるで色んな方あると思うんですけど、早期でサービスクローされるんじゃないかっていうサービスに関しては、
@Guest 42:07
ちょっと辛いかなと思っていてま。何かと言うと、マイグレーション案件で、なおかつ1人で担当教えて。なおかつサービスの未来がないってなると、
@Guest 42:16
さっき言ってた。4年4か月のコスト回収自体が終わらないままサービス終わるんで。
@Guest 42:22
はい、そうですよね。そうですね、
@Guest 42:24
だから、まあ、そこですね、なんで自分が。自分であれば、この3つの条件が揃った時はちょっとちょっと考えましょうか。ってことで、タイプスクールの導入をちょっと。ストップかけるかもしれないですね。
@Guest 42:35
なので、ま、その場合に自分やることとしては、まあ、マイグレーションコストをまず算出します。まあ
@Guest 42:41
で、あとはコスト回収期間を算出して、あとはコスト回収期間までにサービスが存在してるかっていうのをジャッチした上で、うんさすがにサービスが存在してないってなるんだったら、まあ、ちょっと取りやめっていう形では多分取ると思いますね。
@Guest 42:54
サービスが存在しているかで、そん存在していないだろうっていうのはかなり悲しい状況ではありますけど。
@Guest 43:00
そうですね、もう、まあ自分の力で10年持たせるっていう着替えがある方であれば、もう全然だいぶつ
@Guest 43:09
俺の力があればみたいな。はいで、なので、感覚で言うと、なんかよくある考え方って、サービスにふさわしい技術がタイプスクリプトかっていう。決め方をするじゃない。
@Guest 43:19
はいはいはいはいはい、なんか
@Guest 43:21
今の話ちょっとまとめるとどっちかって言うと、タイプスクールトにふさわしいサービスかっていうジャッチをしてる感じなんですよね。はいことしては、
@Guest 43:28
なんで、そういった目線でちょっとこの3つの部分が
@Guest 43:33
導入する上でのなんだろう。基準を満たしてるか、満たしていないかっていうのを多分見た方がいいかなって思っています。はい、
@Guest 43:44
あともう1個僕の方でもちょっと気になったのがちょっと。別のプロジェクトで、あのタイプスクリップを入れる。入れないっていう議論で、ちょっと盛り上がってたのを見てたんですけど、
@Guest 43:53
あのフロントエンド
@Guest 43:55
の人だけがいな。いえ、例えば、サーバー側の人間がいるみたいな。プロジェクトで、タイプスクリプトを入れるとかっていう場合って、この辺はどう思いますか。
@Guest 44:05
あ、そうっすね、あれまこちらに関しては、全然。自分としては入れてオッケーではあるんですが、
@Guest 44:12
一言言うんだら、マジで注意が必要ですね。ここの部分。
@Guest 44:16
フロントエンド専門書でなおかつ教えてくれる人がいるから。6か月で。普通の作業スピードに戻るっていうことができたんですけど、
@Guest 44:25
それが、フロントエンド専門ョブじゃない例えば、デザイナー兼まコーダーだったり、まあ、フロントエンド担当
@Guest 44:32
ていう方々がいたりとか、あとは、サーバーケフロントエンド担当って方がいた場合、ちょっと学習コストの部分が変わってきて
@Guest 44:39
ま。例えば、まあ、デザイナー県フロントエンドの場合だと、まずデザインのことを勉強しないといけない。なおかつし、業務上タイプスクールやんないといけないってことで、学習範囲が広がって、
@Guest 44:49
あとはまあ覚えることが増えるんで、学習負荷も高まってくるんですよ。
@Guest 44:53
そうですね、
@Guest 44:54
で、それがあるんで
@Guest 44:57
なんすかね。学習に対してのモチベーションとかもま、例えば、デザイナーとフロントエンド県だった場合、デザインの勉強しないのに、タイプスクルトの勉強もしないといけないってことで、多分そこのモチベーションというのも、やっぱ専門上部と全然変わってくると思うんですよね。うん、うん
@Guest 45:11
で、そういった部分があるんで、なんすかね。まず、学習コストって部分にすごい気を付けた方がいいと思っていて、
@Guest 45:20
多分1番重要なのはそういった。バックグラウンドを持ってる方々に対して、タイプスクリットをちゃんと教育する。体制みたいのは、ちょっとちゃんと作っていかないと、多分これ。
@Guest 45:32
何も考えずにやると、絶対ちょっと失敗に繋がる可能性はちょっとありそうですね。はい、
@Guest 45:37
うん、うん、なるほどですね。
@Guest 45:39
うん、人のストレスとか負荷が高まってしまうというのがあったりはすると思うので、ま、その学習範囲が広がるっていう意味ですね。
@Guest 45:46
ま、それがあるので、まずタイプスクートでも、
@Guest 45:51
なんすかね。最初はちょっとこのレベルで、ちょっと最小単位で、あなたはここのファイルだけいじってくださいで、このやつだけやってくださいみたいな感じで、どんどんステップアップするような。
@Guest 46:01
そうですね、作業体制だったり、教育体制っていうのを作ることをおすすめしますね。ま、あとは、勉強会やったりとか、そういったことをやらないと
@Guest 46:10
なんすかね。途中でちょっと気がめいてしまうこう。デザイナー券、フロントエンドの方もいますし、多分、サーバーサイド権、フロントとかも多分出てくるとは思うので。ま、そこをちゃんと考えてやれば、うまくいくんで
@Guest 46:23
ま。教育はちゃんと考えないといけないっていうのが一応結論ですね。
@Guest 46:26
はい、ありがとうございます。
@Guest 46:29
いや、ちょっとえ、今結構話も長くなってきちゃったんで、最後私の方から1つだけ聞きたいなと思うんですけど、
@Guest 46:36
あの、結構今回のLINE社内の話でも、このポイントクラブを始めとして、結構ts以降の対応ってのは増えてきてるかなと思う。
@Guest 46:44
ですけど、ま、結構。今はまだタイプスフトを使いたい人が増えてはいるけれども。まだ身長派の人も多いかなっていうえ、状況ではあるかなと思うんですけど。ま、tsが当たり前というか、ts前提みたいな感じ
@Guest 46:57
にもこれからなっていきそうですかね。
@Guest 47:00
相当などで返しない限りは、もう相当高確率で、タイプスクリプトが当たり前みたいな。世界は来ると思っています。
@Guest 47:06
ま、なんかそれで言うと、自分が学生時代に在籍していた母校で、
@Guest 47:12
新宿にある。日本電子専門学校のウェブデザイン科っていうまあ、学科があるんですよ。はいはいはいはいはいはい
@Guest 47:18
で、そこにちょっと先日遊びに行った時に、obとか先生たちとちょっと色々話してたんですけど、
@Guest 47:24
まず、先生たちから、来年のカリキュラムにタイプスクリプトを入れる予定があるってことで。今めちゃくちゃ検討してるって話。
@Guest 47:31
おお、そうなんですね、なるほど、なるほど、じゃあ、もうカリキュラムには今入っていく感じにもなりつつあるってとこなんですね。
@Guest 47:38
あ、そうなんですよね、で、まだ一応予定っていう話ではあったんですけど、まあ、多分タイプスクートを入れるっていう方向性は、多分すごい固まってるとは思うんですよ。はいはいはい、
@Guest 47:48
なんか今って結構ビュートリアクトの実践経験あるけれども。js使ったドムソーサーの実践経験がないみたいな方が増えてきて、結
@Guest 47:57
増えてますよね。
@Guest 47:59
あ、やっぱ増えてるんですか。そうですね、
@Guest 48:00
増えてると思いますね
@Guest 48:02
なるほどですね、で、まビアリアクターが普及して、まあ、そういうことになったので、それ考えると、多分今後、あと1年2年ぐらいで、
@Guest 48:12
タイプスクリプトの経験あるけれども、javaスクリプトの経験がないっていうか、多分現れると思うんですよね。自分
@Guest 48:18
なので、タイプスクリート自体は来るかなって。私個人として思っていてま。なので、LINEポイントクラブは、タイプスクトへのマイグレーションを。早めにやってるっていうのも、実際あ、
@Guest 48:27
はいはいはい、なるほど、なるほど、
@Guest 48:29
そういう人たちが増えた時の未来に備えて、準備するっていう意味合いっていうのもすごいありますね。
@Guest 48:35
いや、もうでもほんとあと少しって感じですかね。
@Guest 48:38
そうっすね、多分思ったよりすぐ来るんじゃないですかね。これほんとにうん、
@Guest 48:44
結構これからが楽しみですね
@Guest 48:52
というわけで、今回はえータイプスクリプトのえ導入に当たるまメリットやコストかについての話を。今さん、あもんさんお2人と一緒に話していきました。
@Guest 49:02
LINE株式会社ではですねえ、このようなフロントエンドに関するえ、議論やディスカッションなどをえー、日々行っております。
@Guest 49:09
毎週金曜日にですね、社内で勉強会を行っておりまして、まそこの勉強会で話した内容とはえ、これまでもいて、インサイトで何度か発信してきたことがあるので、これからも、えー、ライブの話をどんどん出していければと思います。
@Guest 49:22
またですね、このポッドキャストを聞いて、え、ラインに興味を持ってくださった方は、え、ショーノート再下部にあります。え、求人のイングの方から、ぜひぜひカジュアル面なんでもご連絡いただければと思います。
@Guest 49:33
今はズムの方で行っておりますので、え、お時間のえ空いている時に、え、30分や1時間の面談でも構いませんので、ぜひぜひえご連絡いただければと思っております。
@Guest 49:44
それでは本日はえ、先週にえからまたがって、タイプスクリプト以降の話の続編をしていきました。え、お聞きいただき、ありがとうございました。
