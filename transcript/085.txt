@Guest 00:01
こんにちは、UITのポテトフォーディです。
@Guest 00:04
え、ユーザーインターフェイスとテクノロジーアする、開発者のためのウィークリーポンド、キャストUIT、インサイド。今週も始めたいと思います。
@Guest 00:13
え、今回はですねゲストにえーUITの井上さん、いくのさん、そして、セスさんの3名をお呼びして、
@Guest 00:20
え、lineスケジュールのえ、リニューアルの中で行った開発の工夫について語っていただきたいと思います。え、3名とも本日はよろしくお願いいたします、
@Guest 00:30
お願いします
@Guest 00:31
お願いします。
@Guest 00:33
さてえということで、今回はえ、前回の前回、え、3月のUITミートアップでも
@Guest 00:40
え、お話いただいたえ、lineスケジュールのリニューアルについて、え、当時え、ミュートアップで発表。だいた
@Guest 00:47
え、いくのさんに加え、井上さん、潜水さんも同じ開発メンバー2人をえ交えて語っていきたいのですけれども、
@Guest 00:53
え、まず初めにいくのさんの方で、え。lineスケジュールのリニューアルについて、簡単に説明いただいてもよろしいでしょうか。
@Guest 01:00
はいえ、昨年lineスケジュールをリニューアルしたのですが、えっと、そのリニューアルはまずlineがwebプラットフォームを移し替えるというのは
@Guest 01:10
きっかけで、今回は行いました。え、lineスケジュールは、6年前に作られたコードベースは、えっと、主にメンテナンスされたままだったので、
@Guest 01:19
えっと、かなりレガシにもなってたので、もうこの機会に全部リニュアルをしてしまおうとなって、
@Guest 01:25
え、大体、昨年の10月から2か月ぐらいで、丸ごとフルリニューアルをしました。
@Guest 01:32
えっと、詳細については、え、tミートアップで語っているので、ぜひそちらもご覧ください。
@Guest 01:38
はい、ありがとうございますま、結構ですね使った技術がどういったものを使ったかとか、まあ、リニューアルにするにあたって
@Guest 01:45
意識したことみたいなところにつきまして。はえ、簡単にえ、ここでは話しておきます。けれど、もまより詳細の方はUITミートアップの方で語られておりますので、ぜひぜひ皆様。えー、シノートの方に、
@Guest 01:56
えー。youtubeへのゆうurlがありますので、えぜひひ見ていただければと思います。
@Guest 02:05
では、今日のえ、メインコンテンツとなりますけれど、もえ、今回ですね。lineスケジュールのリニューアルというところで、まあ、基本的に提供するサービスの機能はそのままにえ、技術的な部分で、まあ、lineの
@Guest 02:18
え、ウェブアップキマンを変えつつ、全体的にコードベースも発信するっていうところがえ、あったかなと思うんですけれど、も
@Guest 02:24
え、やはりですね。結構こういったリニューアル系って、まあ、こういった機械だからこそできる技術的な
@Guest 02:30
え、何かした挑戦だとか、まあ、えー、あるいはこうした方がいいんじゃないかっていうところのえー、改善案みたいなのを
@Guest 02:36
ええ、思いっきり取り込めるっていうところがあるかなと思っております。
@Guest 02:40
え、今日はですねえ、皆さんえー、3名とも。えっと、linenewsの開発を普段行っているメンバーでもあるかなと思いますので、まあ、そこと比較してっていうところも含めて、え、今回
@Guest 02:51
えリニューアルだからこそできた。改善とか、まあ、取り組みみたいなのがあったら聞いていきたいなと思っております。
@Guest 02:58
では、まあ、せっかくなんで結構いくのさんにはミートアップでも話していただきましたし、井上さんからなんかあれば聞こうかなと思うんですけど、井上さんなんかありますかね。
@Guest 03:07
そうですね、あの、やっぱチャレンジするところが大きかったんで、色々開発としては、チャレンジしたい。
@Guest 03:15
あの、リニューアルっていう最終的な、何か作る成果物っていうのはもう決まってたんで、それに向けてニュースでは取り入れないものとしては、ストーリーブックの
@Guest 03:25
あの導入があげられますね。こちらは、多分、ビットアップの方でも話されたと思うんですけど、スケジュール自体は結構
@Guest 03:34
なんて言うんですかね。他の今まであの触ってきたメンバーみたいなのも
@Guest 03:40
結構曖昧で、どの人が今後このにあのスケジュールに着くかっていうのが分からない状況ではあったんで、結構デザイン
@Guest 03:49
ベース、コンポーネントベースで、uiのコンポーネントベースで、どういうものがスケジュールで使われて、どういうデザインはあのスタイル当てられてるかっていうのを一発で見え見えるような形で
@Guest 03:59
表現したくて、色々あったんですけど、まあ、ストーリーブックが結構有名なんで、導入してで、コンポーネントプレゼンテーション層のあの、ほんとに機能
@Guest 04:10
っていうよりも、表示部分のコンポーネントは作るときは、必ずあのコンポストーリーブックなストーリーを作るっていうルールで
@Guest 04:18
運用して実装したんで、結構の数のuyコンポーネントがストーリーのところで表示されてて、結構力を入れたポイントではありますね。
@Guest 04:27
ああ、なるほどなるほど
@Guest 04:29
え、結構ストーリーブックって、後追いになりがちなところが多いかなと思うんですけど、まあ、初めの方から結構そのストーリーを前提として開発するっていうルールにしてみたっていうところですかね。そうですね、
@Guest 04:42
そうですね、なんか、プルリクエストのテンプレートのところでも、チェックリストをこうデフォルトでつけておいて、こうストーリーブックを作ったかっていう項目をちゃんと作ったので、
@Guest 04:52
割と運用はできていたんですけど、えっと、途中からはちょっとおざりになってしまって、なんか、管理がそうですね。
@Guest 05:02
コンポイントを作成するときは、ともかく、変更するときは、
@Guest 05:07
怖くて若干下ってしまったかなと思いますね。そうですね、
@Guest 05:12
なんか、チェックリストあったって話ですけど、なんかそこは
@Guest 05:15
どうなんですか。結構そのチェックはしてなくて、なんかまチェックはしてるけど、コメントの方にここ追従できてないです。って書いてあるような感じだったんですかね。更新の場合って、
@Guest 05:26
というか、なんというか、えっと、デビューの際にいちいちストーリーブックまで、チェックをデビューはの方は捨てなかったのが大きいですね。けな、
@Guest 05:35
なるほどな、
@Guest 05:36
主に、そのチェックリストは、そのレビューを作った人がつけるものだったので。
@Guest 05:42
そうですね、レビューの観点にあまり含んでなかったというのが大きいですね。なるほど、なるほど、
@Guest 05:48
あとはあれもありますねあの、ストーリーブック
@Guest 05:52
の追加は、結構目に入りやすいですね。今回コンポネント入れたんで追加する。はいはい、入れやすいんですけど、ストーリーブック自体はciに
@Guest 06:00
あのリントとかかけてなかったんで、変更すると、例えばプロプス変更するだけで、寺が出ちゃって、ストーリーブックだけ落ちてるみたいなケースは
@Guest 06:09
ちょっとありましたね。だから、そこらへんああ、見直しはもう少し必要だったかなとは思ってます。
@Guest 06:15
潜水さんはどうです
@Guest 06:17
そうっすね、ストーリーブック、結構3名とも、その開発当初から結構バラバラな書き方してたんですよね。
@Guest 06:26
なんか、書き方統一できてなかったところが、ちょっと反省かなと思ってますね。で、それに関しては、開発終わって、リリース終わってから
@Guest 06:36
おふふ。僕以外の2人はニュースの開発に戻ったんですけれど、僕はしばらくまだスケジュールにいて、そん時にストーリーブックの
@Guest 06:44
書き方みたいなのを揃えたりとかはしてて、それそうですね。
@Guest 06:50
僕らストーリーブックは、コントロールストアクションっていうアドオン使ってたんですけれど、
@Guest 06:56
あ、はいはいはい、
@Guest 06:57
全部のプロップに入れるみたいなことをしてたので、そうですね、今後役に立ってくれるといいかなと
@Guest 07:04
思います。あ、
@Guest 07:06
なるほど、なるほど、一応その辺りはその統一されてなかったった部分とかは、後から
@Guest 07:12
あの解消はしたというか。そうです。まとめて取り出したんですね、はい、
@Guest 07:16
そうですね、これからそっちにして従って、ストーリーブックを作るといい感じになると
@Guest 07:23
いいですね。はい、次でもあれですよね。なんか、結構lineスケジュールって、その初見の人が触りやすいところではあるんで、それをこう守ってもらうための工夫も結構
@Guest 07:33
これから必要になりそうですよね。
@Guest 07:35
そうですね、
@Guest 07:40
ありがとうございますなんか、ほか、ストーリーブックへの思いがあったりしませんか。
@Guest 07:46
今回初めて触ってみたんですけど、はい、思ってたようにも、コマンド1発で立ち上がったり、
@Guest 07:53
あの体験はすごい良かったですね。使いやすい
@Guest 07:59
やっぱ、ニュースだと、あんまり今からストーリーブック入れるのは大変だったりは
@Guest 08:05
しいですね。なんか、部分的にしか入っていかないというか、コンポレント数も多いので、全体一括では難しい気がするので、
@Guest 08:17
そうです。
@Guest 08:18
ま、初めから今回みたいに言えてっていうところだったら、まあ有効に働くかもなみたいな。
@Guest 08:24
そうですね、
@Guest 08:25
ところですかね。
@Guest 08:26
結構、ストリーブックって、単体で動かないといけないコンポーネントしか入れられないと思うんで、
@Guest 08:32
今回のリニューアルだと、結構そこら辺を逆に意識してから作り始めたんで、入れやすかったですけど、既存のプロジェクトってなると、
@Guest 08:40
結構難しいところはあるかもしれない。
@Guest 08:43
まあまあそうですよね、こういうのって、結構まテストい後から書くのが大変とか、まあ、同じ感じはしますよね。
@Guest 08:54
なんか、次こういうしたみたいなのあったら、ぜひ紹介していただきたいんですけど、なんかありますか。
@Guest 09:00
えっと、結構lineスケジュールのスケジュールがスケジュールっていうのは、
@Guest 09:05
納期までのスケジュールっていう意味でのスケジュールなんですけど、はいが結構カツカツになって、最後の方だと、
@Guest 09:12
あの、結構スペックアウトした箇所もあったんですね。で、そん時に導入したのがま、モブプログラミングで元々そうですね。
@Guest 09:21
あの、開発する中で、デビューの箇所が時間がかかっているっていう課題がありまして。
@Guest 09:28
えっと、このスケジュールっていうのは、そもそもの本業のlinenewsと兼務して、スケジュールをあのリニューアルしていたんですけど、
@Guest 09:38
えっと、小のでプログラム書いて、prを出して、デビューしてっていう風にやると、そのニュースの勤務してる時間と埋め合わせると、
@Guest 09:47
あの、結局レビューされるまでのリードタイムみたいのが長くなってしまうっていう課題があって、はいはい、最終的にあの結構そこのレビューが
@Guest 09:56
なんていうんですかね。コミュニケーション発生して、これ修正してくださいみたいなのの、コミュニケーションが発生すると、時間かかってしまう問題があったんで、オブプログラミングで、ま
@Guest 10:05
半強制的にこの時間に集まって、あのレビューまで終わらせましょう。みたいな目標を立てると、結構早く進んだっていう
@Guest 10:12
経緯もあっても、プログラミングが結構うまくいったなっていう風に思ってますね、
@Guest 10:18
そのあたりどうですか。他のメンバーは、じゃあいくのさん的に
@Guest 10:22
そうですね、今回とにかくなんだろう普段だったら、こうォントレビをつけると、もうすぐに
@Guest 10:31
スラックに通知は行って見なきゃいけないってなるんですけど、それがどうしても平行でやってるから、
@Guest 10:38
なんとかそっち側もしなきゃいけないし、でも、ニュースもやんなきゃいけないから、どうしても後回しになったり
@Guest 10:46
して、結構その辺が大変でしたね。やっぱ、その辺はモで解消がしやすかったですね。
@Guest 10:55
そうっすよね、僕はも参加せずに、僕は僕で担当のタスクやってたんですけど、
@Guest 11:04
やっぱも導入してから、2人のこの稼働時間、稼働時間は週3日くらいだったでしたっけ。なんですけど、
@Guest 11:12
結構ピア溜まりがちだちだけど、プルリクエストの欄が結構減って、おすごくスピード上がってる。なのは、肌から見てもすごく感じましたね。
@Guest 11:22
ああ、なるほど、なるほど、
@Guest 11:24
詰まってる感みたいなのはなくなった
@Guest 11:26
そうですね、もうスルスル流れてる感じありました。
@Guest 11:30
これ、全部もプロでやれば、じゃあ早くなるのかって言われると、多分そうでもない気がしてて、
@Guest 11:35
やっぱそこのなんて言うんすかね。デビューのコミュニケーションのところを、一緒のタイミングでできるってところが結構良かったかな、という風に思ってますね。
@Guest 11:47
だから、もしレビューが溜まるような状況があるとか、レビュー進まない。やっていう時は、もうブロを一緒に進めるっていうのは、結構いい手立てかなと
@Guest 11:57
思ってます。
@Guest 11:58
確かにそうですよね、これ確かもやったのがほんと最後の方だったので、ページ作るとか、そういったところでしたよね。確か
@Guest 12:07
なんで、序盤の方のあのプレゼンテーションなコンポーネント作るとかのところは、やっぱりモブはあんま向いてないかもしれないですし。
@Guest 12:18
そうですね、なんか、複雑なロジックとかを組んでる時は、もうちょいゆっくり腰添えて、デビューした方が良い気がしますけど、なんかその辺だったから、
@Guest 12:27
デビュースキップしても、そんなに問題起こらなくて、スピードが上がるっていうメリットだけ教授できたのはすごいよかったですね。
@Guest 12:36
結構複雑なのこそ、一緒に実装するのに旨味がありそうな印象はありますけど。
@Guest 12:42
そうですね、ま、僕の完全な破断個人的な話ですけど、なんだろ、もうちょいゆっくりと
@Guest 12:49
自分のペースで行動をリビングして、デビューをした方が、僕としてはデビューしやすいですね。デビューするわけだな。
@Guest 12:59
しっかり精査すべきところとかは、ロジックでちゃんと動くのか。みたいなところは、まあ、あの、お互いにデビューし合った方が
@Guest 13:08
何もない状況下でレビューなんて言うんですか。前提条件なしで、デビューした方が
@Guest 13:13
ましっかりデビューできるかなっていうのは確かにありますね。一緒にモブプロやっていくとま、大体動くだろうみたいなところで、若干バグが生みやすいかなという観点は
@Guest 13:22
あって、ああ
@Guest 13:24
あ、なるほど、なるほどま効率は良くなるけれど、も、まちょっと甘くなるというか、まあ見てるし、大丈夫でしょうみたいなところは出てくる
@Guest 13:32
感じですかね。そうですね、ニュースでもブプロやった時とかは、たまにバグ紛れ、紛れ込んだりしてて、
@Guest 13:39
はいはい、
@Guest 13:39
そういうデメリットもありますね。うん、
@Guest 13:42
そうですね、なんか、文字列というか、キーみたいなのを使う時にそのキー間違ってるよみたいなのあったりするんで、
@Guest 13:49
しっかり精査するときは、あまり使わない方がいいかもしれないです。
@Guest 13:53
なるほど、なるほど、
@Guest 13:56
じゃ結構長いたというか、やっぱり別にじゃあ全部もにしましょう。ってうのが、まあ有効ってわけでもまないっていうところ
@Guest 14:04
ですかね。
@Guest 14:06
でもと、選択肢を持ててんのが結構いいことですよね。その場合によって切り替えられるというか。
@Guest 14:12
そうですね、
@Guest 14:14
その他なんかこういうことをやってみたみたいなのってあったりしますか。じゃあ、せいせいさんなんか、こういうことやってみたみたいなあったりしますか。
@Guest 14:24
なんか、自分主導でこういうこと考えてみたんだけど、とかだった
@Guest 14:28
俺、自分主導だったから全然記憶ないんですけど、面白かったのは、この1周のトラティングギッド、ハブプロジェクトを使ったってのは
@Guest 14:37
ちょっと面白かったですね。結構、この初めの時にリニューアル始まります。みたいな時に、
@Guest 14:44
じゃあ、何で1周トラッキングします。みたいな話になって、
@Guest 14:48
はい
@Guest 14:49
で、いくつか候補が上がったんですよね。トレロとあとラインだとあのジラー使ってますし、そう
@Guest 15:00
そうですよね、ジラー使うか、もしくはギートハブに新しくプロジェクト。その頃はちょうど登場した。
@Guest 15:09
あと
@Guest 15:11
あ、もうちょっとあとあったかなって感じだったんですけど、ギタープロジェクト面白そうですそれも触ってみますか。みたいな感じで
@Guest 15:18
で、結局ギッドハブプロジェクトを使ってみたんですけれど、これは結構僕的に馴染んだというか、
@Guest 15:26
結構使いやすいところがあって、なんかディットハププロジェクト。ちょっと癖があって、カートレロみたいな感じでカードを作るんですけれど、そこから
@Guest 15:36
1周、ギトハブの普通の1周に、そのカードをコンバートできて、
@Guest 15:42
で、周にすると、一周のナンバリングがされるので、prからもうそっちに言及できて
@Guest 15:49
で言及すると、異臭とリンクするみたいな感じになってて。なので、prのこのマージ済みとかの
@Guest 15:58
このじょ。ステートが1周、さらにはこのプロジェクトの
@Guest 16:03
1周のこの状態にもい、あの、反映されていくのがすごくまた自動化されてる感じがあって、使いやすかったですね、
@Guest 16:13
ここは結構良かったかなと思うポイントです。
@Guest 16:17
結構うちの会社だと、キエさんとかとのやり取りって、ジラになりがちなところがあると思うんですけど、そこはあの、なんか使い分けたりとか、今回した
@Guest 16:26
そうですね。そうです、そうですえっと、やっぱりきえさんとは、えっと、ジの石を立ててくださるので、
@Guest 16:33
旧sさんとか、企画の方とのやり取りはジラの方でやりつつで、そっちで1週間経ったら、ギッドハプロジェクトにも
@Guest 16:44
作ったり、作らなかったり。はいはいはい、そうですね。牛aさん手動のバグの異臭だったら、び
@Guest 16:51
えジラの方でトラッキングしてた記憶がありますけれど、そうですね、そんな感じ、結構使い分けて使えた
@Guest 16:59
のはよかったところですね。開発主導の一周は、ギト派プロジェクトみたいな、
@Guest 17:04
そうそこ、リースの管理を撮影してからのがメインでしたね。
@Guest 17:10
バグ修正というか、そっちのスケジューリングすると、ために使っていたっていう
@Guest 17:15
はいはいはいはいやま開発側をまえ管理するには
@Guest 17:22
まメインであるギットハブトの開発の中心であるギットハブトの神話制も加味して、プロジェクトの方を使って、
@Guest 17:28
まあ、他の職種のとのコラボレーションっていう時には、ま、その時とか使ってうまく使い分けてやったっていうところですかね。
@Guest 17:38
いいですね、なんか結構うちの会社。まあ、ギタープロジェクト使わない、使う時がないわけではないとはいえ、あんまり多くはないですし、なんか大体使われてるのって、その
@Guest 17:49
チーム内ツールの開発とか、そういうその事業プロジェクトとか関係ないところだと思うんで、結構珍しい例な気もするんで。
@Guest 17:57
そうですね、
@Guest 17:58
ちょっと
@Guest 18:00
なんかいいですね、こういうところでま。実際、プロダクションの向けのツール作るところにも活用できるってのは
@Guest 18:09
そうですね。なんか、個人的にはえっと、開発スタートスタンが大体9月、去年の9月か10月ぐらいだったんですけど、
@Guest 18:19
その直後ぐらいにリアと17とか、ペーパーク5とかどんどんどんどん来て、
@Guest 18:27
あの辺も試してみたかったなっていうのはちょっとありますね。
@Guest 18:30
あ、ちょっとタイミングが悪かったという
@Guest 18:32
そうですね。あと、1ヶ月2か月ずれてたら使えたんだけどな、というのはありますね。
@Guest 18:40
ま、せっかくいろいろ挑戦するプロジェクトとしてやるのであれば、まあそこまでやってみたかったなっていうとこ。
@Guest 18:47
そうですね、
@Guest 18:50
そうですよね、なんか、元々始まった時から結構スケジュール付きでしたよね。
@Guest 18:57
なので、リアと16で始めちゃったので、今から17にするのに、こう数咲くのはなみたいな感じで見送っちゃったのが
@Guest 19:06
記憶に残ってますね。なるほど、言いたかったですね、
@Guest 19:10
と、結構タイミング的にしゃあない
@Guest 19:16
ま。ただ一方でリコイルは結構ミタアップの発表でも上がってました。けど、採用できたりとかま、そういったところは、色々挑戦できたっていうところはありそうですよね。
@Guest 19:26
そうですね、リコイルを選んだ理由みたいなのも実ははいま、他にもりあのリラックスとかあったと思うんですけど、
@Guest 19:36
モブxとかですかね。ただ、あの結構導入が楽でリダックと比べるとなんですけど、
@Guest 19:44
あの、結構リアクトの方は最初に作ってで、ページ作ってみたいなところしてて、で、結局やっぱあの
@Guest 19:52
なんていうんですかね。ページ間でデータのやり取りするから、ストア的なものを持たないと、まずいなみたいななった時に、リコイル
@Guest 20:01
だとすごいま色々試してみたところ、すごい導入楽で、みんな学習コスト的にも少なかったんですけど、そこのところもあんまり
@Guest 20:11
なんて言うんすかね。難しいところもなくて、スピーディに入れられたってところが、結構1番の目的でリコイル入れたかなと思います。
@Guest 20:21
まあ、技術的にも薄くて導入しやすくて、かつまあ、あの新しいものにはなるけれども、キャッチアップもそんなに大変じゃなかった。
@Guest 20:29
ていうのは、結構プラスに働いたって感じはいですかね、ありがとうございます。
@Guest 20:36
次いですけど、まあ結構今回そのリニューアルの中であのうまくいった。えっと、ものとま、ちょっと技術的にあの課題が生まれたところま、例えばその
@Guest 20:45
あとおいて、ストーリーブック実装するようになったところとかがま、色々あったかなと思うんですけど。まあ、全体としてまかなりその
@Guest 20:53
やろうと思う方向で、えっと、リニューアルをするっていう風なえ、結果になったかなと思うんですけど、ま、それ終わってみて、えっと、今思うものとして、皆さん結構満足度度で言うと
@Guest 21:04
どれぐらいですかね。
@Guest 21:06
そうですね、じゃ、
@Guest 21:07
はい、
@Guest 21:08
えっと、僕個人としては90点ぐらいはあげてもいいかなっていう気持ちでいます。
@Guest 21:14
なるほど、なるほど、
@Guest 21:16
結構その心は
@Guest 21:18
そうですね。結構ディレクトリ構成とかもはっきりと作って、その辺も検討しながらやったので、非常に
@Guest 21:26
新しく入った人も見やすいし、なんか、久しぶりに触るときも、ここがこの
@Guest 21:33
コンポーネントの構成だから、ここにコンポエント追加すればいいんだなとか、かなりはっきりとわかりやすい構成になったので、あの、そういう意味では、
@Guest 21:42
前のリアル前よりはだいぶ良くなったかなと思ってます。
@Guest 21:47
ま、結構その目標としていたその人が変わったりするし、触る機会もそんなに多くないっていう時の時のま、想定する開発者に結構
@Guest 21:57
便利な形に落ち着いたかなっていうところ。
@Guest 21:59
そうですね、
@Guest 22:03
じゃあ、井上さんどうですか。
@Guest 22:06
そうですね、僕も結構点数高めで、意外と課題は結構のあ、課題は結構残ってるんですけど、
@Guest 22:14
あの、最近もまたちょっとスケジュール、リニュアル後にあの、
@Guest 22:20
なんて言うんすかね。昨日、追加みたいなのをする予定があって、そこで触ってみたところでも、かなりなんていうんですかね。扱いやすくて、
@Guest 22:28
ニュースでも、ニュースよりも全然扱いやすいんで、あの、まあ、結構新しいチャレンジだったんで、課題は残るところではあるんですけど、
@Guest 22:38
僕も90点とか88点とかそんな変わんないですかね、それくらい、結構高い点数ではあると思ってます
@Guest 22:48
80点と90点の差って結構ありませんかね。わかんないですけど、
@Guest 22:53
ごめんなさい、そうですね、
@Guest 22:55
いえいえ、潜水さんはどうですか。
@Guest 22:58
そうですね、僕もすごく満足、皆さんのおかげで、かなりいいコードになったと思うので、僕もじゃあ90点に
@Guest 23:06
したいんですけど、僕自身結構反省するところがあったなって思ってて、
@Guest 23:11
ほうほうほうけ。それは
@Guest 23:12
僕ちょこちょこやり残したタスクとかを残しちゃってて、特に1番ちょっとここをどうにかしたかったなっていうのは、さっきの
@Guest 23:22
リコイルの話なんですけれど、リコイルをこう。僕らスケジュールでは、5ページ単位にストアを持ってたんですよね、
@Guest 23:32
ページ単位でステトをいくつか入れて、で、場所によってはフック作ったり、作らなかったり。みたいな
@Guest 23:41
感じで運用してたんですけれど、もう結構複雑になっちゃった箇所があって、ページ間ですとア
@Guest 23:49
えステートをやり取りするのに、ああ、複雑になっちゃったところがあったんですよね、そこをどうにかしたかったな、というので、こう10点の
@Guest 23:59
マイナスみたいな感じで、そこはちょっと課題点でしたね。
@Guest 24:03
こう、もうちょっとどうにかしたかったこれ、井上さんと行くのさん的にあのどうですかね。
@Guest 24:13
場所としては、こう、どんな感じの複雑な感じかなというと、こうある機能で、
@Guest 24:22
こういう複数のページにわたって、フォームが渡ってるところがあって、
@Guest 24:28
こう1つのページ行って、入力して次へ押すと、次のページに行ってみたいなで、最後のページで一気にサーバーに送信するみたいな
@Guest 24:36
ところがあるんですけれど、そのフォームの一連の流れが、エントリーポイントが3つくらい
@Guest 24:44
あったんですよね。そのせいで、結構複雑になっちゃったページ間のステートのやり取り参照する先が複数のページがあって、みたいな。結構複雑になっちゃったんですけど、
@Guest 24:55
野さんと井上さん的にどう解決した方がよかったとか、反省いただけたら嬉しいんですけれど、
@Guest 25:03
そうですね。あのストアもつの結構ページ単位でやるっていう風に決めてたんですけど、
@Guest 25:10
元々の実装が、あのページとしての単位としては、
@Guest 25:17
まページの単位って言って、何かって言われると難しいんですけど、僕の中ではまパスごとに区切るかなと思ってて、このパスの時にこのページ
@Guest 25:27
もちろん、あの、そのパスになんて言うんですかね。パスバリアブルみたいなのが入ってたら、
@Guest 25:33
ちょっとそんな同じページパスでも違うパスあ、違うパスでも同じページじゃない同じパス、あの、同じページの場合もあると思うんですけど、
@Guest 25:41
今回のケースはま、そんな風なのはあんまりなくて、で、えっとまページ単位でちょっとあのスターを作るっていうに、もう少ししっかり決めておけば、
@Guest 25:51
あの、そういったなんて言うんすかね。共通部分のフォームっていうのも、ちゃんとパスで完全に分けて、ストアもこれで完全に分けておけば、
@Guest 26:00
あの、なんていうんですかね。もう少し複雑化しなかったかというか、結局ページ単位に要件みたいなのが必ず出てくるんで、ページを共通化しちゃうと、
@Guest 26:10
あの、そういったところに対応するために、ちょっと汚いことになっちゃうと思うので、やっぱりそこらへんはページ
@Guest 26:18
ももう少しなんていうんだろうね。厳しめに、ページイコ1対1でストアを持つみたいなところを精査すべきだったかなって思います。
@Guest 26:27
確かに
@Guest 26:28
そうですよね、あそこ
@Guest 26:31
そうなんですよね、今回リニューアルだったんで、既存のコードベース見ながらみたいな。結構実装の仕方してたんですけど、結構
@Guest 26:40
設計の部分も結構丸写ししてしまったんですよね。僕はい、そこがちょっともうちょっと柔軟により良い形に
@Guest 26:48
リアとり越えるという構成にフィットした形に設計し直せればよかったですね。
@Guest 26:56
逆になんかいくのさんはあれですよね。元々の実装とは、異なるページの振り方みたいなのを知ったところもありましたよ。
@Guest 27:06
そうですね、えっと、元のページには、えっと、イベントを作成する画面と、イベントを編集する画面っていう2つあったんですけど、
@Guest 27:15
それは前の実装だと、フラグだけ書き換えてこう。イベントを作成するボタンと、イベントを編集するボタンを出し分けるみたいな実装で
@Guest 27:25
ま。それ、そのままフラグで出し分けてもよかったんですけど、あえて、クレイトページとエビットページっていう2ページに割って、今回実装してみたんですね。
@Guest 27:35
でま、そしたら、なんか後半に行くにつれて、なんかページ繊維がだいぶエリットに入ってくるのと、クリエイトに入ってくるの
@Guest 27:42
エリットから出てくのクリートから出てくるので、なんか全然違っていたり、なんか意外と用件が違っていて。
@Guest 27:50
そうですね。ページのタイトルの部分の文言が違ったりとか、なんか、そういうところで割っておかなかったら、これは結構まずかったなっていう
@Guest 27:59
ところがあって、これは終わってよかったなと思います。そうですね、なんかあれですね、単一責任の原則っていうあれですよね、
@Guest 28:09
それに則って、設計ができてたかなとは思いますね。さっきのそのページも同じ感じで割っていればよかったのかも。
@Guest 28:20
確かにそうですよね、ありがとうございます。まさに、その作成ページから僕のフォームに繋がるんですよね。
@Guest 28:30
なので、そこから一気に複雑になっちゃう。そこが作成の流れの僕のフォームと、他のまた、別の
@Guest 28:38
流れのフォームで分けた方がよかったですかね。はい、ここは反省です10点分です
@Guest 28:49
までも、どうしても基礎の行動があると、その辺ってまあにま別に似せようと思ってもなくなくても、
@Guest 28:56
似てしまうっていうか、今の使用がそうなんでっていうところがあるとは思うんですけど、ま、そこはあえてま。その必要性みたいなところで、うまく
@Guest 29:05
その同じにしたいみたいなところの意思決定が取れるのはいいかもしれないですね。
@Guest 29:12
ではま、結構えっと、今回ニューアルにえっと、入って、えーついて話してきたかなと思うんですけど、ちょっと最後にですね。え、しんせいさんは、えっと、ま、以前アテンサイドでも、インターンでのえー開発で
@Guest 29:23
ポートみたいなところで、えーニュースのえー、ビデオ用のえービデオプレイヤーの実装についてせえ、お話いただいたかなと思うんですけど、
@Guest 29:32
まあ、その後もえっと、ニュースで開発ししながらま、今あるババイトとして、えっと、新しくこの今回、スケジュールのリニューアルってのをやったって形になるかなと思うんですけど、
@Guest 29:42
ま、結構ですね
@Guest 29:44
え、例えばえ日々のプロダクトの開発ま、普段多分linenewsの開発をしているかなと思うんですけど、やっぱりえっと、プロダクトの開発って言うと、まあ、あの新しい試作があってま。それに向けて結構開発をしていくっていうところでますり合わせとかも
@Guest 29:58
あれば、まそのゴールが別に話し始めた段階から完全に決まっているってわけでもない
@Guest 30:04
っていうところが多いかなと思うんですけど、ま、その一方で、今回リニューアルってなると、
@Guest 30:09
えっと、ゴールが見えている中でま色々エンジアリングでま。1番いいと思うところに臨めるみたいなところはあるかなと思うんですけど、ま、そん中でなんか潜水産的に色々
@Guest 30:18
挑戦してみて、なんかどうだったみたいな。率直な感想みたいなのがあれば、聞いてみたいんですけど、なんかありますか。
@Guest 30:26
そうですね、やっぱ僕が今までやってきたニュースの開発ニュースの開発は、こう。やっぱあの既存の
@Guest 30:33
ページがあって、そこに機能を追加するみたいな感じでした。けれど、今回のスケジュールのリニューアルはこう。今ありつつもあるので、こう
@Guest 30:44
なんかこう見本みたいなのがあって、さらに完成のゴールも見えてるで、そこの
@Guest 30:51
その中でこうリニューアル1からもう一気に今あるものを崩して作るみたいなところ、すごく貴重な経験になりました。特に、
@Guest 31:00
ニュースのニュースをやってる中で、なかなか味わえない、この開発環境の構築とか、
@Guest 31:07
あと、今回僕らスケジュール作っていく中で、
@Guest 31:11
この途中で色々リコイルも確かそうだったんですよね。途中から追加した記憶があって、なので、色々こう改善を繰り返していくところ、
@Guest 31:21
かなりスピーディに進んでいくところがすごく面白かったなと思います。なので、こうニュースだと、
@Guest 31:30
もうこの機能は僕が作ったんだよみたいな感じになりますけど、スケジュールだとこう結構僕、基盤から触れたので
@Guest 31:38
スケジュール僕が担当しましたって言えるのがすごくいいですね、
@Guest 31:43
面白い面白かったですスケジュールありがとうございました、
@Guest 31:46
どうですか、また、こういうリアルやあったらややりたいですか。
@Guest 31:50
はい、すごくこれ、すごく面白かったです。僕なんなら、ニュースの機能開発よりも、こっちの方がたし、楽しかったですね。
@Guest 31:59
楽しさは、すごくこっちの方が上ですね。なんか、やっぱこうほんとにニュースも結構新しめです。けれど、
@Guest 32:08
このスケジュールはほんとに最新の技術ばっか使って、すごく最先端な開発ができたかなと思います。
@Guest 32:16
もう開発してて、すごく楽しかったです。やりやすかったですし、
@Guest 32:21
ちょっとまたなんかこういうの機会あったらですね。
@Guest 32:25
はい、もうすごくちょうどいいタイミングで、この話が舞い込んできたので、ちょい奇跡ですね、よかったです
@Guest 32:39
え、というわけでえ。今回はlineスケジュールのえ、リニューアルの裏側をテーマにですね。えいくのさん、井上さん、潜水さんの3名とともに話していきました。
@Guest 32:51
え、lineのフロントエンド、えー、開発組織UITでは、このようなフロントエンドに関するえ、議論や意見交換をえ、日々行っております。
@Guest 33:00
え、外部向けにえ、公開しているデイサンエピソードの中にもえ、社内勉強会から始まったコンテンツなどなどもありますので、
@Guest 33:08
え、今後え、また、色々なエピソードを出していければと思います。
@Guest 33:13
え、またですね、このえ、ポッドキャストを通じて、え、lineに興味を持ってくださった方は、えぜひぜひョノート株のえー。球人の方より、
@Guest 33:22
カジュアル面談からでも、ご連絡いただければと思います。
@Guest 33:26
え、今はですねえ、リモートでのえズムでのカルメンダーのも実施しておりますので。え、ほんとにえ、新卒中とかえ限らず、え、お気軽に下の方から
@Guest 33:36
ご連絡いただければと思います。ではえ、本日は以上とさせていただければと思います。え、最後までお聞きいただき、ありがとうございました。
