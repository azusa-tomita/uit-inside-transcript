@Guest 00:00
こんにちは
@Guest 00:00
こんちは
@Guest 00:02
え、今週もえ、UIT INSIDEを始めていきたいと思います。はいはい、まず初めにこのポットキャストについて説明いたします。
@Guest 00:11
このポットキャストでは、ユーザーインターフェースと、テクノロジーを愛する。開発者達が、毎週最新のフロントエンドの動向について語るためのポッドキャストです。
@Guest 00:20
最新のウェブ標準の動向や開発、フレームワークの変遷、またまたuiやuxに関する言葉で、
@Guest 00:27
最新のふりょ、フロントエンドのトレンドキャッチアップすることを目的としています。はいえ、今回はえ、UIT所属の事実である玉だと。
@Guest 00:36
えっと、今回いくたさんにえ、参加していただき、お送りしたいと思いますよろしくお願いしまします。
@Guest 00:44
じゃあ、早速なんですけれども、えっと、今回い田さんは、えっと、初参加ということですので、ちょっと自己紹介をお願いしてもよろしいですか。
@Guest 00:53
はい、えっと、line株式会社のitサービスセンターというライのインフラを管理してる部署で、
@Guest 00:59
え、ベルダというですね。アイのプライベート、クラウドのダッシュボードのフロントエンドエンジニアとして
@Guest 01:06
え、活動してます。イクターと言いますで、UITも兼任で所属していてとライコンだったり、あと
@Guest 01:14
らえ、lineのデザインシステムですね。もし、デブデーとかいらっしゃった方がいれば、知ってるかご存知かと思うんですが、だったりっていうのも兼任で仕事をしております。
@Guest 01:24
はい、じゃあそうですね、ま、ひ務ではあるけれどもまUITのえ、まあ、そういうコミュニティにはしばしば参加されてますよね。
@Guest 01:33
勤務なんで、えとけ、仕事手を出せる限りの仕事は出してるっていう感じですね。
@Guest 01:39
なるほど、じゃあますますもうご期待を活躍、活躍をご期待しています。はい
@Guest 01:47
と今回はですねま、どういうことを話しますか。と言いますと、えっと、ビュー3がえっと、今後まあ流出される
@Guest 01:54
ようになってるんですけれども、まそのビュー3について。えっと、UITではそのべんビュー3の勉強会というのを、えーと、その毎週の
@Guest 02:03
え、UITのテックミーティングで毎週え続けていくっていうことをまあやっています。
@Guest 02:10
で、ま、そのブースの勉強会の内容もまあ結構実しそうで。まあ、これをまあ社内でこう
@Guest 02:19
持っておくってのはなんかもったいな、もったいないっていう気持ちが
@Guest 02:22
ありまして。え、今回、そのビスの勉強会の出張版みたいな形で、えっと、同じ内容を振り返る場をゆえ、UITインサイトで設けられないかっていう
@Guest 02:34
え、趣旨でえ、今回やろうと思っています。今回、ビスの内容のまざっくり概要点みたいなところを話そうかなと思ってるんですけども。
@Guest 02:43
まあ、今後数回に分けて、まあ、ビュー3の主な変更点について語ってきたらなと思っております。はい、ではいでまビュー3
@Guest 02:53
がそもそも何。どういう何者かっていうのを説明します。と、えっと、ユスのえっと、そうですね、ま、
@Guest 03:01
その名の通りま、メジャーアップデートがデスなんですね。で、まず公式のロードマップを見ていただきます。とえ、今年の91にリリースするということになっています。
@Guest 03:14
すぐ1ヶ月以内ぐらい1か月以内
@Guest 03:16
なんで、もう間もなくですなので、皆さん備えましょうということで、はい、uについて振り返りたいと思います。
@Guest 03:24
はい、
@Guest 03:25
まずそのデスのまず、そもそもどうやってその使用みたいなのが決まっていくかっていうことについて、まあ、ゆたさんが詳しいので、ちょっと説明しただきたいなと思ってます。
@Guest 03:35
はい、えっと、一応ですね、ビュー3のちょっと前ぐらい
@Guest 03:42
から、えっとま、ビューのコミュニティーとか、コシステムが大きくなってきて、えっと、それぞれの1周のあの、ギターブの1周で管理してるのがまつかったんでしょうね。詳しい事情は知らないんですが、
@Guest 03:53
えっと、別にrfシーズっていうレポジトリーができて、そこでえっと、ビーの新機能だったりっていうのを
@Guest 04:00
え、協議して決めていくような流れにえこうシステムが変わりました。
@Guest 04:06
で、そこで、えっと、ビュー3の機能とかもそこにもう策定されてるものが上がっていて、誰でも見られる状態だったり、えっと、誰でも提案できる
@Guest 04:16
ものだったりします。えっとで、提案しても、あの自分で実装しなくて大丈夫ですね。あの理由でこういうのが必要だろうって言って、提案して
@Guest 04:25
提案することもできるし、会話に参加することもできるし、えっと、決まったらえ、誰でもprを出していいっていうような行システム
@Guest 04:35
になってます。で、えーと、rfcのプロセスがあって、えっと、4つの状態を持ってます。えっと、
@Guest 04:42
ペンディング、アクティブランデッド、リジェクテットですね。えっと、まずprとしてrfcが出されると、ペンディングっていう状態になって、
@Guest 04:51
えっと、あ、じゃあこれで今後のビュージェースの機能としてオッケーですね。っていて、マージされると、アクティブなrfcに
@Guest 04:58
なります。この状態だと、えっと、pr待ち、実装待ちの状態になりますで、実装されてリリースされてランデッドっていう状態になります。
@Guest 05:08
もし、アクティブにならないとか
@Guest 05:11
ていうこれは違いますね。っていう方向性と違いますね。っていうものと、リジェクテットっていう状態になりますで、クローズの状態になります。
@Guest 05:19
はい、
@Guest 05:21
じゃあそうですね、まあ最初にペンディングであって、まあし決まったらアクティブで実装されて、実装されたら、ランで
@Guest 05:30
基本的にアクティブのところを追っかけてもらえれば、えっと、今後のビーの方向性が
@Guest 05:37
わかるっていう。
@Guest 05:38
ただ、アクティブになっても、実際にランデとされるかどうかは、えっと、ターゲット、
@Guest 05:44
そのrfcにターゲットっていうのがあって、どのメジャーバージョンにリリースする
@Guest 05:49
ターゲットですか。っていうのが決まってるんですけど、もしかしたら、3.0じゃないものが、今後出てくるかもしれないです。なるほどなとこう最新が3.0なので、ほぼすべてのターゲットが
@Guest 05:59
3.0と、あと2.0へのバックインポートになってます。
@Guest 06:03
なるほど、じゃあまあアクティブだとまあ基本的に採用されるけど、それがいつになるかまでは
@Guest 06:10
決めてない。レイキングチェンジだと、次のメジャーバーなるとかになる。ただ、まあ、今んとこないです
@Guest 06:16
まあ、そうですよね、そもそもスリーが出てないていう感じで、はい
@Guest 06:24
で、そうですね。ビュー3のrfcssというディレクトリポジトリの中にアクティブrfcsっていう、まあ、
@Guest 06:33
やり取りがありましてま、その中にまあこうアダウン形式のまあ、書使用がまあ一覧で見れるっていうなってるわけですよね。
@Guest 06:43
で、一応マジされた順番に連番が振られていくので、えっと、必ずしもカテゴライズされてるわけではないので、その点だけ。えっと、
@Guest 06:53
注意していただければと思います。
@Guest 06:55
ま、単純にあのあれですよ連番みたいな形なんで、まあ、実装順ってわけではないそうです。
@Guest 07:01
想準でもないし、えっと、カテゴリーで何かグローバルヘピアに関するあるシシはこの連番号で並んでますっていうわけでもないです。
@Guest 07:11
なるほど、
@Guest 07:12
なので、勉強会い、えーと、UITで勉強会する際には、一旦そのrfcを全部読みまして。
@Guest 07:20
えっと、カテゴライズしてから始めるっていう感じでやって、ま
@Guest 07:26
ざっくりと話していきます。と、まず
@Guest 07:29
え、グローバルapiの変更点ていうのがまいくつかありますよ。という感じですね。でま、その中でえっと、グローバルapi、ツーシェーキ
@Guest 07:39
という。えっと、rfcがえっと、ビのま各種apiま色々あると思うんですけど、それをえっと、そのなんですかね。ビのえっと、
@Guest 07:50
リドットなんとかみたいな形のそういうエクスポートではなくて、ネームとエクスポートでえっと、やることっていうのが、まあ、変更点の1つです。
@Guest 08:00
ビューの振る舞いを買えないものですね。ビュードットバージョンとか、ビュードット、ネクストティックとか。えっと、
@Guest 08:06
なんか使っても、ビの振る舞いが変わらないものに関しては、ビードって何々じゃなくて、別
@Guest 08:13
バラバラの関数として提供することになりました。いらん使わなかったらインポートし、あのバンドルに含まれなくなると、
@Guest 08:25
はいで、えっと、ま。それ以外にもそのビの自体の振る舞いを変えるっていうオプションもあったりします。で、ま、それについても、そのビットっていう形ではなくて、えっと、そのなんですか。ビの
@Guest 08:38
えっと、アップインスタンスを今回作る作って、そこに対してそういうオプションをえっと、変更させるっていうように変わります。はい、
@Guest 08:46
ビューの問題っていうのは、今まで問題点として、ビードという
@Guest 08:51
ユーズプラグインとかすると、えっと、もう全部のビューアプリケーションに影響してしまう。そう1つのかもしれないんで、それをえっと、
@Guest 09:00
そうすると、グローバル、常にグローバル汚染されたビーを使い回さなきゃいけなくなるっていう問題があって、え。なので、えっと、1個1個
@Guest 09:12
アプリケーションを作るために、えっと、ファクトリー関数的なものが導入されて、クリエイトアップ関数っていうんですけど、そこから
@Guest 09:20
1回アップのインスタンスをもらって、そのインスタンスがユーズとか、ミックスリとか、コンポーネントとか、えっと、振る舞いを変える、
@Guest 09:30
変えるapiを持つようになりました。
@Guest 09:33
なるほど、ま、ほんとにあれですね、こう今改めてみると、それはそうだろうっていうか、形なってますね。
@Guest 09:42
元々デーテストユーティルズとかだと、クリエイトローカルビューっていうタスがあって、で、なんかを見に行ったんですけど、rに書いてあったから、なんか見に行ったら、あの
@Guest 09:51
ユーズとか関数を再定義して返すみたいなこと、それを多分本体に移植したのかなっていう感じのアルでしたね。
@Guest 10:00
じゃあ、そういう感じのはそうですね、グローバルの変更っていう形です
@Guest 10:07
で、続きまして、えっと、これはえっと、コンポジションapiがえと追加されるというのですね。これ、結構
@Guest 10:16
もう散々ネットで炎上じゃない話題になってるので、皆さんかなりウォッチしてると思うんですけど、
@Guest 10:24
ままを実して導入されます。っていうことですね、
@Guest 10:28
ほぼ最初にはゆうさんがアナウンスした感じのまま、関数とか入る感じですね。知限り
@Guest 10:36
いう、これも詳細は次回以降はいい感じです。時間が
@Guest 10:43
はいで続きまして、えっと、レンダーファンクションapiの変更ですね。
@Guest 10:50
これはえっと、
@Guest 10:52
あんまりテンプレート、シングルファイル、コンポネントとか使ってて、テンプレートのブロックじゃなくて、えっとま、もっとロジカルに
@Guest 11:01
やりたいっていう時に、連打ファンクションを代わりに定義します。っていう人だと、結構影響のあるものをそうです。
@Guest 11:12
関数が受け取るものと、あと返すべきスキーマが違ったりしてるはずです。あ
@Guest 11:18
あ、そうなんですね、別にそのなんかapiの場所が変とかでは
@Guest 11:21
あじゃないです。レンダーファンクションのままだけども、うれ振る舞いが違う使い方が変わるって感じですかね。
@Guest 11:29
と、次がパンクショナル、コンポーネントのhpiですかね。はい、これもえっと、今まではえ
@Guest 11:37
もこれも振る舞いがかって、基本的に純粋な関数になりました。というコンテキストがなくなって、はい、
@Guest 11:47
プロパターはいはいはいだけ。純粋にもうプロプスとスロッツと、あと、アトリビュートですかね。の3つを引数としてもらって、
@Guest 11:57
vノードだけ返すっていうような感じになります。で、あともう1個な変更点は、
@Guest 12:04
ファンクショナルトゥルーとか、あと、テンプレートブロックにファンクショナルとか、もう書かなくてよくなるってかか、
@Guest 12:10
単純な関数関数になる。あ、そういうクラグが要らなくなります、ていう感じですか、シンプルなシンプルですね。
@Guest 12:20
で、えっと、次はえっと、トランジションのまあっていうま、apiがあるんですけども、それに関する変更ですので、
@Guest 12:29
トランジション、トランジションと言いますのはちょっと。実はUITeサイズで、もぜあの、以前出た
@Guest 12:37
アニメーションの会でましたね。その理由で、そのえっと、そのトランジションを実現するための、まあ、トっていうのがま
@Guest 12:47
コアとコアでとき、提供されてるんですけれどもまそれに関する変更点ですね。で、えと、まあ結構まそこまで
@Guest 12:57
大規模な変更っていう感じではないんですけども。まあ、トランジションがそのルートにトランジションっていうのが置かれた時の魔動作の変更であったりとか、あと、
@Guest 13:08
あ、そのトランジションでこう付けたり、消されたりする。えっと、え、クラス名の変更みたいなのが入ったりしてます。でま、これはまあ
@Guest 13:17
結構まあみ見たままっていう感じなんで。
@Guest 13:20
そうですね。このrfcで1番衝撃だったのは、あのルートにトランジション置いてるときに動くのはバアシデントです。
@Guest 13:27
そうそうそう、マジか大丈夫か、
@Guest 13:31
よく問題になってなかったなと思ってますけど、まあまあまあ一応メジャーバージョンだから、そう直そうみたいなそう
@Guest 13:38
姿に戻るっていう形ですね。はい、
@Guest 13:44
いきましょうか。はい、
@Guest 13:46
で、えっと、プロプス定義をショナルに変更っていうのがあります。ま、プロプスってまあ普通にあると思うんですけれど、も、
@Guest 13:55
はい、コンポネントですはいの、それのがオフショナルになる
@Guest 13:59
ですね。これはもうえっと、ターゲットが2.xなんで、多分使えるはずなんですけど。
@Guest 14:05
えっと、プロスのオコンソロタオプションを設定しなくても、渡してたら、プロダラープロップスっていうオブジェクトに全部格納されてる。
@Guest 14:15
あ、はいはいはい。
@Guest 14:16
なので、毎回例えばプロップスを受け取って、そいつを表示するだけのコンポネとかだと、わざわざ。なんか、
@Guest 14:23
このストラクターオプションにプロップスって定義してふとか書いて、タイプとかやらなくても、もうプロップスドット風で参照できるようになる
@Guest 14:33
ていう感じですね。これ、結構僕もリアクトと同じ流れだなっていうの。あ、そうなんですそう、アトにもプロップタイプスっていう、同じような機能はあったんですよ。でま、これが
@Guest 14:44
以前そのコアの機能から
@Guest 14:47
フロップハイフンタイプスっていう、なんか、さえものに変わって、なんかいつの間にか、そのタイプスクリプトのま
@Guest 14:55
型でなんとかするみたいな感じにななったっていう流れがあったりして、い
@Guest 15:01
ま、それを見るになんかあれですよね。これも、そのタイプスクリプト的な解決方みたいなで
@Guest 15:09
やれば、そういうま、わざわざ定義しなくても、普通にそのプロップスの型を定義するみたいなっていうのは、
@Guest 15:17
リアクト的な解決方法はそうだったんですけど、まあ、なんかちょっと似た感じかなと。ま、
@Guest 15:23
プロップスで宣言されてなくて、えっと、属性として
@Guest 15:27
当されたものは全部どダラプロップスにパスされる。あ、その代わり、ディスドットホにャララでアクセスできません。っていうあ、
@Guest 15:34
感じですね。ですね、はいで、次はスロットに関する変更、
@Guest 15:42
これは長いぞ。スロットディブェースをずっと昔から使ってる方は、結構2.xの
@Guest 15:51
時点でも、色々変更がかかっているのをご存じだと思うんですけど、色々ブレーキングチェンジしないように、積み重ねてきたものを。あ、
@Guest 16:00
今回のメジャーバージョンで整理するって感じのあのですね、あの、スロットとか、スロットスコープとか、vワインドとか、
@Guest 16:08
ダラスロッツとか、ダラスコープのスロッツとか色々混在してきたんですけど、b2.0xはもう1回整理しましょう。っていうことで、
@Guest 16:18
感じの。なるほど、一応vsロットとか、一部のrfcの内容はもう2.6から使えるようになってますね。
@Guest 16:26
はいはい、あ、なるほど、これ結構じゃあ、前から議論しく尽くされていて、まあ、魔してもv3でも、
@Guest 16:36
もうアウトデテットなやつは、もう取り除きましょう。っていう
@Guest 16:39
公式ドキュメントでも、スロットとか、スロットスコープは、イブリケイテットみたいな、シンタックスの
@Guest 16:45
セクションに書き直されてて、vスロットを使ってくださいっていうような案内になってますね。
@Guest 16:51
うん、あ、なるほど、じゃあ守りしてって感じですね。
@Guest 17:01
で、えっと、次はディレクティブに関する変更ですね。ま、デレクティブって結構ま範囲広いと
@Guest 17:09
音が大きいんですけど。えっと、
@Guest 17:12
そうですね、ま、これ。えっと、動的なディレクティブ指数の設定に対応っていうのは、ちょっと言葉だとちょっと難しいんですけど、まあ、要するにあれですね。その
@Guest 17:23
え、カーリーブラケットで、あの、そういうえっと
@Guest 17:34
見つかりました。まあ、はい言葉で言うと、ブイバインドコロンホ、にゃららのホにゃららのところを動的に変えられるようになりました。っていうことですね、
@Guest 17:44
これはそうですね、まあ、普通に便利機能あまあでもこれ元々あのあれですよね。そのオブジェクトが
@Guest 17:53
渡せれば、そのjavascriptのあれですね。動的な基礎のキーの変更するっていう文法はもともと
@Guest 18:00
あってま。それがそのじゅvバインドの中のそのああ、アトリベットとしても使える
@Guest 18:06
シンテキストして、ストレスes2015かな。
@Guest 18:11
これぐらい。なんかそうですね、僕は
@Guest 18:14
あのキーを四角格好にすると、点数入れられるよっていうはいやつですね、
@Guest 18:19
それがそうです
@Guest 18:20
のテンプレートのグバインドの後ろでも使えるようになったっていう感じですね。これももう2.x使えるはずですか
@Guest 18:28
た、記憶があります、間違ってたらすいません。
@Guest 18:32
そうですね、はいで、えっと、次がえっと、カスタムディレクティブテ疑似のか、関数の名前を変更っていうのでま
@Guest 18:41
色々とまあ、ライフサイクル的な。その服関数があるんですけども。これ、なぜ名前変わったかっていうのをちょっとわかりますか。
@Guest 18:50
えっと、これ多分カスタムディクティブを作った方だとわかるんですけど、あの一部インサーテットとか、アップデートとか。なんか、名前が
@Guest 18:59
コンポー、ネント、ライクラスサイクルと一致してないところがあって、で、タイミングがいつなんですか。みたいなのが結構
@Guest 19:06
分かりづらいとこがあって、今回はそのらコンパネントのライフサイクルの名前の方に寄せて、
@Guest 19:12
ディレクトリの復活も決められるような定義できるようになってますね。
@Guest 19:16
そうですね、これはあれですね、単単にわかわかりやすさとわかりやす
@Guest 19:20
つくなったって、うん、
@Guest 19:22
それはいい。次は
@Guest 19:25
次も大きいですねvモデル
@Guest 19:27
モデルに関する変更ですね。はい、そう僕、最初にビューやって1番ビっぽいなって思ったところですね。びvモデルって、
@Guest 19:37
なんかそれまとめちゃうのかみたいな。
@Guest 19:42
そうそうそうそうですね、まあ、確かにこれはすごい流らしい気分だなって今思ってます
@Guest 19:48
ま、確かに理由これ便利ですね、アンギュラーとかもあったような気がするんだけど、なかったかな。ランギュラー、チェイスかな
@Guest 19:58
ボルトデバディレクショナルバイリングあ、ユも多分1.0は0.0かな。
@Guest 20:06
最初からその方向バイニングだったような気がするんだけど、
@Guest 20:11
みんなやめる方向に進みましたよね。多分収集がつかないんですよ。トラッキングが難しいえ、まあ一部便利だが残ってるっていう感じですかね。
@Guest 20:21
ま、一応変更としては複数vモデルをつけられるようになりました。っていう感じですね
@Guest 20:27
多分これかなり痒いところに手が届くと思います。みんなやりたかったと思うこれ、今まではv1インドドットシンクが
@Guest 20:36
なんか後から追加されて、メインのvモデルのやつと、vvインドドットシンクが並んで書かれるみたいな。
@Guest 20:45
だったけど、今今度からvモデルをいっぱいつけられるよっていう
@Guest 20:51
おお、
@Guest 20:52
なるほどこれ。コンポーネント作って公開してる人も便利ですよね。なんかこれは部モデルでこっちはvバイだししてください。みたいじゃなく、
@Guest 21:01
確かにそうですよね。
@Guest 21:03
全部部モデルでくっつけてくれたら動かすよっていう案内も出せる。
@Guest 21:09
じゃあそっかそう考えるとあれですよね。その牛のコンポネ。そのコミュニティのコンポーネントもあれですね。ビス以前以後みたいな。結構
@Guest 21:20
こいい思います。なるほど、コンポレント公開してる人もブレーキングチェンジになりますよね。自動的に
@Guest 21:27
なるほど、まあでもそうですあ、いや、変更そうですね、いや、そう考えるとつり結構
@Guest 21:37
ぶビス、すごいおっきな変更っていうのがありますよね。
@Guest 21:41
ちゃんと考えてくれてるという優しさが伝わってきます。
@Guest 21:51
いや、ちょ、ほんとに優しさがいいですよ。
@Guest 21:56
で、えっと、はいでまこれまでが、えっと、そのなんていうんですかね。追加変更点みたいな感じですね。
@Guest 22:03
でま、最後にまいくつか廃止されるキをいますっていうのを紹介をしたいと思います。えっと、まず
@Guest 22:12
え、キーコードの廃止ですね。
@Guest 22:16
そうですね、これ多分使ったことあるケースで言うと、あのvあ、違うお
@Guest 22:24
vo。キープレスのドットエンターとか、skapとか。はいはい、あったと思うんですけど、それとは別にゆえっと、ビーのコンフィグで
@Guest 22:34
自分で追加できたと思うんですけど、キーコーズっていうオプションがあって、あ、そうそれが廃止されるで、なんで廃止されるかっていうと、キーコーズ自体がそもそもjavascriptとして、
@Guest 22:45
デブリケートされてるうんで、
@Guest 22:50
キーコードじゃなくて、今度からキーになるんですけど、
@Guest 22:56
キーボードイベントのキーっていうあ、プロパティがあるんですけど、キーボードの代わりにそっちが基本的にjavaスクトとして使われるので。まあ、ビュージとしても、まあ
@Guest 23:06
冗長だよねっていうんだってるよねっていうことでなくなりますね。だから、今度からは、えっと、キーアップとかのイベントの後ろは、基本的に
@Guest 23:15
キーボードイベントのキーっていうプロパティシて、後ろにくっつければ、全部使えるようになるっていう感じですね。
@Guest 23:23
ま、そこまでなんかあれです。めちゃめちゃ対応が必要な変更っていう感じでは。そうですね、
@Guest 23:28
してた人は大変かもしれないっていうほぼないんじゃないかな。
@Guest 23:34
うん
@Guest 23:34
ま、lineはスマホだからないです。っていう。
@Guest 23:37
なるほど、確かに
@Guest 23:41
tcサイトの皆様、どうぞ
@Guest 23:44
ごご注意はいください。
@Guest 23:46
で、あとはフィルター基本の廃止ですね。ま、これもまあ、ほんとに
@Guest 23:56
見たらすぐに理解できる。変更だと思いますけど。
@Guest 24:03
えっと、あのムスタッシュ基本の中でたパイプの縦線を書いて、後ろにかの名前書くと、フィルタリングして、結果を
@Guest 24:12
出力してくれるよってやつ、あのシンタックスがなくなります。代わりに関数を呼んでね、はいっていう
@Guest 24:18
ですよね、で、そうですね、これ、あの、そのアルfcを見てもらえると、オルタネイティブズっていうところにあるんですけども、これ、
@Guest 24:26
あの実はあれですよね。afaスクリフトで、パイプラインオペレーターっていうのが、今なんかこう作成中みたいです。でま、これは
@Guest 24:36
え、これ実はその今回のそのえーフィルターと全く全くっていうか、その文法が同じなんですよね。
@Guest 24:46
同じことを実現することは同じなので、ま、これを見越して、もう配信したのかなっていうのは、まあ、これが
@Guest 24:55
ほんとに使えるかどうか。ちょっと微妙ですけれども、まあまあまあま
@Guest 25:00
ちょやルターを廃止して、関数にした時に何が1番ダメかっていうと、1番最後に
@Guest 25:07
えっと、値を出力する関数が1番外側に来て、えな関数の呼び出しが熱とすると、すごい見づらい
@Guest 25:15
そうですね。これじ順番、
@Guest 25:17
順番がフィルターだと変換する順番はその名前な並べられるんですけど、感性呼び出しだと、逆に外側に向かって
@Guest 25:27
行かないといけないっていう直感
@Guest 25:28
ではないっていう。
@Guest 25:35
アルシーがパイプラインが出てるんですけど、ステージが1なので、
@Guest 25:40
そのギャンブルできないよねっていうことで、あのfcも書いてあるんですけど、まあ変わるかもしれないよねっていうああ、それを導入する
@Guest 25:48
のもよくない。ただ、ムスタッシュキホの中にビュージースだけのシンタクスを入れるとし、ピアなjavaスクリプトとして、うん、書けないっていうのも
@Guest 25:59
あるっていうことで、まあワなし
@Guest 26:12
の廃止。はい、
@Guest 26:15
これ僕ですか、聞きたい、逆にリスナーの方に聞きたいです。そうですか
@Guest 26:20
ってるんですかっていうこれ、ちょっともう初めて知ったんですよ。使ったことないな、
@Guest 26:27
これは多分もうシングルファイル、コンポーネントとか使ってる方は、基本的に使わない機能で、
@Guest 26:35
htの中にベタ書きする人で、スクリプトタグとかで、
@Guest 26:42
かっこ
@Guest 26:43
うん。スカイタップとかで囲ってる人とかのユースケースで使われてたんですけど、
@Guest 26:51
疲れてたらしいんですけど、
@Guest 26:54
まあまあまあそうです。これもそんな結構ありちょ、コメントしづらい、
@Guest 27:03
使ってる。
@Guest 27:04
使ったことないんで、ちょっとよく
@Guest 27:06
そのコンポーネントが持ってるテンプレートじゃなくて、そのえ。一応タグとして中身に書いたものを、その
@Guest 27:16
コンポーネントのテンプレートとして使うみたいなことなんですけど、ただ、スロットと区別がなんでごちゃごちゃになるたりする
@Guest 27:26
っていう問題点がまああって、まあ基本使われてないですかね。いう
@Guest 27:33
はい
@Guest 27:35
っていう感じです
@Guest 27:36
ちゃんと
@Guest 27:41
だいはい、
@Guest 27:42
基本まあ美だから。スキングファイル、コンパレンス使おうっていうんですね。スコーピングが問題主にスコーピングの問題で、ちょっとま配信
@Guest 27:51
ていう感じですね。スロットとどっちやねんっていう感じなんで、
@Guest 27:59
そいう眺めは
@Guest 28:00
眺めましたではいっていうのが、まあ変更点の一覧っていう感じになっております。でま、今回
@Guest 28:07
まお気づきかと思いますけど、なんかいいくつか機能が入ってなかったりします。例えばま、ポータルもなんかどうなんですかね。って
@Guest 28:17
ブスに入るつつある入ってますあ、入ってるんです
@Guest 28:22
rfcのレポジトリができた時とま前後しちゃって、rfcにないけど、ビ
@Guest 28:30
3にもう実装済みのやつがあって、ポータルとかだと、
@Guest 28:35
これrfcないじゃんっていうしが立ってて、今作ってるって付けで作ってる。
@Guest 28:41
なるほど、かったりします。ま、そうですね、ポータルポータルも結構なんか、議論が巻き起こってた印象。
@Guest 28:50
元々ポータル、
@Guest 28:53
多分、コア開発メンバーの方が作ってたサードパーティーのコンポレントがあって、まあ、コンポーネント
@Guest 29:02
ポータルはいで挟んだものが、コンポネットのツリーの場所と、実際にレンダリングされるドムの場所が変えられるようっていう便利機能なんですけど、
@Guest 29:13
はんいや、どうなんですか。まあ、そのらい大会としてはあるかもしれない
@Guest 29:23
まま、基本的にそのポータルビーのまあ以降以降てかま同じ機能が使えるみたい。
@Guest 29:29
正式サポート、ネイティブサポートいう感じですね。まあ、ちょっと若干変わってるかもしれませんね。ただ、
@Guest 29:36
ドキュメントが感染ないため、モースコードを見に行かないと、やり方がわからない。あ、
@Guest 29:43
あと、コア開発のメンバーの方が紹介してるブロッグ記事とか見ると、まつめるっていう感じですかね。
@Guest 29:50
rfcがprとして、ペンディングの状態になってると思います。後付けで、なんでそのうち見られると思います。
@Guest 29:59
はい、詳細は
@Guest 30:02
じゃあはいというものとかをはい、今まで紹介したもの。じゃあ、ちょっとあの小ノートの方にもえっと、ま、そのそれぞれの核rcのリンクをま貼っておりありますので、まぜひ見てみてください。はい
@Guest 30:17
はい、
@Guest 30:18
それぞれの詳細は次回ここ交互期待、
@Guest 30:25
これはもう飛べないですね。ちょっと連載宣言しちゃいましたから、
@Guest 30:29
はいですかね、で、えっとはいで、まあ、今まではまあ、そういうことも
@Guest 30:38
全部紹介してみたんですけど、もま、この中とかそうじゃなくても、なんかそのu3でまどどういったことが起こるのかなとか、期待みたいなのをちょっとえっと、2人で話したいなと思ってます。で、
@Guest 30:51
僕はま全体的な話なんですけれども、すごいあの、あれリアクトっぽいなっていうのはま、全体的に
@Guest 31:00
そう思ったんですよね。で、まあ期待っていうか、なんかあれですよね、懸念っていうか、なんか
@Guest 31:09
いい。なんか、ビューとリアとがすごい似たようなものになるんじゃないかなっていう
@Guest 31:18
安不安ですね。あ、そうせっかくそのリ使ってるんだから、そのあれですねじvモデルみたいな、そういうなんか
@Guest 31:26
人に見せておってなる。便利機能を使いたい。
@Guest 31:29
このapiとかもそうですけど、基本リアクトによりましたね。なんか、新しいものは、コミュニティの反応としては、
@Guest 31:38
自然ですよね。
@Guest 31:40
うん、そうですよね、まあ、確かに
@Guest 31:45
一応理のコミコアメンバーのアナウンスは基本的に
@Guest 31:50
新しいもの導入しても、99割、99パーセントかは今までのやり方でいきますと、基本的に追加ですっていう
@Guest 31:59
アナウンスはうん、かなり繰り返し出してましたね。コンポジション、apiの反応が多分聞いたんでしょう。あ
@Guest 32:07
あ、そうですね
@Guest 32:08
には今まで通りいでいき
@Guest 32:12
感じ。なんか、そこが差別か、結構ラーニングカーブとか、そのコミュニティに対する態度っていうのを、結構若メンバーとして、
@Guest 32:21
自分がこう開発メンバーみたいな話し方になっちゃいましたね。自分がブログとかを拝見する限り、結構そういう
@Guest 32:28
ログレッシブであることとか、アニングカーブのこと。学習曲数のこととか、
@Guest 32:34
もう結構気にしてて、リアクトみたいに、あ、間違ったから、次のバージョンを全く変えますわみたいな感じのフレマーク
@Guest 32:42
の運営の仕方ではないっていう感じですね。
@Guest 32:49
僕もそうあの、あのま、実際本格的な買い始めはその会社に入ってからっていう
@Guest 32:57
1年ぐらい1年ぐらいですね。で、まあ、そう色々とまあ、そういういいいところ悪いところある
@Guest 33:06
であるなっていうのは思ったんですけど、もま、そのいいところの1つは結構まいろんな書き方ではないですけれど、もまろん、そういうあのショート反応みたいな、そういう
@Guest 33:16
のをまあすごい充実していて、なおかつそれのまあ、そのえっと、その
@Guest 33:23
使い方みたいなの。そのサンプルみたいなの使用例みたいなのががすごい。まあ、集めやすい。しかも、日本語でっていう
@Guest 33:33
ところとか、そういうところがまあ流のいいところだなっていうのを見ましたね。
@Guest 33:38
ま、期待ですか。期待、期待半分、山田さん的には
@Guest 33:44
そうですね。期待半分、不安、不安っていうか懸念半分、懸念、懸念。うんたさん的にはどうですか。ユースなんか
@Guest 33:54
これこれがいいみたいな、一応しみたいな
@Guest 33:58
イチ押し、イチ押しはやっぱコンポレーションですよね。変わるし、変わるし、まあ、結構でも
@Guest 34:07
一次早々読んでるのかわかんないんですけど、ブログ記事とか読んで、
@Guest 34:11
他の炎上記事とか読んで、なんかそれに反応してるのか。皆さんわかんですけど、基本的にmuuさんとかが書いてるブロック記事とか、基本的に視聴一貫してるので、1回一読されると
@Guest 34:23
まりにかってるよねっていう変わる。
@Guest 34:28
あの、twitterのリツイートの繰り返しをリアクションしたりしたりしなければ、そんなに不安を
@Guest 34:36
角に覚える必要はないかなっていう感じと、まあ、便利に確実に便利になるよねって機能ではあると思ってますね。
@Guest 34:44
そうですね、ポジションiませっかく追加されるんで、まあ、バリバリ使ってい
@Guest 34:48
買わないっていう選択肢もありますからね。
@Guest 34:50
そうです、そうです、ちゃんとまあそういうのし残されてるんです。はい、ですよね、
@Guest 34:56
大丈夫です、リアクト信者みたいなの追っかけなくて大丈夫です。
@Guest 35:01
ま、リアクトはリアクトでそういややリリ、
@Guest 35:07
そうそう、リア島もなんかそそこらへんは割となんかなんか
@Guest 35:12
してきてるんですよ。なんか、いや、なんかっていうか、そのあまりにもそのリアクションホックスがブレーキングチェンジすぎて、
@Guest 35:20
まあ、感動が
@Guest 35:23
普通に考えて、まあ、元の機能となんか全然違いすぎてなんかの残します。みたいな感じなんで、まあまあまあそうですね、
@Guest 35:34
まビはかなりバランスを気にしてますね。
@Guest 35:37
buさんの海外のカンファレンスとかでも、結構もベストなフレームワークがないよっていうことを結構繰り返しおっしゃってますし、バランスそう
@Guest 35:48
重要重要言葉が悪いですね。なんか
@Guest 35:51
げ現実、現実主義げ、現場主義みたい
@Guest 35:55
ま有意義な選択肢の1つとして、うん、読み出していきますって感じだと思いますね。そのベストにはなるし、なれない
@Guest 36:05
存在し得ないっていう感じので、理性的な考えを持っていると思い、コミュニコア開発のメンバーたちは
@Guest 36:13
すごいよ。
@Guest 36:17
さあ、そろそろ結構時間お時間がやってきてまいりました。
@Guest 36:23
ということで、はいでは、今回はえっといたさんとえっと、今後
@Guest 36:28
えやってくるビュースについて話してきました。はい、ライン株式会社では、えっと、このようなアバスクリフトやフロントエンドに関する話題について、
@Guest 36:37
日々議論が行われています。えっと、まえー、社内のえっと、ギット州をベースに毎週最新の情報を共有していまして、
@Guest 36:46
え、金曜日の勉強会で、まそれぞれが成り立ちを持ち寄って共有するというえま、今回その流す勉強会もまあ、
@Guest 36:54
それとその流れでま起こったもので。まあ、そういう感じで、えっと、共有するっていう機会が設けられてます。はい、
@Guest 37:01
では、えっと、ということで、今週はえ、はい、ビュースリーについて話していきました。はいいくたさんありがとうございました。
@Guest 37:08
次回以降の連載を候補期待くださいはい、来ないかもしれません
