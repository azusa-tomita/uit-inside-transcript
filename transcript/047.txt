@Guest 00:00
こんにちは、
@Guest 00:02
こんにちは。
@Guest 00:04
それでは、今日もテンサイドをやっていきましょう。イテンサイドは、ユーザーインターフェースと、テクノロジーを愛する開発者のためのポットキャストです。
@Guest 00:13
最新のウェブ標準や開発、フレームワークの変遷、uyレックスに関することまで、様々なフロントエンドの情報をキャッチアップできるポットキャストをお送りしております。
@Guest 00:24
でえ、今回はですね。フロントエンドン、ジニアのゴールデンウィークの最終回ということで。えっと、私と井上さんで
@Guest 00:33
おえ、お送りしたいと思いますそれでは、井上さんよろしくお願いします。
@Guest 00:39
はいでえ、今回はいの井上さんがまあ、ゴールデンウィークにされたことについて。えっと、紹介したいと思うんですけども。えっと、
@Guest 00:47
まずその前に、えっと、自己紹介をえよさんお願いします。
@Guest 00:51
はい、えっと、フロントエンド開発、センターセンターのUIT1室に所属しております。え、井上あのと申します。
@Guest 00:59
えっと、普段はえ。lineでは、newsのアプリの方、フロントエンドのアプリの方を開発していましています、よろしくお願いします。
@Guest 01:09
あ、はいよろしくお願いします。はい、
@Guest 01:12
でそうですね、えっと、今回のさんが、えっと、ゴールデンウィークにされたというのは、えっと、ラストで、えっと、ゲームフレームワークを作るという、
@Guest 01:22
すごい骨太なプロジェクトをされておりました。じゃあ、まずまラス、そのゲーム、フレイワークの詳細の前にま。
@Guest 01:30
まず、そもそもゲフリマーク。なぜ、エコを作ろうと思ったのかっていうところから、ちょっとお伺いしたいと思います。
@Guest 01:36
そうですね、僕、フロントエンドの開発を主にやってるんですけど、趣味でえっと、ゲーム作るのが好きで。はい
@Guest 01:44
えっと、まあ、アプリの方を以前作ったりもしてたんですね。ではいえっと、そん時はま
@Guest 01:52
シとかシープラで、あ、あの、そのまま作ったりもしてたんですけど、最近だと、そのプロプラットホームをちょっと意識しつつ
@Guest 02:00
ま開発しやすいという言語を選んでて、で、コトリンでゲームフレームワークを作ったりしてたんですね。
@Guest 02:08
ただ、まあ、はいはいはい、あの、自分の作りたいゲームがあって、えっと、どういうゲームかって言うとすごいなんですかね。
@Guest 02:16
オブジェクトとか、ゲームのオブジェクトがいっぱいあって、リアルタイムにそれらが圧倒的に動くようなゲームを作りたくて、
@Guest 02:24
で、そんな時にやっぱりその元々作っていたゲームフレマでは、あのクロスプラットホームにも、実はコトリンネイティブを使うと対応できるんで。
@Guest 02:34
おお。はい、
@Guest 02:35
それでま開発のしやすさもあって、いろんなオブジェクトを動かすってなると、結構そのデータ依存だったりとかっていうのがあるんで、
@Guest 02:42
なるべく開発しやすく、依存関係も少ないような形で作りたかったんで、まことりんを使って作ってたっていうのがあります。と、
@Guest 02:51
ただ、やっぱりそのなんていうんですかね。いろんなオブジェクトを動かすっていう風になると、パフォーマンスの問題で結構問題があって、で、ことりんだと。ま
@Guest 03:01
あのガベジコレクションがあって、メモリ管理みたいな自動で行われるんで、ある程度パフォーマンスをなんて言うんすかね。推測できないというか、
@Guest 03:11
実行時にどういう風にあの、どう作するかっていうのが推測できないんで、チューニングがすごい難しかったんですね。なんで、
@Guest 03:20
他のいろんな言語を探し見てみて、なんか、他にクロスプラットホームでゲーム作りがしやすいようなものはないかなっていうことで、
@Guest 03:29
ちょうどラストができるのではないか、という形で、ちょっと挑戦してみたか。えー、挑戦してみたかになりますね。
@Guest 03:36
はい、おお、ありがとうございますすごいあれですね、すごいな、なんて言うんすかねふ。普段の仕事とは結構離れてるんですけど、割とそういう
@Guest 03:45
ほんとにそのゲームエンジンから作り始めるっていうのは、なんなんですか。なんか、こうまゲーム自体の興味もそうですけど、そのコンピューターサイエンスというか、その実装を深く知りたいっていうところとかっていうところが
@Guest 03:58
もあったりとかするん。
@Guest 03:59
そうですね、あの、今だと、やっぱりゲームエンジンを作って、作りたいゲームのが
@Guest 04:04
あの作るのが一般的だと思うんで。はいはいはいで、結構そこまでの式もすごい高くて、あの、ごめんなさい。
@Guest 04:11
芸名人を使わない場合の資金も結構高くて、逆にゲームを作りたいっていう理由だけだったら、
@Guest 04:17
やっぱりフレイマークゲーム、フレイマークだったり、エンジンを使うのがいいと思うんですけど、
@Guest 04:22
やっぱ、パフォーマンスのところの部分をもちょ、もう少しチューニングしたいとか、そのチューニングのためには、どういう仕組みになれば、定なのかっていう学習面でも、結構自分自身でゲーム作るっていう人は
@Guest 04:34
わりかし多い気はしてますね。
@Guest 04:37
ああ、なるほど、そうですよね、うん、いや、なかなか
@Guest 04:41
あれあれなんですよ。そのゲームエンジンを作ろうっていうのは、その簡単に言うんですけれども、めちゃくちゃ難しくて、僕、あのあの
@Guest 04:50
むほんとにあのオープンジーの触りであの三角出すやつとかところまではやって、そこから
@Guest 04:57
どうやったら、あんな。3dのバリバリモリモリ置くやつが作れるのか。っていうのとから、ほんとに
@Guest 05:04
想像を絶する努力が必要だと思うんですよね。それをまあかんか、成あの、ゴールデンウィーク中
@Guest 05:13
だけでも、そのそれはできるっていうのはすごいところだなと思います。
@Guest 05:19
はい、そうですね、で、
@Guest 05:20
うん、
@Guest 05:21
ゴールデンウィーク中だとさすがにあの期間が短かったんで、あ、
@Guest 05:27
グラフィック系の部分だけをとりあえず実装したっていう形にはなるんですけど、確かに、そのゲームエンジンって、グラフィック以外にも、なんか
@Guest 05:36
コンピューター、サイエンスの全てを凝縮されてるような。自分個人的には思ってて、例えばですけど、まあ、対戦ゲーム作るってなったら、ネットワーク周り
@Guest 05:45
で、しかもネットワークって、まあ、フロントエンドエンジニアだったら、結構ウェブ標準で作ればいいと思うんですけど、
@Guest 05:52
ゲーム系だとレスポンス重要視したりとか、どこでセキュリティをまあの管理するかとか、あとは、あの
@Guest 06:01
パケットのサイズを意識して、なるべくレスポンス早くするみたいなところまで考えないといけないんで、
@Guest 06:07
うん、わりかし、ネットワークの部分もコアななんていうんですかね。知識が必要だとかだったりとか、あとまudp基本的に使ったりするんで、そういったところとか、
@Guest 06:16
あとptpなのかとか、そういうところの知識とか、あとはあのまセキュリティ関係も、あのセーブデータとか、
@Guest 06:25
まさあの、どこに保存するかとか、そういったところもあったりとか。あと、音楽おオーディオ部分も、あの音声再生させたりとか、
@Guest 06:35
それだけじゃなくて、例えばあの車とかですね。車のエンジン音とか、トンネル入った時にはどう反射させるかとか、そういったところ、
@Guest 06:45
知識も必要だったりとか、結構いろんなものが詰まってて、で、やっぱゲームエンジンまで作るとなると、あのユーザーに使いやすいところまで提供するんで、そういったなんていうんですかね。ツールチェーンっていうか、
@Guest 06:57
そういうところも全てカバーしてるっていうところでは、やっぱり
@Guest 07:01
あのま個人が作るにはかなり立ち打ちできない領域ではあるんですけど、まあまあまあそうですね、かなりそうですね、いろんな範囲を
@Guest 07:09
必要とする分野ではあるとは思ってますね。
@Guest 07:13
はい、ありがとうございます。今、
@Guest 07:16
ちょうどそのソースコードとかをさせてもらってるんですけど、もは回そのゴールデンウィーク中で、あの作業されたところってのは、主にそのグラフィック
@Guest 07:27
の周りっていう認識で大丈夫ですかね。
@Guest 07:30
はい、そうです
@Guest 07:32
うん、うん、うん、うん、
@Guest 07:34
主にそうですねあの、ラストのそうですね、ラストまずの1番の決め手っていうのが、実はそのクロスト、フォクロス、プロットフォームでもあるんですけど、
@Guest 07:44
実はそのグラフィック系のところって、もちろんそのジハードウェアに依存してる部分があって、あのはい、このライブラリーを使えば、
@Guest 07:53
あの、どこのプラットホームで動くってわけじゃなくて、まあ特に言ってしまう言ってしまうと、あの結構os依存で、
@Guest 08:02
aapple系、apple系のおいしさとあのメタルっていう。
@Guest 08:08
はい、
@Guest 08:08
あのグラフィックなAPIがありますし、windows系だとそうですね、ダイレクトx系です。はいがあってで、あ、
@Guest 08:17
あとそうですね、オープンglが制定したクロノスグループが作ってる。えっと、クロスプラットホームの次世代
@Guest 08:27
gpのグラフィックAPIとしては、バルカンっていうのがあったりして、で、そこらへん結構似てるはいるんですけど、提供してるAPIもと全然違うんで、
@Guest 08:37
あのま意外と使い回せないと言いますか。
@Guest 08:41
そこらへんが全てカバーできてる、ちょっと言語じゃないと、割とクロスプラットホームでゲーム作りをするっていうのができなくて、
@Guest 08:49
はいはい
@Guest 08:49
で、えっと、ラストで実はその決めてのったのが、このgfxrsっていうライブラリーで。
@Guest 08:56
はい、
@Guest 08:56
これは何かって言うと、あのま、ラストのライブラリーのグラフィックスの系のライブラリーなんですけど、
@Guest 09:03
そのさっき言ったメタルだったり、ダイレクティックスだったり、バルカンだったりっていう。あの、ハードウェアのあの、バックエンドの部分を抽象化して、
@Guest 09:13
えっと、APIとして提供してくれる。ライブラリーで、直接そういったメタルとか、バルカンとか触らなくても、
@Guest 09:20
えっと、まあ、次世代のあのグラフィックAPI系として、あの扱うことができるっていうことで、
@Guest 09:28
これが結構決め手になってますね。今回、ラストの選定した理由として
@Guest 09:35
で、そうですね。今回はそれを使って、あのグラフィックス系のえっと、コアの部分をつく。あのゲーム、フレーゲーム、フレーマークのグラフィックス系の部分を作ったっていう形に
@Guest 09:45
なります。
@Guest 09:47
はいはいはい、じゃああれですね、そのgfrs上に乗っかるまあ、もっとこう汎用的なえ、そのゲームフリーマークっていうのを今回は
@Guest 09:57
雑したという認識で
@Guest 09:59
合ってる
@Guest 10:00
そうです。
@Guest 10:01
はい、ほうほうほうあれですね、いや、結構ぐらいそのけ、あのェブウェブからだと、ほんとにそういう
@Guest 10:12
み見える範囲ってのせいぜいwebglとかですよね。ウェブglwebglは、あのオーブンglの
@Guest 10:19
なんかサブセットみたいな。そうですね、にそうですね、でま、それ以外にもまあ
@Guest 10:25
ダイレクトやったり、えっとまメタルですか。メタルであったりっていうのかとか、もまカバーできるので、ほんとにその真の
@Guest 10:34
マルチプラットフォームができる
@Guest 10:38
ですね。あの、もちろんwebglとか、オープンgl系っても、クラスプラットホームで、結構今まで使われてきてて、
@Guest 10:47
そちらを使うこともできたんですね。そのわざわざメタルとかそういうま次世代なんで使うメリットはもちろんあるんですけど、ただ、そのiosの方が
@Guest 10:56
オープンglはちょっと非水晶になってしまいまして。ああ、はいごぞご存知ですかね、
@Guest 11:03
あ、あのあれですよね、そのメタルにこう
@Guest 11:06
そうですね、ヘタルに移行して、ちょっとそのオープンああじゃないですね、クロスプラットホームの近郊みたいのが崩れて、
@Guest 11:13
ただまあ、ウェブglはまだ全然対応されるんで、多分そうですね。サファリとかでは、そこらへんは特に気にしなくていいとは思うんですけど、
@Guest 11:23
あの、なんでウェブだと意外とwebglでいいと思うんですけど、ネイティブの方だと結構そうですね。色々
@Guest 11:33
なんかゲーム、フレマーク界隈がちょっと騒がしくなったやですよね、多分、
@Guest 11:39
すごいそういう決断をしちゃうのが
@Guest 11:45
アップですよね。
@Guest 11:46
そうですね、ですね、なんで。あと、結構そのオープンglって結構古い
@Guest 11:54
もので制定されたもの。はいはいえ、結構昔はコンピューターそのハードウェアって結構抽象化されてて、ゲームあの
@Guest 12:03
ゲームじゃないですね。あの、描画する時に大体こういう風に描画するだろうっていう仕組みが、もうgpu内に乗っかってたんで、オープンglはその
@Guest 12:13
なんていうんですかね。ハードウェアに沿った形で提供してたんですけど、もう結構時代が変わって、今ってゲームとかだとすごい
@Guest 12:21
fpsを重視してて、はいはい、あの、今普通のモニターだと60
@Guest 12:29
フレームぐらいしか、1秒間に60フレームぐらいしか更新されないと思うんですけど、結構最近のゲームとかだと、もうほんとに1秒間に100
@Guest 12:38
40とか200とかいうものがあって、で、それでもオープンglだとできなくて、
@Guest 12:47
なんかいろんな制限からできないんですより、そういうパフォーマンスもどっちかって言うと、あの1フレームあたりの
@Guest 12:54
秒数をなるべく減らすっていう方のパフォーマンスになるんですけど、そういう場合って、なるべく並列でじなんて言うんですかね。実行する
@Guest 13:02
っていうのが重視されてて、もう1フレーム描画してる最中には、すすでに次のフレームのものを処理してるみたいな
@Guest 13:10
仕組化が必要で、オープンglにはそういうのがないんですよね。昔のハードウェアに沿って作られちゃってたんで、で、
@Guest 13:16
そのAPIも一気に変えるみたいなことができなくて、それをズルズル引きずって、オープンgl44まで確か行ったんだと思うんですけど、うんで、オープンglesとかもそれに引き継いで行ってて、
@Guest 13:29
ただまそこら辺でちょっとハードウェアの帰りがあったんで、あの、ネクストglとしてバルカンだったり、見たりだったり、
@Guest 13:38
ダイレクトだったりができたみたいな話
@Guest 13:41
ほう。なんで、今後はやっぱりウェブもwebglも結構パフォーマンスをごい要求してくるものが、もし今後出てくるとすると、webgpuに
@Guest 13:54
思ってますね。なるほど、あれですよね、そのフレームは、コーフレームレートっていうのだと、あの主にvrとかの文脈とかが
@Guest 14:04
ですかね。うん、結構そういうvrだと、そのなんかろ60fpsだとこう酔う酔うみたいな
@Guest 14:12
話とかも、なんか、そこら辺とかもあったりして、やっぱりそういうこうこうこう。フレームレートだと、やっぱりうん、そういう汎用化みたいなのはどうしても難しい
@Guest 14:24
そうですね。じ
@Guest 14:25
ビールごとのなるほどって、そういうところがあって、今はそうだ。脱オープンジみたいな流れが生まれてい
@Guest 14:35
そうですね。ま、結構前から実は起きてたかもしれないんですけど、そうですね、みんな結構でもオープンglって作れば、あのクロスプロットホームなんで。
@Guest 14:45
で、そんなapsとか必要ないものとかも、しかも結構よ。glってすごいあ、使いやすさはあるんで、
@Guest 14:53
うん、あ、そう。まあそうです。それはなんでもかんでもオープンじるっていうわけでは、もうこれからはいかない、
@Guest 15:01
もうど、
@Guest 15:02
どうなんですかね、そのそうですね、パフォーマンスとか、すごい重視していくと、ほんとにそういう風な壁に当たるんで、あんまり言ってないんですけど、この
@Guest 15:11
バルカンっていうえ、あ、このgfrsっていうのが、そのバルカンライクのAPIで、基本的にはバルカンを知ってれば、こちらも扱えるって形なんですけど、
@Guest 15:20
そのバルカンの理解はめちゃくちゃ大変ですね。これもほんとによくなんか
@Guest 15:27
あれなんですけど、三角形を表示するまでもすごい何百行と書かなきゃいけなくて、30400行以上書かないといけなくて、
@Guest 15:39
なんでいや、恐ろしい。やっと三角が出たみたいなのを報告する人が多数いるらしいんですけど、恐ろしいコンピュータークス系って、
@Guest 15:50
頑張って頑張って作れば、結果として目に見える形で現れるんで、達成感はすごい高いですよね。
@Guest 16:00
ああ、そうですね、あと、さっきちょっと出たwebgtu
@Guest 16:04
はいっていうところなんですけど、まあ、せっかくそのレフロントエンドのポットキャストなので、もうちょっとこうegtuについてこう
@Guest 16:12
知りたいなっていうところ、結構あの、webgtuって、そのebglとは全く別物で、あのアップルがこうそれこそま
@Guest 16:22
メタルをつく作り上げるみたいな感じで。あの、
@Guest 16:25
rgpuっていうのが、まあ立ち上がったっていう認識なんですけれども、なんかももうちょっとこうgpuについて知ってることがあれば、知りたいなと。
@Guest 16:34
そうですね、実はこのチーフエアレスって、そのさっき言ったろいな。色んなハードウェアを抽象化する
@Guest 16:44
ま、hlっていうそうあの、あの抽象化する層があってはい
@Guest 16:49
で、それを利用して、実はそのwebgpuのコア部分をこれを利用して書かれたりしてるんですよね。
@Guest 16:57
うんうん、
@Guest 16:58
で、もうちょっと多分いきなりそのバルカンライクのAPIをウェブの方に。えっと、
@Guest 17:05
提供するんじゃなくて、もう少し抽象化した形で、webgpががその抽象化して渡してるんで、
@Guest 17:12
もう少し扱いやすいとは思うんですけど。なるほど、基本的にはそのwebgpu、そのバルカンライクの
@Guest 17:20
APIだとは思いますね。ちょっと僕もあんまりwebgpについて触ったことは一切ないんですけど、
@Guest 17:27
ああいうん、うん、
@Guest 17:29
ただちょっとそうですね。読んだ形だとし、あのさっき言ったバルカンの
@Guest 17:34
難しいっていうところは、若干引きつ、引き継ぎつつ、あのま、もう少し
@Guest 17:42
扱いやすくはなってるんですかね。でも、少なくともあのウェブgp、えウェブglよりもよりあの最近のじあのハードウェアの
@Guest 17:53
アーキテクチャーに沿ったAPIの提供の仕方をしてると思いますね。
@Guest 17:59
なるほど、そっか、結構あのウェブでvrをやる試みみたいなのって、まあ割と
@Guest 18:08
始まってるとは思うんですけど、も、はい、なんかそうですね、ほんとにやっぱりどうしてもその
@Guest 18:15
数分見てみて、ああ、動いてるなで終わってしまうみたいなことが結構あって、ほんとにそのま
@Guest 18:23
ウェブでやる意味っていうのが飛ぶとうとことにもなってしまうと思うんですけど、ほんとにそのvrっていうのをウェブでやろうとも
@Guest 18:32
うっていうのを将来考えた時は、やっぱりそういうegpuみたいなのをも扱えるようになっていると、そのやっぱり最新の
@Guest 18:41
そのgpuのまに沿ったあのパフォーマンスのいいものが作れる。ま、そういう意味でも、やっぱりそう。
@Guest 18:50
結構ジフェックアースっていう勉強の勉強自体がま、bbgpuの勉強にもなるかも。
@Guest 18:58
そうですね。そうですね、あの、
@Guest 19:01
多分vrって結構パフォーマンス的に重い処理してて、普通に表示するのと、vrだと普通にあのま
@Guest 19:10
右目、左目分描画しらしなきゃいけない分、パフォーマンスかかりますし、それに普通にびょなんなんでしたっけ。あの画面でひょ描画するよりも、改造度高くしないと、さっきの画面酔いみたいなのがかなり起きるんで、
@Guest 19:24
結構スペックを要求されるものだと思うんですね。vr
@Guest 19:28
で、まあ、もちろんネイティブのものを動かす。その需要っていうのは元々あって、ただ、ウェブで動かしたいって需要も多分あると思うんで、
@Guest 19:38
そうするとは、webglでも多分できなくはないと思うんですけど、よりgpuの
@Guest 19:46
パフォーマンス。あの、最大限に活かすのであれば、egpを使わざるを得ないとは思いますね。
@Guest 19:54
ちょっとそういう面で見ると興味出てきましたね、結構ラスト
@Guest 20:00
だとま、私の興味で言うとはいわ分への出力みたいなの。そうですね、もう興味がではあったんですけども、そういう
@Guest 20:09
gfrsだと、ま、webgpuの勉強にもなる
@Guest 20:15
そうですね。まあ、うんてどどっちかっていうと、バルカンを勉強していただくのが
@Guest 20:20
かもしれないんですけど、
@Guest 20:23
ほんとにバルクは難しいんで、なんか人間が扱うには早すぎたみたいに
@Guest 20:30
難しい、そんなに難しいそうにね、興味出てきましたね
@Guest 20:34
でも、あの絶対今後そのvrとかになったら絶対必要だと思います。そのmgpがまだ多分ちゃんとはて
@Guest 20:43
されてないものだと思うので、いつできるかにも、普及率とかもかなり重要だとは思うんですけど、
@Guest 20:51
うん、かなり重要だとは個人的には思ってますね。
@Guest 20:56
はあ、いや、そうェブからはもう全く知れない世界が知れて、ほんとにいい機会。ほんとにありがとうございます。
@Guest 21:08
というわけでえ。今回はいの井上さんをお呼びして、ラストでゲームフレームワークを作るという壮大なテーマについてお送りしました。
@Guest 21:17
私達、UITのメンバーが所属するline株式会社では、このような。まあ、今回はフロントインド
@Guest 21:25
ではないですけど、まあ、ほんとにそのま、色々な議論を日々思っております。
@Guest 21:29
で、えま、今回のような、そのゴールデンウィークに中にやった成果であったりま、ビュースリースタディのようなま、
@Guest 21:37
フロントエンドに関する企画は、毎週行われている社内勉強会での成果でもあります。今後も
@Guest 21:43
tサイドでは社内社会問わず、どんどん情報を発信していきたいと思っております。
@Guest 21:50
また、twitterでのえ、情報のはえ、ご意見やご感想をお待ちしております。ハッシュタグはシャープUIT、アンダースコアインサイド
@Guest 21:59
エピソードのご意見やご感想、リクエストなど、ぜひぜひお気軽にツイートしてください。それではえ、また
@Guest 22:06
今回はえーゴールデンウィークロンテデジャのゴールデンウィーク最終回ということで、え、井上さんとえハタさんでお送りしました、
@Guest 22:16
ありがとうございました、
@Guest 22:18
ありがとうございます。
