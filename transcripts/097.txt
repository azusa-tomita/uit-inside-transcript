@Guest 00:04
え、皆さん、こんにちはuitのポテトフォーディです。
@Guest 00:08
ユーザーインターフェースと、テクノロジーを愛する開発者のためのウィークリーポッド、キャストuyt、インサイド。今週も始めていきたいと思います。
@Guest 00:17
今回はですね、外部からえ、2名、ゲストえお呼びしておりましてえ、
@Guest 00:23
ヘイのフロンテンド開発にえ、携わっているえ、藤川さんとえ、藤村さんの2名にお話を伺いたいと思います。お2人ともよろしくお願いいたします、
@Guest 00:34
お願いします
@Guest 00:36
よろしくお願いします。
@Guest 00:43
え、というわけでえ、早速え、ゲスト紹介の方に入っていきたいなと思っております。
@Guest 00:49
そうですね、じゃあ、えっと、今回お2人えの出演というところですけど。えと、今現場でバリバリフロンテンでやってるのは、え、藤川さんかなと思いますので、藤川さんの方からえ、自己紹介お願いしてもよろしいでしょうか。
@Guest 01:01
はい、えっと、ヘイのフロンテドを担当しております。藤川と申しますえ、twitterなどでは、後ろの子という名前でやってます。
@Guest 01:11
えー、ヘイのフロントエンドでは、今はデザインシステムの構築です。とか、あとは、フロントエンドpsま
@Guest 01:18
えー、ウェブバックの面倒を見たりですとか、フロントエンドに関するciです。とか、
@Guest 01:23
あとは、メンバーから上がってくる技術的な課題っていうのを、えー、吸い上げて、1週化して対応するとかっていうえ、仕事をしています
@Guest 01:33
お願いします
@Guest 01:36
はい、よろしくお願いいたします。じゃ、結構アプリケーションを開発するっていうよりは、もっと広く、横断的になんか見ることが多いやつもありそうですねね。
@Guest 01:45
はい、今はそうですね、
@Guest 01:47
了解いたしました。え、弊社の方も結構デザインシステムとか、最近力入れてるところでもありますので、ちょっと本編でお話できればなと思います。
@Guest 01:57
はい
@Guest 01:58
えでは次えー、藤村さんの方お願いしてもよろしいでしょうか。
@Guest 02:02
はい、えっと、ヘイでctをやっております。ふむと申します、よろしくお願いします。
@Guest 02:06
あの、僕はフロントエンドって文脈だと、結構バックグラウンドとしては、まあ、レイルス、エンジニア県フロントエンデンジーところ長くやっていて、なんかバックボーン、ジェイエスとかも書いてたみたいな。
@Guest 02:17
昔からの人みたいなところは若干ありますね。そうそうで、ヘイだと、フロントエンドの仕事っていうと、あの、最近
@Guest 02:25
hyって複数のプロダクトがあってあるんですけど、1つのドワーズプラットホームって言葉で呼んでるんですけど、複数のプロダクトで1つのプロダクトとして
@Guest 02:34
そう。あの、お客さんに価値を提供していこうと思ってるんですね。はい、なんですけど、まあ、なんかアカウント体系がバラバラだったりとかいうところもあったりして、
@Guest 02:41
色々共通化を進めたいみたいなとこあるんですよ。はいで、その1個目として、あのアカウント体系統合しようってことで、idpを自分たちで作って、
@Guest 02:50
えっとね。今年の春に1つのプロダクトに入れ終わったところなんですけど、それのフロントエンドの開発とかもやっていました。
@Guest 02:58
あと、直近だと、藤川さんと一緒に、あのデザインシステムのu合の実装とかも関わってたりします、よろしくお願いします
@Guest 03:05
はい、よろしくお願いいたします。かなりじゃあ、もうキャリア的には長いですし、まあ、今もフロントエンド書くこともすごい多くあってっていうところですよね。そうで
@Guest 03:14
ね、なんか、まだちょこちょこフロントへのお仕事を社内でもらってやている感じで
@Guest 03:20
了解です。本日はよろしくお願いいたします
@Guest 03:23
しま。
@Guest 03:25
あと、実はutがここまで一切え振ってこなかったんですけど、たださんも一緒におります。はい、
@Guest 03:31
おりますまた、ちょくちょく質問すると思います、よろしくお願いします。はい。
@Guest 03:35
実は今回の収録は、uiteサイドのユーザーテストを藤川さんに手伝ってもらったところから、始まったっていうのが
@Guest 03:44
そうです。ありまして、そうですね、その辺もえ含めてあって、色々話していければなと思います。それではえ、本日はよろしくお願いいたします、
@Guest 03:53
失礼します、
@Guest 03:54
お願いします
@Guest 03:57
ではえ、早速なんですけど、そうですね。
@Guest 04:00
え、今回え、storsaの話。えーというところが中心になって、えっと、ヒの組織内でえ取り組んでいることとか話聞いていこうかなと思っているんですけど、まず、初めに。えっと、今の
@Guest 04:13
え、stars関連のプロダクトのえに、どういったものがあるかとか、使われてる技術などなど。え、あと、開発組織とかについて、
@Guest 04:21
ざっくりと紹介いただいてもよろしいですかね。
@Guest 04:24
はい、じゃあこれは僕から話そうかな、えっと、ヘイはですね。あの、プロダクトとしては、ストアーズプラットホームっていう言葉で呼んでいる複数の
@Guest 04:34
こうプロダクトが1つでこう。オーナーさんあ、オーナーさんって言ってるのは、僕らのじゃない用語であれですね。あの、ビジネスをやってる方ですね、で
@Guest 04:42
に対してま。なんかcmで言ってる言葉だと、お店の商売マットって言葉で言ってるんですけど、もまecサイトだったりとか、
@Guest 04:51
あとは、オンライン予約システムだったりとか、実店舗で使うキャッシュレス決済の端末だとかっていうのを作っています。
@Guest 04:58
で、組織はどうなってるか、エンジアン組織どうなってるかっていうと、おおむね、プロダクトごとになっていますecま、今言った3つなんですけど、ec予約あとは
@Guest 05:08
あれですね、決済ていう風になっていますで、最近だともう1個あのお店で使えるレジポスレジの
@Guest 05:15
ipadアプリも出しまして、それはそうですね、ecのチームで、バックエンドを書いてたりします。で、テクノロジーっていうところで言うと、
@Guest 05:25
えっと、ecはえっと、ビーjsがメインですね。で、予約と決済
@Guest 05:33
はえっと、リアクトェスを使っています。
@Guest 05:36
で、さっきも言った通りもちょっと話したんですけど、共通基盤みたいなので、idpがあって、idをリアクトjsで書いています。大体、ドコモタイプスクリプトに今
@Guest 05:48
なって、タイプスペクトじゃないところってうかさん多分ないですよね、
@Guest 05:52
そうですね、今はあの新しいコードは増えないようにはなってますね。
@Guest 05:56
そうですよね、そういった具合になっています。で、そうですね、フロントエンドって文脈で言うと、僕ら、あの
@Guest 06:04
特にecはそうなんですけど、ecでこう。実際にネットショップを開設して、ものを
@Guest 06:11
発送したり、追加したりっていうことをする。仕事のメインの道具って、そのあれですね。
@Guest 06:18
お店をやってる方が使う管理画面なんですよ。で、これって今ってブラウザで動いていて、まおおむね。ブラウザで動くと思うんですけど、動いていて、めっちゃいろんな機能あるし、その管理画面がうまくできてないと、
@Guest 06:29
なんか、その実際使ってくださってる方のビジネスのオペレーションの効率みたいなところ、下がっちゃうってとこで、めちゃくちゃ重要な道具なんですね。
@Guest 06:37
というところもあって、規模も大きいし、重要度も高いっていうことで、フロントエンドにたいに関しては、結構も重いというか、仕事がいっぱいある会社って
@Guest 06:46
ところがあったりします。という感じで、組織についてのご紹介っていうところで、こんな話でよかったでしょ。はい、
@Guest 06:54
大丈夫です、ありがとうございますじゃあ、結構ビジネス的にもフロントエンドがなんでしょう。数字というか、ユーザーのストーリーにかなり直結するところで
@Guest 07:04
ある感じですよね。
@Guest 07:05
そうですね、そうですね、思いっきり某直結してますね。決済だと、小原ユーザーインターフェースって、その決済端末
@Guest 07:15
っていうところと、あと、それを使う時に使うアプリだったりするんですけども、
@Guest 07:20
予約ってなると、予約は予約する画面もブラウザだし、管理画面もブラウザだし、予約もとってもフロントエンドのなんていうか、比重
@Guest 07:29
ビジネスインパクトが大きいプロダクトの性質になってます
@Guest 07:33
ね。ですよね、
@Guest 07:35
そうなんですよ、
@Guest 07:36
かなり。
@Guest 07:37
ちなみに、あの実店舗向けのさっき、あの実店舗側で使う用のアプリみたいなアプリケーションみたい。最近、リリースしたって話があったかなと思うんですけど、そっちもwebの技術使っていたりするんですかね。
@Guest 07:50
えっと、ipadのレジアプリを出したそうですね。はい、そうそう、それはあれです普通にスイフト
@Guest 07:56
あ、ネイティブで書いて感じなんですね。なるほど、なるほど
@Guest 08:00
ま遠いんですが、
@Guest 08:01
そうそうそうそれがあれなんですよ、僕らがなんでそのプロダクト作ったかって、
@Guest 08:05
その実店舗でお商売っていうか、そのビジネスやってる方、小売のビジネスをやっていて、かつecもやってる方ってのが今どんどん増えているんですね。はいはい
@Guest 08:15
で大変なんすよ、在庫連動とかをしないといけないと、
@Guest 08:18
あ、あ、ですよね、ですよね、そう
@Guest 08:20
そう、そう、なんか、1店舗で売れちゃったから、これ送れないわみたいなの発生しちゃうんで、
@Guest 08:26
在庫連動してくると、めっちゃ強いっていうのが僕らの売りだったりします。なので、pcの仕事とかは結構その
@Guest 08:34
ececというか、まあ、1店舗でレジで
@Guest 08:37
決済をしていても、決済というか、あのま、レジレジ打ちをしていても、ecをやっていると、当然ecのその管理画面使わないといけないんで、なんだろうつがってる。
@Guest 08:46
あ、あ、ですよね、
@Guest 08:47
うん、うん、
@Guest 08:49
そうですね。そこがどうしても会ってしまうと、その辺りあってはいけないっていうところではありますもんね。そうそうそうそうそうそうなん。
@Guest 08:56
結構フロントエンドがミッション、クリティカルなところにすごく携わりやすい組織構造でもある。そう
@Guest 09:03
そうですね、そうですね、プロダクト特性としても、まあ当面ブラウザで動くと思うんで、管理がまですよねね、まだまだ
@Guest 09:12
なかなか各なんなんでしょう。管理画面、各事業者向けに管理画面をいろんなosでネイティブアプリとして配信するってのは考えづらいですしね。
@Guest 09:22
裏はいろんなとこで動きますから
@Guest 09:24
ですね、そう、
@Guest 09:27
確かに店舗で動かす例えばなんでしょう。ipadとかで、それこそwebからなんかアクセスするとかもあるでしょうし。うん、ブラウザの需要っていうのはいいし、
@Guest 09:37
プラス実店舗っていうとこ全体をまるっとカバーしてっていうところを考えるとなくなら、そうな病気ではありますよね。
@Guest 09:44
そうですね、それでもって今まで1個も話してなかったんですけど、実際にお買い物する画面とかも当然いいコマースなんで、
@Guest 09:52
マクロンテトの技術がめっちゃ入れて、予約も
@Guest 09:55
オンライン予約サービスなんで、こう予約する画面全部グラウザ。はいはいはいるんで、それもあるんで、まあまあフロントエンドとっても重要ってか、めちゃくちゃ重要みたい。
@Guest 10:05
最終的なエンドユーザーの方がま、事業者の方のま、提供している店の購入される方は、もちろん、ウェブのウェブ
@Guest 10:14
で適応されてるわけですもんね。
@Guest 10:16
そうなんですよ、
@Guest 10:19
かなりじゃあ、ミッションクリティカルっていうところですけど、なんか、たさんの方から聞いてみたいこととかあります。組織的なところで、
@Guest 10:27
あの結構あのはあの多分需要内容的に近いのはline公式アカウントかなとは思うんですけれども、まその中でも、やっぱりそのエンドユーザー向けのフロントエンドっていうのが
@Guest 10:41
大きく、違うなっていう印象を受けましたね。やっぱり、最終的にlineの場合だと、アプリ内でこう何かを提案したりっていう形になることが多いので、ま、そう考えると
@Guest 10:55
なんていうんですかね。こう重要度というかたちゃんとしないとやばいのがあ、
@Guest 11:02
勘違いってちゃんとしないとやばいそうなんだよ、
@Guest 11:06
そうなんでなんか緊張感がありそうですね、
@Guest 11:11
そうですね、なんかなんでしょう。管理画面って、課題感を抱えつつも進めていくことがい。まだ比較的やりすいですけど、
@Guest 11:20
インドユーザーさんのところは、まあ離脱したら、そこでストーリーが終わっちゃうっていうのはやっぱりありますからね。うん、重要度は高い
@Guest 11:27
はしません。
@Guest 11:30
え、今そんなフロンテンドを結構基盤の整備を今日一緒に参加してもらってる藤川さんがやってるっていうところですよね。
@Guest 11:38
そうですね、まあ、あの自分が参加してるところって、あの、ほんとに一部で。えっと、今は管理画面の方の体験を統一しようです。とか、
@Guest 11:49
あとは、ユーザーインタラクションっていうのを統一していって、え、ヘラしさみたいなのをえーと、uiとして表現していきましょう。っていうフェーズなんですけど、
@Guest 11:58
あのまいコマスなので、eコマス側の画面と管理画面というま、2つのアプローチがあって、
@Guest 12:05
えっと、自分が担当しているのは、そのダッシュボードとか、管理画面の方がメインになりますね。
@Guest 12:12
で、ま、今両方ともその人手が不足していて、で、今頑張ってるっていう状態で、
@Guest 12:20
えっと言いこす側というか、まあ、お店を運営する人のお客さんが来るページ。
@Guest 12:27
えっと、商品を購入するページの方にも、どんどん力を入れていかなきゃいけなくて、
@Guest 12:32
で、そこのま。例えば、純粋にウェブとして速度が遅いみたいになっちゃうと、その遅さって、あのお商売をしてる人の持ってるサイトが遅いっていうことになっちゃうんですね。
@Guest 12:45
え、そうすると、お商売してる人の売り上げが落ちちゃったりですとか、あとは最近ですと、あの
@Guest 12:51
まあコアウェブバイタルみたいなもので、ページのパフォーマンスによって、水曜の順位が下がってしまうっていう懸念もあったりするので、
@Guest 13:00
そういうところを我々が手を抜いてしまうと、どんどんお客さんが不利なecサイトになってしまうので、ショップページの方にも
@Guest 13:08
力を入れたいなっていうのは思っていますね。
@Guest 13:11
確かにそうですよね、かなりなんでしょうこう、テナントとして、どんどんユーザーが提供して、それがpcサイトとして提供されるってなると
@Guest 13:22
なんでしょう。大元のあのストアスして、システム自体のその制度っていうところが、最終的なショップの
@Guest 13:29
そのパフォーマンスであったりだとか、ユーザー体験に直結するっていうところなんで、ま手は入れたいが。
@Guest 13:34
まあ、まず優先度的には、管理画面の方から先に手をつけてるっていうのが、今のフェーズっていう感じですかね。
@Guest 13:41
そうですね、手を食えやすいっていうのはありますねえ、ダッシュボード側の方が、まあ、我々のユーザーさんが
@Guest 13:52
が直接触る画面の方がま、機能の要望とかも多いですし、純粋にその日々、お客さんが触る画面の方がその
@Guest 14:01
なんて言うんすかね。減らしさは出しやすいというのがあると思うので、
@Guest 14:06
そういった面で、デザインシステムというところに取り組むのであれば、管理画面の方からとなるかなっていうのは思いますね。
@Guest 14:14
イテレーション回しやすくてま、課題感もこう、拾いやすいところからやっていきつつっていうのはすごいいいですね。
@Guest 14:24
そうですね、
@Guest 14:27
ありがとうございます。じゃ、今結構え管理画面がから改善進めつつも、まあ、もっと手を広げていきたいっていうとこですね。
@Guest 14:36
じゃ、ちょっとその辺も順番にこっから聞けて聞いていければなと思っております。
@Guest 14:42
じゃあ、せっかくなんで、えっと、事前にピックアップしたえ、話題の方からえ、何か聞いていければなと思ってるんですけど、まあ、せっかくなんでえ。今の流れのえ続きとして、
@Guest 14:50
今のえっと、への
@Guest 14:52
え、マストアスプラットフォームの開発においてま。結構え、少しずつ全体か改善の方進んでいるかなと思うんですけど、まあ、技術的なところで取り組んでいる
@Guest 15:02
ほど、
@Guest 15:02
えや取り組んでいることやえ、そのターゲットみたいなところをちょっと紹介してもらえればなと思うんですけど、ま、せっかく今、デザインシステムの話え、ちょっと上がります。ましたし、
@Guest 15:13
デザインシステムの概要とまなんでやってるかみたいなの教えてもらってもいいですかね。
@Guest 15:19
はい、じゃあ僕から話そうかな
@Guest 15:20
あ、お願いします。
@Guest 15:24
デザインシステム、僕らその3つのプロダクトがあるんですね。ecと掲載というやつなんですけど、
@Guest 15:31
なんか、こう内容としては、元々は違う会社でそれぞれで作ってたんですよ。で、当然デザインも揃ってないし、
@Guest 15:40
まデザインってもなんていうのかな。グラフィック、デザイン揃ってないとかじゃない。まあ、ユーザーインターラクションみたいなところもあるじゃないですか、ユーザー体験の統一みたいなところができてないんですよね。はいはい
@Guest 15:49
でだが。しかし、僕らはストアラットホームということで、お店のしょあ、デジタルをまるっと解決するプロダクトを作りたいと思ってるんですよ。なんだけど、
@Guest 15:59
プロダクトマグと全然会見が違うはして、将来的にはとっても辛いじゃない
@Guest 16:03
そうですね、なんでしょう。ストアスプラットフォームっていう風な見せ方をしているけれども、なんか、ユーザー側の体験としては、サーズ組み合わせてるのと、変わらないみたいな感じ
@Guest 16:13
の機になってしまうっていうところですよね。マルクアンドフィールとかもそうですし、同線的な部分としても、なかなかそうなんで、
@Guest 16:20
独立してる感が出てしまってるっていうとこですよね。
@Guest 16:24
まあ、もうぱっと揃えられたらそりゃいいんですけど、そんな簡単じゃないというか、僕らのその
@Guest 16:30
プロダクト、テクノロジープロダクトとしての1番コアの部分の1つだったりもするんで、管理画面って、各プロダクトのなので、そんなに簡単には変えられないっていうところは
@Guest 16:40
あって、
@Guest 16:41
まあまああれですね。デザインシステムを整えて、デザインシステム整えるところまでは、いわゆるグラフィックデザインとインタラクションみたいなところ、デザインシステムに関しては、一定揃ったんですね。
@Guest 16:52
で、あとは、これをどうやって書くプロダクトに実装し、入れていこうかっていうところで、悩みながらやっているっていうのが、
@Guest 17:01
今っていう感じですかね。なんか、こう入れ方は色々あると思っていて、それこそ
@Guest 17:06
藤川さんとも一緒にどうしよう。こうしようって考えてたんですけど、今やっているのは。
@Guest 17:11
だから、その各プロダクトで、そのデザイン、システム、インターラクションも含めたデザインシステムをそれぞれで実装していくってことももちろんできるし、
@Guest 17:22
デラックスなプランとしては、こう最強のuiライブラリをつまてdruiみたいな、そういうのを書くプロダクトで適用するみたいな
@Guest 17:31
方法もあって、真ん中としては、少しずつuiライブやれば育てていくって、やり方もあると思ってるんですね。で、1個目はその各プロダクトで
@Guest 17:41
デザインシステムに沿った実装フロントエンズの実装してるってのは、さすがにコスパ悪いだろみたいなところがあって、やめたいねとなったで、
@Guest 17:51
俺たちのマテリアルuiを作って、各プロでつくつく使ってく。もうそこそこそえて、なんか僕らの
@Guest 17:58
strsuy1.0みたいなところまで作り切ってから、各プロダクトに入れる。うん、これは桜でファミリア感がすごい
@Guest 18:06
みたいな感覚があって、多分サラダ、ファミリア完成しない壮大なuyライブラリーになっちゃいそうで、プロジェクトめっちゃ辛そうだなっていうところで、今は真ん中の
@Guest 18:16
あの、少しずつ作って、少しずつ入れてくって、育てていくみたいな方向でやろうとしている。で、もうすぐ
@Guest 18:26
リリースできるって感じですよね、プロダクションにも投入できるって感じですよねv0.0.1がっていう感じになっていますね。
@Guest 18:36
ちなみに、あの、少しずつ入れていくのって、どういう感じの手法を取られてる感じなんですかね、これは
@Guest 18:44
あれですかね、藤川さんが詳しい感じそうで
@Guest 18:46
ですね、ま、今まさにっていうか、さっきまでその仕事してたんですけど、早い。
@Guest 18:51
まあ、あの手法としては、やっぱりデザインシステムをこうバーンと作りました。って言っても、
@Guest 18:58
このプロダクトのbs事情です。とか、あとは、マイルストーンみたいなのがあって、uyをこう置き換える作業って、ビジネスインパクト的にはそのすごい小さいんですね、実際
@Guest 19:12
でもっと機能増やすんです。とか、
@Guest 19:15
今、空いてるバケツの穴をえふぐみたいなことが優先されて、なかなかデザインシステムに移行できないっていうのが
@Guest 19:23
ま、世間的にもあると思うんですけど、方法としては、えっと、一旦そのプロダクトの中で
@Guest 19:30
新しく作ることになった画面とかっていうのは、デザイン上にあるデザインシステムのコンポーネントを模した紙のコンポーネントで実装してもらって、
@Guest 19:40
で、それを使ってもらうっていうことをしてます。で、えっと、そうすることで、
@Guest 19:46
新しくできる画面っていうのは、そのデザインシステムに即したインタラクションです。とか、まあ、デザインにどんどんなっていくっていうことをやってますね。
@Guest 19:57
そうやってこうあの、各プロダクトで非同期でデザインシステムっぽい、見た目のコンポネートを増やしてもらいつつ、僕です。とか、藤村さんがマスターになる。
@Guest 20:09
完全にあのデザインシステムに即したコンポーネットっていうのを並列で作っていって、
@Guest 20:15
ある程度できてきたら、仮で実装してもらっていたものと、本自装のものをこう差し替えるっていうことをやってますね。
@Guest 20:25
で、ま、本ジ装っていうのも、後から追従していく形になるので、あの各プロダクトで仮で作ってもらっているものをバックポートするような
@Guest 20:36
あ、どんどん取り込んでいくようなことをしてますね。
@Guest 20:40
ああ、なるほどなるほど
@Guest 20:42
で、まあ、デザインシステムの概念に沿ったものなんでしょう。共通基盤として開発することと、アプリケーションコのものとして開発するっていうのを並行しながら、
@Guest 20:51
最終的にアプリケーションのユースケースにあったものとして、
@Guest 20:54
あの共通的なライブラリみたいなものは、育てていくっていう風な手法をとってる。そう。そうですね、そうです
@Guest 21:02
どど、どうしてもこう一括でバーって力入れて作業して、全部を鍛えてくれっていうのは、まあまかり通らないというか、
@Guest 21:09
なかなか難しい作業なので、それぞれのプロダクトの事情に合わせて、徐々に広げているような手法というか、まやり方をしてますね。
@Guest 21:19
あ、すごいえ、なんかそれすごいいいですね、なんかなかなかこう
@Guest 21:23
なんでしょう。共通的なものをつか作ったから使ってくれってなると、やっぱりなんでしょうか。き心地が現場のものと合ってないとかっていうのも、正直あるかなと思ってて、あの、反発ってやっぱり起こりやすいかなと思うんですけど、
@Guest 21:35
なんかそこをそうやってなんでしょう。変装して作れるっていうのは、
@Guest 21:40
なんでしょ。あの、プロダクトの開発チームと一緒に、デザインチームの開発チームが仕事できているっていうところ、故のところなんだろうなっていうのがすごいよ。
@Guest 21:49
そうですね、あとは、そのその手法を取ると、どのコンポンエントから作ろうかっていう
@Guest 21:56
ま、迷いが軽減されるっていうのに、最近あの気づいたんですけど、え、仮実装として、
@Guest 22:02
それぞれのプロダクトで先に作ってもらうとか、新しいページから作ってもらってっていうので、当然必要になった。コンポーネントから、はいはいはい、作られるんですよね。
@Guest 22:12
例えば、簡単なものからこう作るとかやるとボタンとかハードコンポーネントですとか、マリストコンポーネントみたいな
@Guest 22:21
簡単なものからやっていくとこう。作ったはいいけど、プロダクションで使おうと思っても、それが登場しないから使えないよって
@Guest 22:28
なることもあるんですね。なんでどうしても必要になったものから、そのデザインシステムのコンポーネントとして作っていくっていう流れもできていて、
@Guest 22:38
その面でもかなりやりやすいかなっていう風に思いますね。
@Guest 22:42
確かにそうです、そうなるとあれですもんね。あの、共通のデザインシステムが現場に届くまでのリードタイムっていうのを、かなり短縮できるでしょうし、なんかどうしても
@Guest 22:52
多分小さいところから作っていきつつ、まずはデザインシステムを完全にもしコンポーネントを作りましょう。とかってなると、
@Guest 22:59
あのさっき藤村さんがおっしゃってたような、ほんとにサラァミリアになっていくってのがあるかなと思うんで、いるとこから作っていくってのはすごい。なんか、浸透のに
@Guest 23:08
すごい寄与しそうなやり方ですよね。そうで、
@Guest 23:11
確かにまあ、なんかデザインシステムに即したプロダクトを作るっていうのが、その精神的な負荷にならないようにしたくて。やっぱりその
@Guest 23:19
ただ、サラダファミリアを作るってなると終わりが見えないというか、
@Guest 23:25
ノルマが課せられてる感が出ちゃうので、どんどんプロダクト側の人間を巻き込んで、本包ネット作ってもらって、で、本実装に応用させてもらうみたいな
@Guest 23:36
流れをが作りたいなと思って。あの、やってますね。
@Guest 23:41
ああ、それすごくいいですね。なんか、部分的に適用するって話を聞いた時に、コンポーネントとかだと、リードが合わないから、例えば、cssだけで提供するとか、そういう手法を取ってるのかな。っていう風にちょっとイメージしてたんですけど、
@Guest 23:54
なんか、それより、もっと現場に寄り添った形になって、すごい。なかなかデザインシステムの話も結構色々よく聞きますけど、あんまりないやり方だなと思って。
@Guest 24:03
そうなんですね、ですね、なんか、僕なんかこの話をした時、なんかおも思ってたのが、
@Guest 24:10
なんかプロダクションにデプロイされてない行動を持つのって、怖いなって思ってて、
@Guest 24:16
で。デザインシステム、uiライブの実装とか。まさにその局地みたいなのを発生させてしまい、そうだなっていう危機感から、
@Guest 24:23
こういうふうにした方がいいんじゃないか。みたいな話を、藤川さんとした記憶がなんかあります。
@Guest 24:28
ましたね、
@Guest 24:29
うん、
@Guest 24:31
確かに
@Guest 24:34
そうです。私からも、そのフロントエンドのど実装を先にするかっていうところの問題をすごく最近ちょっと
@Guest 24:41
考えていて、結構あのさっきのそのなんて言うんですかね。ま、いわゆるボトムアップ的な感じのそのまず、
@Guest 24:49
えっと、必要なものをこう揃えていくっていう形のところはすごいあの、
@Guest 24:54
なんていうんですかね。あの、現場的には、すごくあのスピード感を持って取り組める方法かなと思う。一方で、あの、
@Guest 25:03
なんかこうバリエーションが増えた時の問題っていうのが、やっぱりちょっとあの
@Guest 25:10
ど、どうなるのかなっていうところが、あの、そういう
@Guest 25:14
なんていうかね。あの先にこうデザインをもう完璧に固めてからっていう方法を取る理由の1つかなと思うんですけど、
@Guest 25:22
そういった問題とかは、今なんかあった当たったりとかはしてますかね。
@Guest 25:27
あはですねま、デザイン上のデザインシステムがある程度固まってから、
@Guest 25:33
えっと、それをuyに起こしていくっていう。まあ、流れを組んではいるんですけど、
@Guest 25:40
やっぱりその使っていく仮実装として、どんどんプロダクションにリリースされていくので、
@Guest 25:46
実際使ってみてで、ユーザーに届いてから、やっぱりインタラクション行した方がいいんじゃないかとか、このページの状態のパターンだと、あの実はボタンのカラー足りなくないみたいな
@Guest 25:58
で、どんどんパターンが増えていくっていうのが実際にあって、そういった時にも、その基本的にはプロダクトをやっている方
@Guest 26:06
が、えっと、デザインシステムを作っているデザイナーと相談して、で、まあ、そっちで修正
@Guest 26:12
を回してもらったりとかま合意を取ってもらったりっていうことをえっとしてますね。
@Guest 26:18
ああ、はいはいはい
@Guest 26:20
でま実用として、まだあの本実装の方をデプロイできていないっていうのはあるんですけれども、えっと、ゆくゆくは
@Guest 26:29
ええ。今こう本日党と仮実装で2重管理になってはしまっているので、
@Guest 26:36
えっと、実装ま実際にこう本実装の方がデプロイされ始めたら、えっと、そっちの方に
@Guest 26:42
プロリックを送ってもらうっていう。まあ、流れにはなってるかなっていう
@Guest 26:46
は思ってます。その辺で、こうメンバーというか、プロだ。プロダクト側の方々には、お手数をおかけしてしまっているなっていうのは、ま
@Guest 26:55
思ってたりはしますね。
@Guest 26:57
いや、でも、距離の近さはすごく魅力的ですよね。あの話を聞いた感じだと、結構こうイテレーションが早いなっていう
@Guest 27:07
すごくうん、うん、うん、
@Guest 27:08
早いし、なんかあれですよね。プロダクトチームから、
@Guest 27:11
あの藤川さんに連絡行って、藤川さんの方がデザインにフィードバックしときますね。みたいな関係地になってなくて、なんか、川でデザイナーと共有できてるの。ほんとにうん、なんかすごいいいことだなっていうのが
@Guest 27:23
ありますよね。
@Guest 27:25
ま、そうですね、なんかこう絶対のかじ取りっていうか、
@Guest 27:29
ま、今こうあるデザインシステムのコンポーネント作り、マンとして、こうやるべきこと。っていうのは、僕の方で判断したりはするんですけれど、も、
@Guest 27:38
ま、それでもこう一緒に作ってもらった方が絶対にいいものができるし、
@Guest 27:45
現場の速度間に沿った方が必要なものからできていくので、
@Guest 27:50
お手数おかけしてますが、こうメンバーの方たちにも、作業をやっていただくみたいなことをしてますね。
@Guest 27:57
いや、でも、なんか総合的には1番いいやり方な気がしますよね、たださん、我々ちょっと大企業すぎちゃいますか。
@Guest 28:09
なんかは話を聞いてて、それをちょっとあれですよね、もう
@Guest 28:13
というのが
@Guest 28:14
心に刺さってます。
@Guest 28:19
そうですね、こううちもフロントエンドで、ecの方のフロントメンバーって、今10人程度なんですけど、
@Guest 28:26
やっぱりそういうスモールチームだからこそ、そこの距離感とかも感じてはいて。
@Guest 28:32
えっと、例えば、ビューのコンポーネントって、ecでしか使われてないですけど、予約と決済の方ってリアトなんですよ。
@Guest 28:39
で、そうすると、こうどうしても予約と決済の間で合意を取るっていう作業が発生すると思うんで、その時に誰が取り持つかとか
@Guest 28:49
ま、やっぱり1人でえっと、まあ立ててこう1人立てて、進捗を管理したりです。とか、
@Guest 28:55
こういうことをやりたいです。っていうコミュニケーションっていうのがま、代表の人が取るって形もあるにはあるで、どんどん規模が大きくなるにつれて、そういうことを
@Guest 29:04
ない人っていうのは、自分も感じてますね。
@Guest 29:06
いや、でもとはいえ、現段階だとより小さく回して、成功事例をどんどん作っていくっていうのはができていて、良いって感じです。そうですね、
@Guest 29:17
なんか、ecの今やってるののスタイルを拡張していけたらいいですよね。うまく現場でやりながらいいか、いい感じにこう。現場と
@Guest 29:26
url作ってる人の協力関係があるままur育てていけるみたいなやり方を広めていけるといいなって
@Guest 29:35
思いました。そうですね、
@Guest 29:38
なんかいいですね、なんかあくまでもなんでしょう。藤川さんが、デザインシステムに関することのオーナーであるだけみたいな状態はすごく
@Guest 29:46
いいですよね。なんか、恋愛システム開発チームみたいなことをやり出すとか、舌が絶対生まれると思うので、なんかその状態なのはすごいいいようなと
@Guest 29:56
いますね。そうですね、なんか、デザインシステムに限らなくて、フロントエンドップス系の仕事をしてるんですけど、我々が調整してつく
@Guest 30:06
でいく。基盤を使うのって、プロダクト開発してるメンバーなので、
@Guest 30:11
言ってしまうと、なんか我々にとってのお客さんみたいになってしまうんですけど、
@Guest 30:17
ま、そういう構図で見ると、まあ、なんかそれって、あんまり一緒に働くメンバーとして、あんまりいい味方じゃないと思うので、
@Guest 30:25
巻き込めるだけ巻き込んで、作業量をこう増やしてしまって、でも、メンバーと一緒に仕事をしているっていうこう依頼側にならないっていうのは
@Guest 30:34
重要かなっていうのは思ってたりはしますね。
@Guest 30:42
確かに
@Guest 30:42
そうですね、なんか、車内外虫みたいな関係になったら、うまくいいくもんもいかなくなっちゃいますもんね。うん、
@Guest 30:49
敵になりやすいっていうのが
@Guest 30:54
部署が行ってるから仕方なくやるみたいな。
@Guest 30:56
はいはい、はい、はいはい、すごいよくない。
@Guest 30:59
なんか、プロダクトチームがデザインシステム入れて、入れてくれないんですよ。みたいなのとか、プロかデザイン、システムチームがちゃんと更新してくれないんですよ。みたいな話になったら、それは不幸ですもんね。
@Guest 31:09
いや、なんかめちゃめちゃいい回り方だなという。なんかやっぱりデザインシステムのって、結構おっきくなってくるにあたって作らないといけなくなって作るっていう需要からか、
@Guest 31:19
やっぱり、専用のチームが組まれることがすごい多い印象だったんですけど、なんか、この協業の仕方はすごい。私の中では、もうボキャブラリーにはなかったなんで、すごい
@Guest 31:28
純粋にすごいなってなってますね、
@Guest 31:32
なんか、たさんの方で聞きたいこととかあります。
@Guest 31:35
そうですね、いや、でもなかなかとり取り入れたいんですよね。そのうち、このあの
@Guest 31:42
規模規模が大きくなっても、うまく回るような形で、どこから取り入れられるのかなって。ちょっとさっきから考えてたんですけど、
@Guest 31:51
何かこうアドバイス的なものとか、もしかして、あれあれば聞いてみたいかも。投げてしまった
@Guest 32:00
なんだろう。
@Guest 32:02
あ、アドバイスになるかわかんないんですけど、自分がその状態になったのって、元々自分がプロダクト開発のま、メンバーの1人で、
@Guest 32:10
たまたまデザインシステムの面倒を見るメンバーに選出されたってのがあって、元々そのプロダクト開発のメンバーとこう。めちゃくちゃ距離が近くて、
@Guest 32:20
ずっと一緒に仕事をしてた方たちなので、
@Guest 32:24
なんでなんていうんですかね。こう実務っていうか、こう延長で、自分がデザインシステムやることにはなったけど、そもそもメンバーを頼るつもりだったし、
@Guest 32:34
自分で1人で作れるとも思ってなかったんで、元から頼るつもりで始めたっていうのはありますね。
@Guest 32:41
ふんふんふんは、やっぱりあの、こうなんですか。こう、デザインシステムみたいな、そういうその人のドメインができてしまうと、
@Guest 32:50
難しいっていうところは、なるほど、ということはあれですね。こう、
@Guest 32:57
私達からも積極的にそのデザインシステムに関わっていくべきだし、デザインシステム側の方からも、こう来てほしいみたいな、そういう
@Guest 33:07
ところがあればいいんですかね。という解釈をしました。
@Guest 33:14
まあ、そうそう大体そうでこうやっぱりデザインシステムに置き換えるって大変なんでこう。まあ、メンバーも多分しんどいなって思ってると
@Guest 33:23
とか感じてるんで、みんなでぶち当たるみたいなこう。デザインシステムっていうこうすごいでっかい
@Guest 33:29
話の大きなものに、みんなでぶつかっていくって、雰囲気が作れれば、まあうまく回るのかなっていう風には思ってたりはしますね。
@Guest 33:39
じゃあ、まずは私はまずデザインシステムにこう積極的にアプローチしていこうかな、という目標を立てます。はい、
@Guest 33:49
あれですね、プロダクト開発者としてできることは、逆に、もうデザインシステムの開発している人を一緒に、一時的にプロジェクトに入ってもらうぐらいの気持ちで、
@Guest 33:59
カジュアルに参加してもらうってのが大切そうですし、なんか、デザインシステムに限らず、こういったものをやるときは、やっぱりドッグフーディングできる環境みたいなんが元々あって、関係地も
@Guest 34:09
あるところにまず突っ込んでみるみたいなところが、うんうまくいく。
@Guest 34:13
1番共通交的なとこもしないですね。普通にめちゃめちゃ勉強になってしまって、どうしよう、どうしよう、どうしよう。なんか今日今日勉強になりました。で、これ終わったらふるフリートーク。まだあと2つあるんですけど、みたいな感じになってて、で、今あれなんですけど、
@Guest 34:28
いや、なんだろ。昔、このテリアスで、僕がなんか経験豊富な結構マネジメントとか経営の人に言われたのがま、なんか、お
@Guest 34:36
ミッション設計をオーバーラップする形にするといいですよ。みたいなことは言われました
@Guest 34:41
なんか、どっどっちかだけやってもできないような、相互に依存する密照設計にすると、お互い協力するようになる、みたいなところがあるってました。
@Guest 34:49
ああ、確かに
@Guest 34:50
なんか僕らの場合は割と自然発生的にこの協力ができてるんですけど、
@Guest 34:55
なんか、もうちょっと組織的にアプローチする時は、そういうそういうの。なんか、具体的にどうすれば、どういう目標を設定すればいいんだって言われると、ぱっと出てこないんですけど、なんかそういう形にするっていうのもなんかいいんだろうなと
@Guest 35:05
聞いてて思いました。
@Guest 35:06
そうですね、確かになんか、マインドの開発者同士のマインドの問題っていうのは、多分立場の問題で、長期的な問題を早く解決していきたいっていう
@Guest 35:15
モチベーションが、もちろん、デザインシステムにあって、プロダクトにはま、長期的にま、数字が
@Guest 35:20
の伸びが鈍化しないように、プロダクトの開発体制を維持するっていうのは、大切だと思いながらもま、それはそれとして数字があるっていうのが絶対前提にあってま。個人の性格っていうよりは、立場の問題な気がするんで、なんか、
@Guest 35:32
目標設定が両方混ざってると、確かにすごい効果的に働きそうとか、どっちにとってもメリットがありそうですよね。うん、うん、
@Guest 35:42
okr2みたいな感じで、デザインシステムを持ってもらって、みたいなプロダクトし、そういうのかもしれな
@Guest 35:50
いいですね。なんか、そういうハイブリッドな形にできるのが1番良さそうですね。
@Guest 35:57
っと、私たちの明日からの仕事にもすごい役立ちそうな標方ですね。
@Guest 36:06
いや、でも、なんかすごい学びがありました。なんか、やっぱりこう、デザインシステムの話って、作る側
@Guest 36:13
の視点みたいなシステムの仕組みを作る側の視点の話がすごい多かったんですけど、なんか
@Guest 36:18
作る側なんなんでしょう。側って言葉を使ってるのが、そもそも悪いとか、そういうのじゃない。なんか、作り方もはすごいワークしやすいんだなっていうのが
@Guest 36:28
強く、イメージできて、我々が勝手にダメージを受けました。
@Guest 36:34
じゃあ、ちょっと次行きましょう。
@Guest 36:37
え、ではですね、えっと、次えっと、ちょっと私これで聞きたいなって思ってたのが結構。なんか、
@Guest 36:43
そのstrsプラットフォームにおける、フロントエンドみたいなのって、そこそこになんか外部にえで
@Guest 36:49
向けの記事とか見かける。えこともあって、かなり活動的だなというのが外から見ててもえ、印象受けるんですけど、なんか、そこが
@Guest 36:57
できているのって、元々フロントエンドに詳しい人っていうのがctoになって、えっと、今藤村さんがえー、持ってるからからこそなのかなと思っていて、なんか、
@Guest 37:07
そういうフロントエンドに詳しい人が、技術的なところのトップにいる組織で良かったこととか、なんか、
@Guest 37:14
逆にちょっと悩んだこととかあったら聞きたいなとか思ってて、これはどうしよう。メンバーから思うことっていうとこを先行きましょうかね。
@Guest 37:23
なんか、ふじ藤川さんよかったこととかあります。なんか
@Guest 37:26
そうですね、まあの、やっぱりはあの話が早いっていうのはあって、まあ、あのフロントエンドってこうなんでしょうね。
@Guest 37:35
やりたいと思ってるけど、なんか、授業インパクトを説明しづらい作業っていうのがまかなり多くて、
@Guest 37:43
で、例えば弊社の話だと管理画面。まあ、ecのサイトと管理画面ってこう。元々はアンギラーjs、
@Guest 37:52
アンギラ2系ではなくて、1系のアーキテクチャで作られてたんですけど、そこでま開発速度とか
@Guest 38:00
が、まあすごい落ちてるっていうのがあって、今どんどんナクストに置き換えてるっていう状態なんですけど、
@Guest 38:06
通常のうん。まあ、フィーチャー開発的なことをしていると、ナクスト可の作業って手が止まってしまうっていうか、
@Guest 38:15
どうしてもこう事業、インパクト的な優先順位の付け方をすると、どんどん優先順位が落ちていくっていうのがあったんですね。
@Guest 38:22
でま、技術技術者の頭になって、こう考えれば、ナクストの方がページパフォーマンスが上がったりです。とかま計測からこう
@Guest 38:32
ま計測を元にして、そういうインパクトを算出できるとかは
@Guest 38:36
ま思うんですけど、やっぱりその直近オーナーさんが困っていることを解決してあげたいっていう方の気持ちがこう強くなってしまって、どうしても
@Guest 38:46
で、nxストかっていうプロジェクト自体がま止まっていた時期が、半年か、1年ぐらいあったんすね。
@Guest 38:52
でていったとこに、こうctoがフロントエンド強いっていうので、ま、そういうところっていけないよねとか、どんどん生産性も下がっていくし、
@Guest 39:01
まあ、古いアーキテクチャがどうなっていくのかっていうのも理解されている方なので、そこをそのプロジェクトとして、ちゃんと人をアサインして、
@Guest 39:11
ちゃんと期間を設けて、で、いついつまでに成果出してくださいっていうので、取り組みやすくなったっていうか、
@Guest 39:18
ま、そういう式をとってくれる存在っていうのがksにいるっていうのは、ますごいありがたい話ですね。
@Guest 39:27
で、なかなかその説明しづらいところをこう説明しなくても、文脈から読み取って、合3位を出してくれるっていうのは、
@Guest 39:35
まあの下で働くものとしては、すごいあのありがたいし、やりやすいっていうところはありますね。
@Guest 39:43
なるほど、って思いました。
@Guest 39:47
確かにでも、その
@Guest 39:49
古い古いライブラリーをつが使われてるところがあって、開発生産性が長期的にすごい3年、5年のスパンで見るとすごい。なんか、3年後、この蓄積の開発生産性はなんかすごい既存すると思うんですよね。
@Guest 40:03
で、古い古いライブラリーを使ってる部分でどんぐらい既存するかって、結構そのもう肌感覚みたいなところはやっぱあるんじゃないかなと思ってて、
@Guest 40:10
それをまあそうですよね。ctoが喋れるってのはまあ
@Guest 40:16
いいいだろうなとあるし、客観的に考えてみると、そうだよなって、あんま意識してなかったんですけど、思いました。
@Guest 40:24
あの、まあ、10
@Guest 40:25
ちょうど10年くらい前に出たアーキテクチャとかって、新陳代謝の流れ的に今ってレガシーになってしまってる部分が多いと思うんですけど、
@Guest 40:35
ノードがこう出てきて、で、spaみたいなこう。フロントエンドで、どんどん複雑なことをやろうっていう風に
@Guest 40:44
な時代に出てきたフレームワークが、今、ちょうどその負債化を招いているっていう現場が多いと思っていて、
@Guest 40:51
で、置き換えたくても、なかなか置き換えられないっていう状態になりやすいというか、
@Guest 40:57
で、そのなんでしょうね。その時代、時代を知っているctoっていう存在があると、まそこにすごい取り組みやすくなると、かま負債を解消しやすいっていうのが、
@Guest 41:07
まあ強みかなっていうのは思いますね。
@Guest 41:12
そっか、リアクトリアクトビ以前の
@Guest 41:18
フロントエンドって、触ったことある人じゃないといかに、今辛いかってのわかんないみたいなとこありますよね。きっと、
@Guest 41:25
リアクト以降のフロントエンドを書いてた人に、いかに、バックボーンジェースで失敗すると、たい。
@Guest 41:35
基本的にはないですし、なんかそれと
@Guest 41:39
もう1つあるとするとあれですよね。そもそもフロントエンド以外だと、技術的な例えば、フレイマークぐらいのその大きさのものをがっつり、プロダクションの
@Guest 41:49
技術を書き換えるってそうそうないというか、通常しない判断だと思っていて、それって多くの場合に定しないみたいなのが、多分
@Guest 41:58
印象としてあるかなと思うんですけど、フロントエンドの場合は、それがペイしうるみたいなのが大きな特徴としてあるのかなと思っていて、そこは多分
@Guest 42:07
経験してきたからこそ、その言えることなのかな。みたい
@Guest 42:11
うん、うん、ありそうですよね。
@Guest 42:14
ま、フロントで言うと、やっぱりこうリアクトが出たことによって、パラダイムごと大きく変わったんで、え、そこで、そのなんか、生産性っていう面だと、
@Guest 42:24
前の時代から比べると全然違うっていうのはあって、え、やっぱりこう。バグも起きな。起きりにくくなってますし、
@Guest 42:32
後から手を加えやすいっていうのもありますし、まあ、そのフロントエンドでテストを書くっていう文化も
@Guest 42:40
こう。リアクトが出た前と後だと、根付き方が全然違うと思うので、そういった面でも、うん、
@Guest 42:47
あの、どんどん新しくしていくことに価値があるっていうのを理解されている方が、トップにいるっていうのは、まあ、
@Guest 42:55
すごい嬉しい、ありがたい話ですね、
@Guest 42:58
その恩恵はかなり
@Guest 43:00
なんか
@Guest 43:01
計り知れないものがありそうですよね。
@Guest 43:12
やっぱりでも、そこがあるのは強いよなって思いますし、なんか弊社もあれなんですよね。あ、すいませんへ弊社というようなlinelineか、
@Guest 43:22
あの、
@Guest 43:23
あの弊社もあれなんですよね。あの、珍しくえっとま、ちょっとctoっていう全体的なとこじゃないんですけど、あの、フロントエンドが会社のしの大阪が会社の執行役員もやってるみたいなところとか、子会社の取り締まりや
@Guest 43:37
やってるみたいなところもあって、やっぱり結構フロントエンドが強いなりに、他のところと話しやすいみたいなのがすごくあって感じたんですけど、あくまでも、
@Guest 43:46
私たちの場合は、フロントエンド組織っていうところもおさっていうところになってくるんで、ctoってなってくると、また違うよなと思ってるところがあったんですけど、
@Guest 43:54
なんか、やっぱ影響力みたいなんがそのえが違いというか、やっぱり
@Guest 44:01
バックエンドとかの経験も全部求められるしてっていうところから、フロントエンドの意識があるっていうのは、なんか、電車的にお
@Guest 44:08
与える影響も大きいんだなっていうのをちょっと感じましたね。
@Guest 44:12
割とこのヘイがフロントエンドヘビーなプロだと思っているっていうところと、僕が
@Guest 44:19
なんか、こういうctoとかをやる人間の中では、フロントエンドに割かし、詳しい方だったっていう組み合わせは偶然なんで。あ、そうなんですね、
@Guest 44:29
後で気づきました。
@Guest 44:31
やってるうちに繋がっていたみたいな、
@Guest 44:34
うん、はいへい弊社が
@Guest 44:42
はいはいはいはいしゃ
@Guest 44:43
ま弊社がそのフロントエンドがこうなんでしょうね。こう比重が大きい
@Guest 44:48
まあ、ビジネスインパクトが大きいってこう。説明できること自体がまあすごいいいことだなって思っていて、
@Guest 44:55
なかなかそのcpoにうちって、フロントエンドって、どれぐらい力を入れてるんですかね。とか、採用ってどれぐらいフロントエンド頑張るべきですかね。ってこう相談した時に
@Guest 45:07
こう、その事業目線とか、今後どうしていきたいって視点から語れる方ってすごい。あの下で働く人からしたら、
@Guest 45:15
ま、魅力的というか、ちゃんと説明してくれるからこそ、自分たちにも身が入るというか、
@Guest 45:23
自分たちがこうやってることってこう授業にちゃんとこうなんでしょうね。こう価値を提供できるとかま、役に立っているなっていうのが、
@Guest 45:32
ctoの口から言ってもらえるっていうのも、こう下で働く人のモチベーションとしては、かなり大きい影響があるかなって思ってますね。
@Guest 45:43
確かにそうですね、なんかこう信じる信じないじゃなくて、事実としてちゃんと伝えてもらえるっていうだけで、メンバーとしては、
@Guest 45:51
うん、
@Guest 45:52
相当ポジティブな影響がある気がしますね。
@Guest 45:58
あ、ちょっと僕から1個気になった点で、あとあの結構なんですかね。その
@Guest 46:05
な、開発速度が遅くなるみたいな、そういうじ、実害があるっていうことに対する意思決定って、結構まあ割と理解を得やすいかな
@Guest 46:15
とは個人的には思ってたんですけど、逆になんて言うんですかね。その
@Guest 46:20
そのフロントエンドのバックグラウンドがあるなら、では。の意思決定みたいなのって、なんかあったりしましたか。ざっくりしちゃったんですけど、
@Guest 46:29
何かそういう。こういうそのフロントエンドの知識をも、例えば技術選定とかですかね。何かこう
@Guest 46:37
はい、こうこう何かと何か
@Guest 46:39
採用を決めるっていうなった時に、そういったバックグラウンドが生きたりっていっていうところとかはちょっと気になりましたね。
@Guest 46:48
それで言うと、そこまで幸い。フロントエンドロー
@Guest 46:58
チームが各プロダクトしっかりいるので。うん、うん、おま。
@Guest 47:04
いやいやいや、これはそれは
@Guest 47:05
それでもみんな大丈夫だ。そういうみんなちゃんとしてるから大丈夫だよ、やったみたいなか感じですかね。まあ、うん、辛うじて言えば、
@Guest 47:16
あのさっき言った。idp作った時は、フロントで僕が書いたんですけど、
@Guest 47:20
まあこ、これは僕がなんだろうな。積極的にctoとして、技術選定にめちゃくちゃ絡んだっていうよりも、
@Guest 47:27
僕が書くことになったから、僕が選んだみたい。はいはいはい、そんぐらいそのぐらいのところだ
@Guest 47:32
までも自ら書くっていうところ、時点でも当事者としてのレベルが断違いな気はしますね。
@Guest 47:39
いや、なんか僕ctoとして入って、一通りちゃんとコード書きたいなっていう気持ちがすごいあって、
@Guest 47:46
なんか構造書いてないctoとか。なんか、自分の会社のプロダクトにのリポジにコミットが残ってないctoになるのは嫌だ。みたいなところがあったんで、
@Guest 47:56
なんかやらせてもらったみたいなところもあります。まあ、これからこれからが大変ですね。きっとその僕ら
@Guest 48:03
これ、これからの技術的な課題で言うと、まあ、先ほどからもチラチラお話してたんですけど、やっぱこう管理画面が重いんですよ。
@Guest 48:11
で、管理画面は、ストアーズプラットホームの管理画面ってなると、おサンプロダクトの管理画面、
@Guest 48:19
リポジトリ一緒にやるのみたいな話とか、お、これは何かしらの方法で分割しないともう作れなくねとか
@Guest 48:28
分割するんだったらどうするとか。てか、これ作ったらもうあと数年多分生き残るし、
@Guest 48:35
アーキテクチャになっちゃうと思うけど、ほんとにこれでいいんだっけとか、割と技術的に難しい課題はこれから残っている。待っているだろうなっていうところあるので、
@Guest 48:45
そこらへんで。そうですね。僕がなんならかいいコントリエーションができたらいいかなってのは
@Guest 48:51
思ってますね。ま、でも、行動か書き続けてるっていうところであれば、そういう判断力とか、そういう判断に対する信頼感とかも全然違う気はしますよね。
@Guest 49:03
確かに、何にも書いてない人は不安になりますよね。まあまあ僕が直接そのじゃあ、
@Guest 49:10
マイクロフロントエンドの今回の仕組みは、こういう風にやります。みたいなことをやるっていうことは、おそらくないとは思ってるんですけど、
@Guest 49:18
大きなディレクションみたいなところでは、関わって僕がいることでより、それがうまくいくようになれるように、頑張りたいな。
@Guest 49:28
思ってますね。
@Guest 49:30
なんだろ、あの村さんがこうctoがフロンテンドに強いからって話じゃないかもしんないですけど、
@Guest 49:37
こう、藤村さんと最近、そのデザインシステムのコンポネを書いていて、まあ、上の人がこういう
@Guest 49:45
アーキテクチャにどんどんなっていくみたいな状態を割と避けられてるかなっていうのはあって、
@Guest 49:51
で、やっぱりそのctoとか。まあ、結構トップの方が開発に入った時に懸念されるのって、上から言われたことがどんどんこう。
@Guest 50:00
アーキテクチャとか実装になってしまうっていう、そのプロジェクトの人格が、まあ、ctoの人格になってしまうっていうことがあると思うんですけど、
@Guest 50:08
基本的にその中立の目で見るというか、
@Guest 50:12
1フロントエンド開発者として意見をしてくれているし、まあ、意見を拾ってくれているので、
@Guest 50:19
その面でそのなんか単純にめっちゃフロントエンド、詳しい人手があるみたいな。こう接し方が自分としてはできていて、
@Guest 50:28
え、より良いプロダクトにできているし、まあ、プロリックのレビューとかもこうぱっと投げて、普通にメンバーに出すような感覚でできてるので、
@Guest 50:38
そういった面でもすごいなんでしょうね。やりやすいですね、
@Guest 50:41
なんか、気軽に投げれんのいいっすね、めちゃめちゃ
@Guest 50:44
いや、僕が僕が決めたキテクチャを下ろすってやったら、もうスケールしないですからね。スケールしないうちに、僕が
@Guest 50:54
自分の部下だったら、それ嫌だなと思いますか。
@Guest 50:57
いや、でもなんかいいですね、こう決めた風に、上の人が決めた風にならないっていうなんだろう、なるべきではないっていうのが、両方からこう
@Guest 51:07
認識として固まってるってのはすごいいいことですね。
@Guest 51:12
うん、うん、
@Guest 51:13
cpoがフロントエンドに詳しいだけだと、なんかそうなっちゃうかなっていう気持ちもあるんで、うん、うん、
@Guest 51:26
ああ、そういうのはちょっと勘弁してほしい気はしますよね。
@Guest 51:31
なんか、俺はスケル付きだからあけてクチャ全部関数型にするぜみたいな。
@Guest 51:36
はいはいはいはい、
@Guest 51:38
ちょ、ちょっとなんかなんかこうも燃えそうな話
@Guest 51:45
ま。今のところその兆候はないので、まあ大丈夫ですけど、
@Guest 51:54
もし、いきなりカスにするぞって話を藤村さんが言い出したら、ここで収録して、暴露大会っていうのを
@Guest 52:02
いつでもお待ちしております。
@Guest 52:05
な、悩みの方で、
@Guest 52:06
しゃあ、そうそうすね、最近、実は関数型の歯磨き出してみたい。
@Guest 52:17
なんか、最近のヘイのあのジョブディレクション変わったなって思ったら、声かけていただければ、
@Guest 52:24
是非公開しましょう。公開レコーディングやっていきましょう。
@Guest 52:30
あ、ちなみに逆にえ、藤村さんの方から、なんか、フロントエンド詳しいctoでよかったなって、自分で思うことって、あんまりそんなに多くないかなとは思うんですけど、なんか今みたいな話とかを聞いてて
@Guest 52:42
ま。確かにこういったエピソードだったら、こういった経験が役に立ったなって思うこととかってあったりしますかね。なんか、普段の業の中で、
@Guest 52:52
ああ、それで言うと、フロントエンドにある程度分かっているctoで良かったことを今日いっぱいは、
@Guest 53:05
また、僕はあんま自分であんまわかんない分かんないかもしんないですね。でもまあ、
@Guest 53:13
客観的に見ると、フロントエンドの移住がとても多い大きいプロダクトのを抱えている会社のctoがまあなんだろうな。
@Guest 53:23
もし、もし、フロンテであんまわかってなかったら、色々大変なことはあったんだろうなっていうのを改めて考えると思いますかね。
@Guest 53:32
今今、比較的その課題を抱えずに進められている状態っていうのは、ま、ある程度詳しいところがあったからこそ、かなっていうのを思い返してみると、っていうとこですかね。
@Guest 53:43
なんか、こう。もし、もし自分がフロントのこと全くわからない人だったら、
@Guest 53:51
なんか今は起きてなかった罠を踏み抜いていたかもしれないな、とかいうのはちょっと思いました。
@Guest 53:58
確かに、うん、その気づかないや、今今対処できている問題が、まあ、実はそのその時対処できていなかったかもしれないみたいな
@Guest 54:07
ところ、
@Guest 54:08
そうそうそうそう、なんか、大体そういううまくいったことって対処できたことって記憶に残らないし、
@Guest 54:16
対処したことは出来たことって失敗してないんで、気づかないまま過ぎていく。ああ、そうですね、あ、そうそういうのはもしかしたらあったかもなって思いました。
@Guest 54:27
あとは、こう最悪ctoがフロンテント直せ
@Guest 54:32
のいつか、このこのそれをその手は使いたくないですけど、あのこ
@Guest 54:42
じゃあここんこのエピソードを通して、結構色々知ることができたって感じ。
@Guest 54:48
そうですね。やっぱ、自己認識の甘いし、量であるってことが暴露されてしまう。悲し悲しいんですけど、
@Guest 54:54
あ、最後ちょっと喋り忘れちゃったことはぜひぜひはい。あの、まあ、フロントエンドにこう強いだけじゃないのが多分
@Guest 55:03
なんか重要で。はいはい、サーバーは全くわかりませんだと、成り立たないと思ってます。なんで、まあ、あのフロントエンドも強いなのが大事なのかなってでま、結構自分みたいなフロントエンドにめちゃくちゃ偏ってしまってる
@Guest 55:17
スタックの人がこう。ctoになると、今度そのサーバー側の話にあんまり口を出せなくなって、うんうん
@Guest 55:24
ましまうというか、す進むべき方向を間違えそうになった時に、ctoの視点から意見するっていうのがましにくくなってしまう
@Guest 55:33
というのはあると思うんで。藤村さんの場合は、こうキャリアの中でサーバーをがっつり運用したっていうこともあると思うので、こう
@Guest 55:42
なんでしょうね。その面で両方できるctoだからこそ、成り立ってるっていうのはあるかなっていうのは思います。
@Guest 55:49
確かに、フロントエンドに詳しいctoっていうよりも、フロントエンドも十分に詳しいctoであることが、まあ、すごく
@Guest 55:58
今のパワーに繋がっているみたいな。うん、そうですね、
@Guest 56:01
確かに、フロントエンドだけ詳しい人が地域ので、結構大変そう
@Guest 56:04
ですね。そうっすね、
@Guest 56:06
うん、
@Guest 56:08
そりゃそうですけど、そりゃそうですけど、それこそじゃあidp作ろうとかってなるとやばいことになりそうですもんね。ある程度あ、詳しくない。
@Guest 56:21
じゃあ、えっと、次はえ、いきなりへと全然関係ない話を聞きたいなと思ってるんですけど、
@Guest 56:27
えっと、あ、藤川さんえっと、ビュー3本の出版おめでとうございま、
@Guest 56:32
ありがとうございます、すいません
@Guest 56:33
とろスタートしてから、1時間経ってから行ってしまうんですけど、えっと、ま出発されたかなと思うんですけど。あの、
@Guest 56:40
実際今あのさっきはえ、話してもらった中だと、えっと、
@Guest 56:45
ビーのえプロダクトとえビか、このクストえーのプロダクトリアクトっていう風な。えー、技術スタッフかなと思うんですけど、なんか、どれぐらいビー3って現場で使えてるのかな。みたいなのがちょっと気になってて、せっかくなんで、
@Guest 56:58
ちょっと全然あの、プロダクトとは関係ない話なんですけど、聞きたいなと思ってて、なんか、今の利用状況とかって、ビー3ってどんな感じですかね。
@Guest 57:08
そうですね、これはまあめちゃくちゃビュー3使ってて、プロダクションにも入ってます。って話をしたかったんですけど、
@Guest 57:15
な、なかなかそこまでいけてないっていうのが現状ですね。で、ビュースを最初は使おうと思って作ってはいたんですけど、
@Guest 57:25
こう、デザインシステムのコンポーネントもこうビスで書いてたんですけど、
@Guest 57:29
途中でnxストの方のプロジェクトに入れようとした時に、こう色々問題が出てきてしまって、
@Guest 57:35
今こうビートをまビルト環境としてビートを使っているんですけど、今はこうビート上でビーツを動かすようなプラグインがあるので、それを用いて開発してますね。
@Guest 57:48
じゃあ、ちょっとインテグレーションをするにあたって、どうしても、
@Guest 57:51
そのビービーアプリケーションていうのはなく、スアプリケーションっていうところが、まあ、そもそもまだビュー3対応していないっていうところもあって、
@Guest 57:58
最終的にはビー2向けて今運用はしているっていう風な状態ではあるってとこですね。
@Guest 58:04
そうですね、まあ、ただそのビスのマイグレーション可能性っていうのは、すごい大事だなって思ってて、やこいざビュースややろうってなった。
@Guest 58:14
思った時に、こうビー2の時代は使えたけど、ビスになって、公文とかまあ
@Guest 58:20
使えなくなったこう構文とか、機能を極力避けるようにはしてますね。なるほど、
@Guest 58:26
できるだけまあほぼビュー3まビューツとして動いてるだけで、コードベースとしては、ビュー3に近いものを目指して開発するっていう風な状態に、
@Guest 58:36
じゃああれですかね。あの、ビーツ向けのコンポレーション、apiのパッケージとかも、基本的には積極的に使ってやっていってるみたいな。
@Guest 58:44
ああ、そうですね、コンポジションapアに関しては、ナクスト側でももう使っていて
@Guest 58:50
で、新しいコードで、えっと、半年ぐらいですかね。半年以上、多分オプションjpaは書いてないっていう状態にはなってますね。
@Guest 58:59
で、書かれたコードが新しく増えることはなくて、えっと、デザインシステムのコンポーネントに関しても、全部コンポリッション。api
@Guest 59:07
じゃま。基本的にはまあ、ビルト環境がビー3になっていないだけで、書き心地としては、もうチームとしては、ビー3時代の書き方でますめてるっていう風な。
@Guest 59:17
そうですね、まあ、でもやっぱり肩がこう、ビュー3と比べると、ちょっと弱いなっていうのはまあったりはするので、
@Guest 59:26
そういった面で早くこうビュースリンできるといいなっていうのは思いますね。
@Guest 59:31
ま、やっぱりただそこにあたって1番おっきいのはまあナスとかv3入れてくれるかどうかっていうとこですかね。
@Guest 59:38
そうですね、あとはそのまビューでも、そのjsxdsxとかこう使いたい需要ってすごいあると思うんですけど、はい、
@Guest 59:47
まあ、あのビ2の時よりのjxよりも、ビ3のjsxの方が対応もシンプルで使いやすいです。し、うん、うん、
@Guest 59:55
そういった面でもまビュース早く使いたいなっていうのは思ってるんですけど、ちょっと難しかったんで、え。ビー2に
@Guest 60:03
まあ、ビーツとビュテプレートに変えてるっていう状況ではありますね。
@Guest 60:07
やっぱり、なかなかそこはちょっと1つのハードルになってる感じではあるんですね。
@Guest 60:12
そうですね、nxストプロダクトをこう運用していると、どうしてもそこは引っかかるなっていうのは思ったりしますね。
@Guest 60:19
すね、結構うちも、bのプロジェクトも、ラスのプロジェクトもあったり
@Guest 60:24
とか、色々あって、なかなかpgになれるにすぐできる。プロダクトとできないプロジェクトが、lineも混在してる感じなんですけど、
@Guest 60:32
やっぱどうしても共通の課題として、そこは出てくるんだなってのが
@Guest 60:38
と、ありがとうございます。
@Guest 60:40
なんか、ビュー3とかでた田さんたさんも、今ま結構ビュー3でプロジェクト開発することも多いかなと思いますけど、なんか聞いてみたいこととかあります。
@Guest 60:48
そうですね、いや、リスの方もあと半年平くみたかった、
@Guest 60:56
ちょうど半年前ぐらいそうですね、今年のこと、今年の初めですかね。ちょうどゆすり書き始めて、
@Guest 61:03
かなり試行錯誤しましたね、しかもあのぜ。あの、txxと組み合わせる形での記述だったので、あの、
@Guest 61:12
なんて言うんですかね。私はちjsxxで言うと、もう完全にリアクトでしか経験なかったので、
@Guest 61:22
なかなかとかですね。うん、うん、なんかこう周りに聞ける人がいると嬉しかったなっていう。
@Guest 61:33
みんな、手探りの中本が1冊あるっていうのは、かなり助かるところではありますもんね、
@Guest 61:38
皆さんぜひ買いましょう。
@Guest 61:43
そのビート、そのtsxをこう組み合わせた時に、なんかイベントのイベント名とか、こう命名の仕方がちょっと違ったりです。とか、
@Guest 61:52
あとは、クラスネームにしなくてよかったりとか、リアクトでやってる時の書き心地とだいぶ違うっていうのがあって、
@Guest 62:00
え、そもそもこうリアクティブシステム的にも、ビューとリアクトで全然違うっていうのがあって、
@Guest 62:07
え、コンポレーションapiに関しても、こう表出してるapi自体は似てるんですけど、そこのリアクティブシステムがこう違って、
@Guest 62:15
tsxと組み合わせた時に書きこ書き心地が違ったりするっていうのもまああったりするんで、
@Guest 62:23
実際にこうビュー3とtsxを組み合わせて書いてみると、
@Guest 62:27
なんか思った通りに動かないなとか、ビューのお作法に並ぶと、例えばエミットとかってどうするんだっけ。とか、そういう面で難しいところも
@Guest 62:36
まあったり、なするなっていう経験してみて、わかったって感じですね。
@Guest 62:41
逆に、藤川さんもそういったところはどうやってま。乗り越えたというか、見つけたというか、どどうですかね。
@Guest 62:50
ドキュメントとかもあんまりないような、なかったような。
@Guest 62:53
そうですね、ドキュメントに関しては、あんまりこうtsxと組み合わせて書く時の情報ってないかなっていうのは、自分も
@Guest 63:02
ま見てて思いましたね。で、ただなんかやっぱりググると
@Guest 63:07
やっぱ若干出てきたりはするんですよね、情報がうんで、そういうまあなんでしょう。先駆者の方がこうやっている
@Guest 63:16
のを拾ったりですとか、まあは肩がこうどうなっているのかってのを見てま情報を拾ってきたりです。とか、
@Guest 63:25
jsxとかって、バベルのプラグインで動いてたりするんですけど、
@Guest 63:28
コードがどうなっているのか、見に行ってで、どういうインターフェースになってるのかとか、肩どうなってるのかってのをこう拾ったり、そういうとこから情報を拾ったりしてますね。
@Guest 63:38
そうですね、私もリスのか、特に肩回りはソースコードを読んだりとかっていううん、形になっちゃったりとかしたんですけど、結構でもなんか
@Guest 63:47
割と着実に良くなってはいますよね。3.2でも、もうけ、なんかこう
@Guest 63:54
こここうなったらいいなって思ってる時がところがちょくちょくちゃんと治ってるとか。うんうん、うん、改善されているっていうところがあって、結構
@Guest 64:03
あれですよね。まだそのvスで出ては出たはいいんですけど、まだまだ改善する余地があるし、なんか、どんどんバージョンが上がっていきそうなうん、雰囲気を感じますよね。
@Guest 64:13
そうですね、なんか、方に関しては、ほんとなんかビーになってからかなり。あの
@Guest 64:18
ま言葉選ばないんですけど、まともになったなっていう印象があって、うんで、ま本にも。てかほ本だと、チャプター語でコンポーネントライブラリーを作ろうっていう
@Guest 64:30
ショーがあるんですけど、そこで、そのコンポーネントの
@Guest 64:35
ま、ビューのsfcコンポーネントのプロップスの方を利用先で保管するっていう。はいは、いまことがかなり簡単にできるようになってて、ビュースで
@Guest 64:45
まできるようになってて、で、パッケージェイソンのこう、タイプスフィールドにこうエクスポートしてるま、コンポーネントを
@Guest 64:54
やっぱまdxポートしてるインデックスtsですね。を指定してあげるだけで、利用側でこう。esmインポートした時に、プロップスの型情報まで
@Guest 65:03
そのまま伝えることができるようになってて、で、これがなんかビーツだと難しいというか、
@Guest 65:09
ま、プロップスがこうエーになってしまったりしてたんですけど、
@Guest 65:13
ビュー3でそこらへんが全て解決してるんで、かなりそのコンポーネント作るライブラリとして進化してるなっていうのは
@Guest 65:20
と思います。もう、なかなかたい体験してほしいんですけどね、こうな
@Guest 65:27
リアクトとそうですね、リアクトとタイプスクリップの相性ってかなりいいなっていう風に感じるんですけど、まあ、あのなんでしょうね。ビューもかなり
@Guest 65:37
改善していて、問題なく使えるレベルにはなってきてるっていうのはあるんで、
@Guest 65:42
まあ、そうですね、ぜひこう僕の本を買っていただかなくてもいいんで、1度ビーでライブラリ作っていただけると、すごい
@Guest 65:52
ま、今のビーってこんなにたび性いいんだっていうのはま、体験できそうだなっていうのは思いますね。
@Guest 66:00
そうですね、最近、ビートでライバル向けの開発環境も作りやすくなりましたしね。うん、前とかだと結構大変だったしっていうのも
@Guest 66:10
よくなりましたし。なんか、そういうライブラリ単位でも、ちょっとやってみてもらいたいとこ
@Guest 66:15
ありますよね。うん、
@Guest 66:17
そうですね、ビートはかなり大きいなっていうのは思いますね。
@Guest 66:22
そうっすね、
@Guest 66:25
そんな感じですかね、はい、じゃあえぜひ、えっとですね、まだ、このエピソードを聞いている人で、まだビュー3とあったことがないよという方は、え、既存のえ、ビュー2のパッケージをビュー3化してみたいとかっていうところで、
@Guest 66:38
まずは試しに今のビュースリーのパワーを体験してもらっていくといいのかな、という
@Guest 66:46
しましたね。なんか、ビスの話をすると、毎回こういう話をしてる。
@Guest 66:50
違う
@Guest 66:51
しますけど、そうですね、かなり進化してるとこも、体験してもらえるといい気がしますね。では、クロージングの方に移りたいと思います。
@Guest 67:06
というわけでえ、今回はえ、弊社の2年名2名とともにえ、弊社の最新事事情のフロントエンド組織の開発の様子などなどについて話を聞いていきました。
@Guest 67:17
ライン株式会社のえ、フロントエンド組織uitでは。えと、ちょっと。今日はえっと、個別の話でしたけど、え、普段はえ、フロンテンドについてのえ、議論やえ、
@Guest 67:27
情報交換など日々行っておりいます。え、これまでuitインサイドで公開したエピソードは、え、社内での意見交換や勉強会などなどから生まれたものもありますので、え、これからも社内社内のえ、
@Guest 67:41
テーマ問わずえ、様々な情報を発信していければなと思っております。
@Guest 67:46
え、またえ、このエピソードを聞いてえと何か感想などなどがありましたらえ、ハッシュタグ、えーシャープ、uit、アンダースコアインサイドにて滑っていただきます。と、
@Guest 67:57
上の方で、えーガンガン拾わせていただければと思っておりますので、お気軽についていただければと思います。え、また、
@Guest 68:04
このエピソードとして、え、ライのフロンテのに興味を持っていただいた方がいらっしゃいました。ら、え、ぜひぜひエピソード、再花部、え、翔も再下部にあります。え、求人のリンクよりご連絡いただければと思います。
@Guest 68:16
え、またえ、そうですね、このエピソードで、多分え興味を持ってもらえるのはえ、lineじゃなくて、え、弊社のかなと思うんですけど、弊社にえ、気になった方については、
@Guest 68:26
どうしたらよさそうですかね。藤村さん
@Guest 68:29
そうですね、あの、弊社弊社の方の弊社でも、あの、ちょっとエピソードの中でもお話したんですけど、フロンテーンズの仕事がめっちゃあるんですよ。
@Guest 68:38
難しい仕事いっぱいで、結構挑戦が大きくて、直接こう使ってくださってる方に、いろんな価値を届けられるフロントンでの技術力で、いろんな価値を届けられる
@Guest 68:48
ページを僕らとした用意してます。んで、一緒にこう
@Guest 68:53
オーナーさんにアを届けられる、お腹の子を助ける道具を作っていけるきたいなっていう方がいたら、ぜひぜひ
@Guest 68:59
lineさんもとても魅力的な会社だなって思うんですけど、ご連絡いただけると、とても嬉しいですよろしくお願いしま
@Guest 69:07
ぜひともmiともお願いいたします
@Guest 69:11
お願いします
@Guest 69:12
てわけでえ、本日は弊社よりお2人にゲストに来ていただいて話していきましたえ、本日はありがとうございました、
@Guest 69:19
ありがとうございましたあとうございま
@Guest 69:21
ありがとうございました。